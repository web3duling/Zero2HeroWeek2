{
	"id": "15f35341f0265e82ad8fb1d7f3f0fcbe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.16;\n\n// Inheritance\nimport \"./Owned.sol\";\n\n// https://docs.synthetix.io/contracts/source/contracts/pausable\ncontract Pausable is Owned(msg.sender) {\n    uint public lastPauseTime;\n    bool public paused;\n\n    constructor() {\n        // This contract is abstract, and thus cannot be instantiated directly\n        require(owner != address(0), \"Owner must be set\");\n        // Paused will be false, and lastPauseTime will be 0 upon initialisation\n    }\n\n    /**\n     * @notice Change the paused state of the contract\n     * @dev Only the contract owner may call this.\n     */\n    function setPaused(bool _paused) external onlyOwner {\n        // Ensure we're actually changing the state before we do anything\n        if (_paused == paused) {\n            return;\n        }\n\n        // Set our paused state.\n        paused = _paused;\n\n        // If applicable, set the last pause time.\n        if (paused) {\n            lastPauseTime = block.timestamp;\n        }\n\n        // Let everyone know that our pause state has changed.\n        emit PauseChanged(paused);\n    }\n\n    event PauseChanged(bool isPaused);\n\n    modifier notPaused {\n        require(!paused, \"This action cannot be performed while the contract is paused\");\n        _;\n    }\n}"
			},
			"contracts/Owned.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.16;\n\n// https://docs.synthetix.io/contracts/source/contracts/owned\ncontract Owned {\n    address public owner;\n    address public nominatedOwner;\n\n    constructor(address _owner) {\n        require(_owner != address(0), \"Owner address cannot be 0\");\n        owner = _owner;\n        emit OwnerChanged(address(0), _owner);\n    }\n\n    function nominateNewOwner(address _owner) external onlyOwner {\n        nominatedOwner = _owner;\n        emit OwnerNominated(_owner);\n    }\n\n    function acceptOwnership() external {\n        require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\");\n        emit OwnerChanged(owner, nominatedOwner);\n        owner = nominatedOwner;\n        nominatedOwner = address(0);\n    }\n\n    modifier onlyOwner {\n        _onlyOwner();\n        _;\n    }\n\n    function _onlyOwner() private view {\n        require(msg.sender == owner, \"Only the contract owner may perform this action\");\n    }\n\n    event OwnerNominated(address newOwner);\n    event OwnerChanged(address oldOwner, address newOwner);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Owned.sol": {
				"Owned": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Owned.sol\":120:1102  contract Owned {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Owned.sol\":203:377  constructor(address _owner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Owned.sol\":249:269  _owner != address(0) */\n  dup2\n  and\n    /* \"contracts/Owned.sol\":241:299  require(_owner != address(0), \"Owner address cannot be 0\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":511:513   */\n  0x20\n    /* \"contracts/Owned.sol\":241:299  require(_owner != address(0), \"Owner address cannot be 0\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":493:514   */\n  mstore\n    /* \"#utility.yul\":550:552   */\n  0x19\n    /* \"#utility.yul\":530:548   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":523:553   */\n  mstore\n    /* \"#utility.yul\":589:616   */\n  0x4f776e657220616464726573732063616e6e6f74206265203000000000000000\n    /* \"#utility.yul\":569:587   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":562:617   */\n  mstore\n    /* \"#utility.yul\":634:652   */\n  0x64\n  add\n    /* \"contracts/Owned.sol\":241:299  require(_owner != address(0), \"Owner address cannot be 0\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/Owned.sol\":309:314  owner */\n  0x00\n    /* \"contracts/Owned.sol\":309:323  owner = _owner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/Owned.sol\":338:370  OwnerChanged(address(0), _owner) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":875:909   */\n  swap3\n  dup4\n  mstore\n    /* \"#utility.yul\":940:942   */\n  0x20\n    /* \"#utility.yul\":925:943   */\n  dup4\n  add\n    /* \"#utility.yul\":918:961   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"contracts/Owned.sol\":338:370  OwnerChanged(address(0), _owner) */\n  0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n  swap2\n    /* \"#utility.yul\":810:828   */\n  add\n    /* \"contracts/Owned.sol\":338:370  OwnerChanged(address(0), _owner) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/Owned.sol\":203:377  constructor(address _owner) {... */\n  pop\n    /* \"contracts/Owned.sol\":120:1102  contract Owned {... */\n  jump(tag_12)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_14:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_15\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_15:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":663:967   */\ntag_12:\n    /* \"contracts/Owned.sol\":120:1102  contract Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Owned.sol\":120:1102  contract Owned {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1627540c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x53a47bb7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Owned.sol\":383:521  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Owned.sol\":167:196  address public nominatedOwner */\n    tag_4:\n      sload(0x01)\n      tag_11\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_11:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Owned.sol\":167:196  address public nominatedOwner */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":527:793  function acceptOwnership() external {... */\n    tag_5:\n      tag_7\n      tag_16\n      jump\t// in\n        /* \"contracts/Owned.sol\":141:161  address public owner */\n    tag_6:\n      sload(0x00)\n      tag_11\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Owned.sol\":383:521  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_10:\n        /* \"contracts/Owned.sol\":828:840  _onlyOwner() */\n      tag_21\n        /* \"contracts/Owned.sol\":828:838  _onlyOwner */\n      tag_22\n        /* \"contracts/Owned.sol\":828:840  _onlyOwner() */\n      jump\t// in\n    tag_21:\n        /* \"contracts/Owned.sol\":454:468  nominatedOwner */\n      0x01\n        /* \"contracts/Owned.sol\":454:477  nominatedOwner = _owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Owned.sol\":492:514  OwnerNominated(_owner) */\n      mload(0x40)\n        /* \"#utility.yul\":451:502   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Owned.sol\":492:514  OwnerNominated(_owner) */\n      0x906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Owned.sol\":492:514  OwnerNominated(_owner) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":383:521  function nominateNewOwner(address _owner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Owned.sol\":527:793  function acceptOwnership() external {... */\n    tag_16:\n        /* \"contracts/Owned.sol\":595:609  nominatedOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Owned.sol\":581:591  msg.sender */\n      caller\n        /* \"contracts/Owned.sol\":581:609  msg.sender == nominatedOwner */\n      eq\n        /* \"contracts/Owned.sol\":573:667  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"contracts/Owned.sol\":573:667  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      mstore\n        /* \"#utility.yul\":754:756   */\n      0x35\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n        /* \"#utility.yul\":793:827   */\n      0x596f75206d757374206265206e6f6d696e61746564206265666f726520796f75\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:828   */\n      mstore\n      shl(0x5c, 0x02063616e20616363657074206f776e65727368697)\n        /* \"#utility.yul\":844:862   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":837:888   */\n      mstore\n        /* \"#utility.yul\":905:924   */\n      0x84\n      add\n        /* \"contracts/Owned.sol\":573:667  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"contracts/Owned.sol\":695:700  owner */\n      sload(0x00)\n      0x01\n        /* \"contracts/Owned.sol\":702:716  nominatedOwner */\n      sload\n        /* \"contracts/Owned.sol\":682:717  OwnerChanged(owner, nominatedOwner) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Owned.sol\":695:700  owner */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":1147:1181   */\n      dup2\n      mstore\n        /* \"contracts/Owned.sol\":702:716  nominatedOwner */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1212:1214   */\n      0x20\n        /* \"#utility.yul\":1197:1215   */\n      dup4\n      add\n        /* \"#utility.yul\":1190:1233   */\n      mstore\n        /* \"contracts/Owned.sol\":682:717  OwnerChanged(owner, nominatedOwner) */\n      0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n      swap2\n        /* \"#utility.yul\":1082:1100   */\n      add\n        /* \"contracts/Owned.sol\":682:717  OwnerChanged(owner, nominatedOwner) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":735:749  nominatedOwner */\n      0x01\n      dup1\n      sload\n      0x00\n        /* \"contracts/Owned.sol\":727:749  owner = nominatedOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Owned.sol\":735:749  nominatedOwner */\n      dup5\n      and\n        /* \"contracts/Owned.sol\":727:749  owner = nominatedOwner */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Owned.sol\":759:786  nominatedOwner = address(0) */\n      and\n      swap1\n      sstore\n        /* \"contracts/Owned.sol\":527:793  function acceptOwnership() external {... */\n      jump\t// out\n        /* \"contracts/Owned.sol\":864:995  function _onlyOwner() private view {... */\n    tag_22:\n        /* \"contracts/Owned.sol\":931:936  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Owned.sol\":917:927  msg.sender */\n      caller\n        /* \"contracts/Owned.sol\":917:936  msg.sender == owner */\n      eq\n        /* \"contracts/Owned.sol\":909:988  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1446:1448   */\n      0x20\n        /* \"contracts/Owned.sol\":909:988  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1428:1449   */\n      mstore\n        /* \"#utility.yul\":1485:1487   */\n      0x2f\n        /* \"#utility.yul\":1465:1483   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1458:1488   */\n      mstore\n        /* \"#utility.yul\":1524:1558   */\n      0x4f6e6c792074686520636f6e7472616374206f776e6572206d61792070657266\n        /* \"#utility.yul\":1504:1522   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1497:1559   */\n      mstore\n      shl(0x89, 0x37b936903a3434b99030b1ba34b7b7)\n        /* \"#utility.yul\":1575:1593   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1568:1613   */\n      mstore\n        /* \"#utility.yul\":1630:1649   */\n      0x84\n      add\n        /* \"contracts/Owned.sol\":909:988  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      tag_27\n        /* \"#utility.yul\":1244:1655   */\n      jump\n        /* \"contracts/Owned.sol\":909:988  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n    tag_32:\n        /* \"contracts/Owned.sol\":864:995  function _onlyOwner() private view {... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_9:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_37:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_38:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204932de90fcf8d479b6f1a5d3005a85c52a906460897cf2334af0985d12a7e95264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_33": {
									"entryPoint": null,
									"id": 33,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:969:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:2"
															},
															"nodeType": "YulIf",
															"src": "105:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:2"
															},
															"nodeType": "YulIf",
															"src": "204:70:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:2",
														"type": ""
													}
												],
												"src": "14:290:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "483:175:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "511:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "534:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "545:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "530:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "530:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:2:2",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "573:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "584:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "569:18:2"
																	},
																	{
																		"hexValue": "4f776e657220616464726573732063616e6e6f742062652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "589:27:2",
																		"type": "",
																		"value": "Owner address cannot be 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:55:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:55:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "626:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "638:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "649:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "634:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "634:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "626:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "460:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "474:4:2",
														"type": ""
													}
												],
												"src": "309:349:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "792:175:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "802:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "814:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "825:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "810:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "802:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "837:29:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "855:3:2",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "860:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "851:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "851:11:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "864:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "847:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:19:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "841:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "897:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "905:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "893:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "893:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "875:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "929:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "940:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "925:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "925:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "949:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "957:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "945:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "918:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "918:43:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "753:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "764:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "772:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "783:4:2",
														"type": ""
													}
												],
												"src": "663:304:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Owner address cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103fa3803806103fa83398101604081905261002f916100e6565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b03831690811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a150610116565b6000602082840312156100f857600080fd5b81516001600160a01b038116811461010f57600080fd5b9392505050565b6102d5806101256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631627540c1461005157806353a47bb71461006657806379ba5097146100955780638da5cb5b1461009d575b600080fd5b61006461005f36600461026f565b6100b0565b005b600154610079906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61006461010c565b600054610079906001600160a01b031681565b6100b86101fb565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b6001546001600160a01b031633146101895760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b60648201526084015b60405180910390fd5b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b0316331461026d5760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b6064820152608401610180565b565b60006020828403121561028157600080fd5b81356001600160a01b038116811461029857600080fd5b939250505056fea26469706673582212204932de90fcf8d479b6f1a5d3005a85c52a906460897cf2334af0985d12a7e95264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3FA CODESIZE SUB DUP1 PUSH2 0x3FA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616464726573732063616E6E6F74206265203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x116 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2D5 DUP1 PUSH2 0x125 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1627540C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x26F JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x10C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x26D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x180 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 ORIGIN 0xDE SWAP1 0xFC 0xF8 0xD4 PUSH26 0xB6F1A5D3005A85C52A906460897CF2334AF0985D12A7E9526473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "120:982:0:-:0;;;203:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;249:20:0;;241:58;;;;-1:-1:-1;;;241:58:0;;511:2:2;241:58:0;;;493:21:2;550:2;530:18;;;523:30;589:27;569:18;;;562:55;634:18;;241:58:0;;;;;;;;309:5;:14;;-1:-1:-1;;;;;;309:14:0;-1:-1:-1;;;;;309:14:0;;;;;;;338:32;;;875:34:2;;;940:2;925:18;;918:43;;;;338:32:0;;810:18:2;338:32:0;;;;;;;203:174;120:982;;14:290:2;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:2;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:2:o;663:304::-;120:982:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_onlyOwner_96": {
									"entryPoint": 507,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_77": {
									"entryPoint": 268,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nominateNewOwner_49": {
									"entryPoint": 176,
									"id": 49,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@nominatedOwner_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1657:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:2"
															},
															"nodeType": "YulIf",
															"src": "94:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:2"
															},
															"nodeType": "YulIf",
															"src": "200:70:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:2",
														"type": ""
													}
												],
												"src": "14:286:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "416:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "489:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "494:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "498:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "375:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "386:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "397:4:2",
														"type": ""
													}
												],
												"src": "305:203:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "687:243:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "697:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "749:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:2",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "727:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "788:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:2"
																	},
																	{
																		"hexValue": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "793:34:2",
																		"type": "",
																		"value": "You must be nominated before you"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "848:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "859:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "844:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "844:18:2"
																	},
																	{
																		"hexValue": "2063616e20616363657074206f776e657273686970",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "864:23:2",
																		"type": "",
																		"value": " can accept ownership"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "837:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "837:51:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "897:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "909:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "920:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "905:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "897:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "664:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "678:4:2",
														"type": ""
													}
												],
												"src": "513:417:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1064:175:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1074:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1086:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1097:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1082:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1082:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1074:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1109:29:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1127:3:2",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1132:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1123:11:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1136:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1119:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:19:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1113:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1154:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1169:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1177:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1165:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1165:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1147:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1147:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1147:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1201:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1212:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1197:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1197:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1221:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1229:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1217:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1217:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1190:43:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1025:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1036:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1044:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1055:4:2",
														"type": ""
													}
												],
												"src": "935:304:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:237:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1435:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1446:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1428:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1469:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1480:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1465:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1465:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1485:2:2",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1458:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1458:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1508:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1519:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:2"
																	},
																	{
																		"hexValue": "4f6e6c792074686520636f6e7472616374206f776e6572206d61792070657266",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1524:34:2",
																		"type": "",
																		"value": "Only the contract owner may perf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1497:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1497:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1579:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1590:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1575:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1575:18:2"
																	},
																	{
																		"hexValue": "6f726d207468697320616374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1595:17:2",
																		"type": "",
																		"value": "orm this action"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1568:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1568:45:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1568:45:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1622:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1634:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1630:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1630:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1622:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1395:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1409:4:2",
														"type": ""
													}
												],
												"src": "1244:411:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"You must be nominated before you\")\n        mstore(add(headStart, 96), \" can accept ownership\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"Only the contract owner may perf\")\n        mstore(add(headStart, 96), \"orm this action\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631627540c1461005157806353a47bb71461006657806379ba5097146100955780638da5cb5b1461009d575b600080fd5b61006461005f36600461026f565b6100b0565b005b600154610079906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61006461010c565b600054610079906001600160a01b031681565b6100b86101fb565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b6001546001600160a01b031633146101895760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b60648201526084015b60405180910390fd5b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b0316331461026d5760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b6064820152608401610180565b565b60006020828403121561028157600080fd5b81356001600160a01b038116811461029857600080fd5b939250505056fea26469706673582212204932de90fcf8d479b6f1a5d3005a85c52a906460897cf2334af0985d12a7e95264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1627540C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x26F JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x10C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x189 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x26D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x180 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 ORIGIN 0xDE SWAP1 0xFC 0xF8 0xD4 PUSH26 0xB6F1A5D3005A85C52A906460897CF2334AF0985D12A7E9526473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "120:982:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:138;;;;;;:::i;:::-;;:::i;:::-;;167:29;;;;;-1:-1:-1;;;;;167:29:0;;;;;;-1:-1:-1;;;;;469:32:2;;;451:51;;439:2;424:18;167:29:0;;;;;;;527:266;;;:::i;141:20::-;;;;;-1:-1:-1;;;;;141:20:0;;;383:138;828:12;:10;:12::i;:::-;454:14:::1;:23:::0;;-1:-1:-1;;;;;;454:23:0::1;-1:-1:-1::0;;;;;454:23:0;::::1;::::0;;::::1;::::0;;;492:22:::1;::::0;451:51:2;;;492:22:0::1;::::0;439:2:2;424:18;492:22:0::1;;;;;;;383:138:::0;:::o;527:266::-;595:14;;-1:-1:-1;;;;;595:14:0;581:10;:28;573:94;;;;-1:-1:-1;;;573:94:0;;715:2:2;573:94:0;;;697:21:2;754:2;734:18;;;727:30;793:34;773:18;;;766:62;-1:-1:-1;;;844:18:2;;;837:51;905:19;;573:94:0;;;;;;;;;695:5;;;702:14;682:35;;;-1:-1:-1;;;;;695:5:0;;;1147:34:2;;702:14:0;;;;1212:2:2;1197:18;;1190:43;682:35:0;;1082:18:2;682:35:0;;;;;;;735:14;;;;727:22;;-1:-1:-1;;;;;;727:22:0;;;-1:-1:-1;;;;;735:14:0;;727:22;;;;759:27;;;527:266::o;864:131::-;931:5;;-1:-1:-1;;;;;931:5:0;917:10;:19;909:79;;;;-1:-1:-1;;;909:79:0;;1446:2:2;909:79:0;;;1428:21:2;1485:2;1465:18;;;1458:30;1524:34;1504:18;;;1497:62;-1:-1:-1;;;1575:18:2;;;1568:45;1630:19;;909:79:0;1244:411:2;909:79:0;864:131::o;14:286:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:2;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "145000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "56348",
								"nominateNewOwner(address)": "27731",
								"nominatedOwner()": "2325",
								"owner()": "2369"
							},
							"internal": {
								"_onlyOwner()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 120,
									"end": 1102,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 120,
									"end": 1102,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 120,
									"end": 1102,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 377,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 377,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 203,
									"end": 377,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 203,
									"end": 377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 203,
									"end": 377,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 203,
									"end": 377,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 203,
									"end": 377,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 249,
									"end": 269,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 249,
									"end": 269,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 241,
									"end": 299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 511,
									"end": 513,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 493,
									"end": 514,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 530,
									"end": 548,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 523,
									"end": 553,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 589,
									"end": 616,
									"name": "PUSH",
									"source": 2,
									"value": "4F776E657220616464726573732063616E6E6F74206265203000000000000000"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 562,
									"end": 617,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 634,
									"end": 652,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 634,
									"end": 652,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 241,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 309,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 323,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 309,
									"end": 323,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 309,
									"end": 323,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 338,
									"end": 370,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 875,
									"end": 909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 875,
									"end": 909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 875,
									"end": 909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 940,
									"end": 942,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 925,
									"end": 943,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 925,
									"end": 943,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 918,
									"end": 961,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 918,
									"end": 961,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 918,
									"end": 961,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 918,
									"end": 961,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 338,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
								},
								{
									"begin": 338,
									"end": 370,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 338,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 338,
									"end": 370,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "LOG1",
									"source": 0
								},
								{
									"begin": 203,
									"end": 377,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 120,
									"end": 1102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 120,
									"end": 1102,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 663,
									"end": 967,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 663,
									"end": 967,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 120,
									"end": 1102,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 1102,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 120,
									"end": 1102,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 1102,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 1102,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 120,
									"end": 1102,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 1102,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204932de90fcf8d479b6f1a5d3005a85c52a906460897cf2334af0985d12a7e95264736f6c63430008120033",
									".code": [
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "1627540C"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "53A47BB7"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "79BA5097"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 1102,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 383,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 383,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 167,
											"end": 196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 167,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 527,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 527,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 527,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 527,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 141,
											"end": 161,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 141,
											"end": 161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 141,
											"end": 161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 141,
											"end": 161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 141,
											"end": 161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 141,
											"end": 161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 141,
											"end": 161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 828,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 828,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 828,
											"end": 840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 840,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 828,
											"end": 840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 454,
											"end": 468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 454,
											"end": 477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 454,
											"end": 477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22"
										},
										{
											"begin": 492,
											"end": 514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 527,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 595,
											"end": 609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 595,
											"end": 609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 581,
											"end": 591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 581,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 573,
											"end": 667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 793,
											"end": 827,
											"name": "PUSH",
											"source": 2,
											"value": "596F75206D757374206265206E6F6D696E61746564206265666F726520796F75"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 766,
											"end": 828,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2063616E20616363657074206F776E65727368697"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 844,
											"end": 862,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 844,
											"end": 862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 844,
											"end": 862,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 837,
											"end": 888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 905,
											"end": 924,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 905,
											"end": 924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 573,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 695,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 695,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 702,
											"end": 716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 695,
											"end": 700,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 695,
											"end": 700,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 695,
											"end": 700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 702,
											"end": 716,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 702,
											"end": 716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 702,
											"end": 716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 702,
											"end": 716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1214,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 682,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
										},
										{
											"begin": 682,
											"end": 717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1100,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 682,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 727,
											"end": 749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 735,
											"end": 749,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 735,
											"end": 749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 759,
											"end": 786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 786,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 527,
											"end": 793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 995,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 864,
											"end": 995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 931,
											"end": 936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 917,
											"end": 927,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 917,
											"end": 936,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 909,
											"end": 988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 909,
											"end": 988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1487,
											"name": "PUSH",
											"source": 2,
											"value": "2F"
										},
										{
											"begin": 1465,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1465,
											"end": 1483,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1559,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B936903A3434B99030B1BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1568,
											"end": 1613,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1649,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1630,
											"end": 1649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1244,
											"end": 1655,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 909,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/Owned.sol",
								"contracts/Pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Owned.sol\":\"Owned\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Owned.sol\":{\"keccak256\":\"0xbca0504b2cff7f1782aa3bf2d0826dd79947507e642c8fa1b67a91441eba304d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea35d656c8e0f56c6a0f5f2f259496b30d8ce15498f09fd6293fdf81d96f831b\",\"dweb:/ipfs/QmScsjkrFG35vViSnhGoSguuchSFD4ymFuLBfx7ri3Ss7Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Owned.sol:Owned",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/Owned.sol:Owned",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isPaused",
									"type": "bool"
								}
							],
							"name": "PauseChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastPauseTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_paused",
									"type": "bool"
								}
							],
							"name": "setPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"setPaused(bool)": {
								"details": "Only the contract owner may call this."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Pausable.sol\":161:1289  contract Pausable is Owned(msg.sender) {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Pausable.sol\":262:502  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Pausable.sol\":188:198  msg.sender */\n  caller\n  dup1\n    /* \"contracts/Owned.sol\":241:299  require(_owner != address(0), \"Owner address cannot be 0\") */\n  tag_5\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"contracts/Owned.sol\":241:299  require(_owner != address(0), \"Owner address cannot be 0\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x19\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:321   */\n  0x4f776e657220616464726573732063616e6e6f74206265203000000000000000\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:322   */\n  mstore\n    /* \"#utility.yul\":339:357   */\n  0x64\n  add\n    /* \"contracts/Owned.sol\":241:299  require(_owner != address(0), \"Owner address cannot be 0\") */\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_5:\n    /* \"contracts/Owned.sol\":309:314  owner */\n  0x00\n    /* \"contracts/Owned.sol\":309:323  owner = _owner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/Owned.sol\":338:370  OwnerChanged(address(0), _owner) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":580:614   */\n  swap3\n  dup4\n  mstore\n    /* \"#utility.yul\":645:647   */\n  0x20\n    /* \"#utility.yul\":630:648   */\n  dup4\n  add\n    /* \"#utility.yul\":623:666   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"contracts/Owned.sol\":338:370  OwnerChanged(address(0), _owner) */\n  0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n  swap2\n    /* \"#utility.yul\":515:533   */\n  add\n    /* \"contracts/Owned.sol\":338:370  OwnerChanged(address(0), _owner) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n  pop\n    /* \"contracts/Pausable.sol\":390:391  0 */\n  0x00\n    /* \"contracts/Pausable.sol\":373:378  owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"contracts/Pausable.sol\":365:414  require(owner != address(0), \"Owner must be set\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":879:881   */\n  0x20\n    /* \"contracts/Pausable.sol\":365:414  require(owner != address(0), \"Owner must be set\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":861:882   */\n  mstore\n    /* \"#utility.yul\":918:920   */\n  0x11\n    /* \"#utility.yul\":898:916   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":891:921   */\n  mstore\n  shl(0x7a, 0x13dddb995c881b5d5cdd081899481cd95d)\n    /* \"#utility.yul\":937:955   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":930:977   */\n  mstore\n    /* \"#utility.yul\":994:1012   */\n  0x64\n  add\n    /* \"contracts/Pausable.sol\":365:414  require(owner != address(0), \"Owner must be set\") */\n  tag_6\n    /* \"#utility.yul\":677:1018   */\n  jump\n    /* \"contracts/Pausable.sol\":365:414  require(owner != address(0), \"Owner must be set\") */\ntag_11:\n    /* \"contracts/Pausable.sol\":161:1289  contract Pausable is Owned(msg.sender) {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Pausable.sol\":161:1289  contract Pausable is Owned(msg.sender) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x91b4ded9\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup1\n      0x1627540c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x16c38b3c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x53a47bb7\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Owned.sol\":383:521  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_3:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/Pausable.sol\":630:1114  function setPaused(bool _paused) external onlyOwner {... */\n    tag_4:\n      tag_11\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n        /* \"contracts/Owned.sol\":167:196  address public nominatedOwner */\n    tag_5:\n      sload(0x01)\n      tag_19\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":747:779   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":729:780   */\n      dup2\n      mstore\n        /* \"#utility.yul\":717:719   */\n      0x20\n        /* \"#utility.yul\":702:720   */\n      add\n        /* \"contracts/Owned.sol\":167:196  address public nominatedOwner */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":237:255  bool public paused */\n    tag_6:\n      sload(0x03)\n      tag_23\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":956:970   */\n      swap1\n      iszero\n        /* \"#utility.yul\":949:971   */\n      iszero\n        /* \"#utility.yul\":931:972   */\n      dup2\n      mstore\n        /* \"#utility.yul\":919:921   */\n      0x20\n        /* \"#utility.yul\":904:922   */\n      add\n        /* \"contracts/Pausable.sol\":237:255  bool public paused */\n      tag_21\n        /* \"#utility.yul\":791:978   */\n      jump\n        /* \"contracts/Owned.sol\":527:793  function acceptOwnership() external {... */\n    tag_7:\n      tag_11\n      tag_28\n      jump\t// in\n        /* \"contracts/Owned.sol\":141:161  address public owner */\n    tag_8:\n      sload(0x00)\n      tag_19\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Pausable.sol\":206:231  uint public lastPauseTime */\n    tag_9:\n      tag_32\n      sload(0x02)\n      dup2\n      jump\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1129:1154   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1117:1119   */\n      0x20\n        /* \"#utility.yul\":1102:1120   */\n      add\n        /* \"contracts/Pausable.sol\":206:231  uint public lastPauseTime */\n      tag_21\n        /* \"#utility.yul\":983:1160   */\n      jump\n        /* \"contracts/Owned.sol\":383:521  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_14:\n        /* \"contracts/Owned.sol\":828:840  _onlyOwner() */\n      tag_37\n        /* \"contracts/Owned.sol\":828:838  _onlyOwner */\n      tag_38\n        /* \"contracts/Owned.sol\":828:840  _onlyOwner() */\n      jump\t// in\n    tag_37:\n        /* \"contracts/Owned.sol\":454:468  nominatedOwner */\n      0x01\n        /* \"contracts/Owned.sol\":454:477  nominatedOwner = _owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Owned.sol\":492:514  OwnerNominated(_owner) */\n      mload(0x40)\n        /* \"#utility.yul\":729:780   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Owned.sol\":492:514  OwnerNominated(_owner) */\n      0x906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22\n      swap1\n        /* \"#utility.yul\":717:719   */\n      0x20\n        /* \"#utility.yul\":702:720   */\n      add\n        /* \"contracts/Owned.sol\":492:514  OwnerNominated(_owner) */\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":383:521  function nominateNewOwner(address _owner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pausable.sol\":630:1114  function setPaused(bool _paused) external onlyOwner {... */\n    tag_18:\n        /* \"contracts/Owned.sol\":828:840  _onlyOwner() */\n      tag_42\n        /* \"contracts/Owned.sol\":828:838  _onlyOwner */\n      tag_38\n        /* \"contracts/Owned.sol\":828:840  _onlyOwner() */\n      jump\t// in\n    tag_42:\n        /* \"contracts/Pausable.sol\":781:787  paused */\n      and(0xff, sload(0x03))\n        /* \"contracts/Pausable.sol\":770:787  _paused == paused */\n      iszero\n      iszero\n      dup2\n      iszero\n      iszero\n        /* \"contracts/Pausable.sol\":766:820  if (_paused == paused) {... */\n      eq\n        /* \"contracts/Pausable.sol\":803:810  return; */\n      tag_43\n        /* \"contracts/Pausable.sol\":766:820  if (_paused == paused) {... */\n      jumpi\n        /* \"contracts/Pausable.sol\":863:869  paused */\n      0x03\n        /* \"contracts/Pausable.sol\":863:879  paused = _paused */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0xff\n        /* \"contracts/Pausable.sol\":945:951  paused */\n      and\n        /* \"contracts/Pausable.sol\":941:1009  if (paused) {... */\n      iszero\n      tag_45\n      jumpi\n        /* \"contracts/Pausable.sol\":983:998  block.timestamp */\n      timestamp\n        /* \"contracts/Pausable.sol\":967:980  lastPauseTime */\n      0x02\n        /* \"contracts/Pausable.sol\":967:998  lastPauseTime = block.timestamp */\n      sstore\n        /* \"contracts/Pausable.sol\":941:1009  if (paused) {... */\n    tag_45:\n        /* \"contracts/Pausable.sol\":1100:1106  paused */\n      sload(0x03)\n        /* \"contracts/Pausable.sol\":1087:1107  PauseChanged(paused) */\n      mload(0x40)\n        /* \"contracts/Pausable.sol\":1100:1106  paused */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":956:970   */\n      iszero\n        /* \"#utility.yul\":949:971   */\n      iszero\n        /* \"#utility.yul\":931:972   */\n      dup2\n      mstore\n        /* \"contracts/Pausable.sol\":1087:1107  PauseChanged(paused) */\n      0x8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5\n      swap1\n        /* \"#utility.yul\":919:921   */\n      0x20\n        /* \"#utility.yul\":904:922   */\n      add\n        /* \"contracts/Pausable.sol\":1087:1107  PauseChanged(paused) */\n      tag_40\n        /* \"#utility.yul\":791:978   */\n      jump\n        /* \"contracts/Owned.sol\":850:851  _ */\n    tag_43:\n        /* \"contracts/Pausable.sol\":630:1114  function setPaused(bool _paused) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Owned.sol\":527:793  function acceptOwnership() external {... */\n    tag_28:\n        /* \"contracts/Owned.sol\":595:609  nominatedOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Owned.sol\":581:591  msg.sender */\n      caller\n        /* \"contracts/Owned.sol\":581:609  msg.sender == nominatedOwner */\n      eq\n        /* \"contracts/Owned.sol\":573:667  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1367:1369   */\n      0x20\n        /* \"contracts/Owned.sol\":573:667  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1349:1370   */\n      mstore\n        /* \"#utility.yul\":1406:1408   */\n      0x35\n        /* \"#utility.yul\":1386:1404   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1379:1409   */\n      mstore\n        /* \"#utility.yul\":1445:1479   */\n      0x596f75206d757374206265206e6f6d696e61746564206265666f726520796f75\n        /* \"#utility.yul\":1425:1443   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1418:1480   */\n      mstore\n      shl(0x5c, 0x02063616e20616363657074206f776e65727368697)\n        /* \"#utility.yul\":1496:1514   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1489:1540   */\n      mstore\n        /* \"#utility.yul\":1557:1576   */\n      0x84\n      add\n        /* \"contracts/Owned.sol\":573:667  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"contracts/Owned.sol\":695:700  owner */\n      sload(0x00)\n      0x01\n        /* \"contracts/Owned.sol\":702:716  nominatedOwner */\n      sload\n        /* \"contracts/Owned.sol\":682:717  OwnerChanged(owner, nominatedOwner) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Owned.sol\":695:700  owner */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":1799:1833   */\n      dup2\n      mstore\n        /* \"contracts/Owned.sol\":702:716  nominatedOwner */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1864:1866   */\n      0x20\n        /* \"#utility.yul\":1849:1867   */\n      dup4\n      add\n        /* \"#utility.yul\":1842:1885   */\n      mstore\n        /* \"contracts/Owned.sol\":682:717  OwnerChanged(owner, nominatedOwner) */\n      0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n      swap2\n        /* \"#utility.yul\":1734:1752   */\n      add\n        /* \"contracts/Owned.sol\":682:717  OwnerChanged(owner, nominatedOwner) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":735:749  nominatedOwner */\n      0x01\n      dup1\n      sload\n      0x00\n        /* \"contracts/Owned.sol\":727:749  owner = nominatedOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Owned.sol\":735:749  nominatedOwner */\n      dup5\n      and\n        /* \"contracts/Owned.sol\":727:749  owner = nominatedOwner */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Owned.sol\":759:786  nominatedOwner = address(0) */\n      and\n      swap1\n      sstore\n        /* \"contracts/Owned.sol\":527:793  function acceptOwnership() external {... */\n      jump\t// out\n        /* \"contracts/Owned.sol\":864:995  function _onlyOwner() private view {... */\n    tag_38:\n        /* \"contracts/Owned.sol\":931:936  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Owned.sol\":917:927  msg.sender */\n      caller\n        /* \"contracts/Owned.sol\":917:936  msg.sender == owner */\n      eq\n        /* \"contracts/Owned.sol\":909:988  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2098:2100   */\n      0x20\n        /* \"contracts/Owned.sol\":909:988  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2080:2101   */\n      mstore\n        /* \"#utility.yul\":2137:2139   */\n      0x2f\n        /* \"#utility.yul\":2117:2135   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2110:2140   */\n      mstore\n        /* \"#utility.yul\":2176:2210   */\n      0x4f6e6c792074686520636f6e7472616374206f776e6572206d61792070657266\n        /* \"#utility.yul\":2156:2174   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2149:2211   */\n      mstore\n      shl(0x89, 0x37b936903a3434b99030b1ba34b7b7)\n        /* \"#utility.yul\":2227:2245   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2220:2265   */\n      mstore\n        /* \"#utility.yul\":2282:2301   */\n      0x84\n      add\n        /* \"contracts/Owned.sol\":909:988  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      tag_49\n        /* \"#utility.yul\":1896:2307   */\n      jump\n        /* \"contracts/Owned.sol\":909:988  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n    tag_54:\n        /* \"contracts/Owned.sol\":864:995  function _onlyOwner() private view {... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_13:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_59:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_60:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:578   */\n    tag_17:\n        /* \"#utility.yul\":361:367   */\n      0x00\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":402:411   */\n      dup3\n        /* \"#utility.yul\":393:400   */\n      dup5\n        /* \"#utility.yul\":389:412   */\n      sub\n        /* \"#utility.yul\":385:417   */\n      slt\n        /* \"#utility.yul\":382:434   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":430:431   */\n      0x00\n        /* \"#utility.yul\":427:428   */\n      dup1\n        /* \"#utility.yul\":420:432   */\n      revert\n        /* \"#utility.yul\":382:434   */\n    tag_62:\n        /* \"#utility.yul\":469:478   */\n      dup2\n        /* \"#utility.yul\":456:479   */\n      calldataload\n        /* \"#utility.yul\":522:527   */\n      dup1\n        /* \"#utility.yul\":515:528   */\n      iszero\n        /* \"#utility.yul\":508:529   */\n      iszero\n        /* \"#utility.yul\":501:506   */\n      dup2\n        /* \"#utility.yul\":498:530   */\n      eq\n        /* \"#utility.yul\":488:548   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":544:545   */\n      0x00\n        /* \"#utility.yul\":541:542   */\n      dup1\n        /* \"#utility.yul\":534:546   */\n      revert\n\n    auxdata: 0xa2646970667358221220cae89dc691a678696b5b61b9ae5eb8bc073580952a4e796e8c8f571d23f0364864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_132": {
									"entryPoint": null,
									"id": 132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_33": {
									"entryPoint": null,
									"id": 33,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c87338ddde5ff52c699ea56bd9b81e21603f0adc0875fd9959e16afe2346ac96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1020:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:175:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:2",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:2"
																	},
																	{
																		"hexValue": "4f776e657220616464726573732063616e6e6f742062652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:27:2",
																		"type": "",
																		"value": "Owner address cannot be 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:55:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:55:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "331:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "354:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "339:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "339:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "331:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:2",
														"type": ""
													}
												],
												"src": "14:349:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "497:175:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "507:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "519:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "530:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "515:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "515:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "507:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "542:29:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "560:3:2",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "565:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "556:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:11:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "569:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "552:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:19:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "546:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "587:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "602:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "610:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "598:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "598:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "580:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "580:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "580:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "634:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "645:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "630:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "630:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "654:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "662:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "650:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "650:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "623:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "623:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "623:43:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "458:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "469:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "477:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "488:4:2",
														"type": ""
													}
												],
												"src": "368:304:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:167:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "868:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "879:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "861:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "902:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "913:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:2:2",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "891:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "891:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "891:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "941:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "952:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "937:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "937:18:2"
																	},
																	{
																		"hexValue": "4f776e6572206d75737420626520736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "957:19:2",
																		"type": "",
																		"value": "Owner must be set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "930:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "930:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "930:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "986:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "998:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1009:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "994:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "994:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "986:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c87338ddde5ff52c699ea56bd9b81e21603f0adc0875fd9959e16afe2346ac96__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "828:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "842:4:2",
														"type": ""
													}
												],
												"src": "677:341:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Owner address cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_c87338ddde5ff52c699ea56bd9b81e21603f0adc0875fd9959e16afe2346ac96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Owner must be set\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033806100645760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f7420626520300000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03831690811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1506000546001600160a01b03166101085760405162461bcd60e51b815260206004820152601160248201527013dddb995c881b5d5cdd081899481cd95d607a1b604482015260640161005b565b6103e3806101176000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635c975abb1161005b5780635c975abb146100da57806379ba5097146100f75780638da5cb5b146100ff57806391b4ded91461011257600080fd5b80631627540c1461008257806316c38b3c1461009757806353a47bb7146100aa575b600080fd5b61009561009036600461035b565b610129565b005b6100956100a536600461038b565b610186565b6001546100bd906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6003546100e79060ff1681565b60405190151581526020016100d1565b6100956101f8565b6000546100bd906001600160a01b031681565b61011b60025481565b6040519081526020016100d1565b6101316102e7565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22906020015b60405180910390a150565b61018e6102e7565b60035460ff161515811515146101f5576003805460ff191682151590811790915560ff16156101bc57426002555b60035460405160ff909116151581527f8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec59060200161017b565b50565b6001546001600160a01b031633146102755760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b60648201526084015b60405180910390fd5b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031633146103595760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b606482015260840161026c565b565b60006020828403121561036d57600080fd5b81356001600160a01b038116811461038457600080fd5b9392505050565b60006020828403121561039d57600080fd5b8135801515811461038457600080fdfea2646970667358221220cae89dc691a678696b5b61b9ae5eb8bc073580952a4e796e8c8f571d23f0364864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH2 0x64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616464726573732063616E6E6F74206265203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x108 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x13DDDB995C881B5D5CDD081899481CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B JUMP JUMPDEST PUSH2 0x3E3 DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x91B4DED9 EQ PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1627540C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x35B JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x38B JUMP JUMPDEST PUSH2 0x186 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xBD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x11B PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x18E PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x1F5 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xFF AND ISZERO PUSH2 0x1BC JUMPI TIMESTAMP PUSH1 0x2 SSTORE JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO DUP2 MSTORE PUSH32 0x8FB6C181EE25A520CF3DD6565006EF91229FCFE5A989566C2A3B8C115570CEC5 SWAP1 PUSH1 0x20 ADD PUSH2 0x17B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x275 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x26C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xE8 SWAP14 0xC6 SWAP2 0xA6 PUSH25 0x696B5B61B9AE5EB8BC073580952A4E796E8C8F571D23F03648 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "161:1128:1:-:0;;;262:240;;;;;;;;;-1:-1:-1;188:10:1;;241:58:0;;;;-1:-1:-1;;;241:58:0;;216:2:2;241:58:0;;;198:21:2;255:2;235:18;;;228:30;294:27;274:18;;;267:55;339:18;;241:58:0;;;;;;;;;309:5;:14;;-1:-1:-1;;;;;;309:14:0;-1:-1:-1;;;;;309:14:0;;;;;;;338:32;;;580:34:2;;;645:2;630:18;;623:43;;;;338:32:0;;515:18:2;338:32:0;;;;;;;-1:-1:-1;390:1:1;373:5;-1:-1:-1;;;;;373:5:1;365:49;;;;-1:-1:-1;;;365:49:1;;879:2:2;365:49:1;;;861:21:2;918:2;898:18;;;891:30;-1:-1:-1;;;937:18:2;;;930:47;994:18;;365:49:1;677:341:2;365:49:1;161:1128;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_onlyOwner_96": {
									"entryPoint": 743,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_77": {
									"entryPoint": 504,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastPauseTime_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nominateNewOwner_49": {
									"entryPoint": 297,
									"id": 49,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@nominatedOwner_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_118": {
									"entryPoint": null,
									"id": 118,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setPaused_163": {
									"entryPoint": 390,
									"id": 163,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2309:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:2"
															},
															"nodeType": "YulIf",
															"src": "94:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:2"
															},
															"nodeType": "YulIf",
															"src": "200:70:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:2",
														"type": ""
													}
												],
												"src": "14:286:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "372:206:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "418:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "427:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "420:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "420:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "420:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "393:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "402:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "389:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "389:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "414:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "385:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "385:32:2"
															},
															"nodeType": "YulIf",
															"src": "382:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "443:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "469:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "456:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "447:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "532:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "541:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "544:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "534:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "534:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "534:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "501:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "522:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "515:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "515:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "508:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "508:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "498:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "498:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "491:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "491:40:2"
															},
															"nodeType": "YulIf",
															"src": "488:60:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "557:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "567:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "557:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "338:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "349:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "361:6:2",
														"type": ""
													}
												],
												"src": "305:273:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "684:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "694:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "706:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "717:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "694:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "736:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "767:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "772:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "763:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "763:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "776:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "759:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "759:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "747:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "747:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "729:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "729:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "653:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "664:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "675:4:2",
														"type": ""
													}
												],
												"src": "583:203:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:92:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "908:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "919:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "904:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "896:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "938:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "963:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "956:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "956:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "949:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "931:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "931:41:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "855:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "866:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "877:4:2",
														"type": ""
													}
												],
												"src": "791:187:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1084:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1094:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1106:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1117:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1102:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1094:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1147:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1129:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1129:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1129:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1053:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1064:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1075:4:2",
														"type": ""
													}
												],
												"src": "983:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1339:243:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1356:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1367:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1349:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1349:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1349:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1390:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1401:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1386:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1386:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1406:2:2",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1379:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1379:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1379:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1429:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1440:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1425:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1425:18:2"
																	},
																	{
																		"hexValue": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1445:34:2",
																		"type": "",
																		"value": "You must be nominated before you"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1418:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1418:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1500:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1511:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1496:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1496:18:2"
																	},
																	{
																		"hexValue": "2063616e20616363657074206f776e657273686970",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1516:23:2",
																		"type": "",
																		"value": " can accept ownership"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1489:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1489:51:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1549:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1561:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1572:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1557:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1549:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1316:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1330:4:2",
														"type": ""
													}
												],
												"src": "1165:417:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1716:175:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1726:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1738:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1749:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1734:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1726:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1761:29:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1779:3:2",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1784:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1775:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1775:11:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1788:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1771:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:19:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1765:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1806:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1821:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1829:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1817:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1817:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1799:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1799:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1853:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1864:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1849:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1849:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1873:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1881:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1869:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1869:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1842:43:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1677:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1688:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1696:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1707:4:2",
														"type": ""
													}
												],
												"src": "1587:304:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2070:237:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2087:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2080:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2080:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2132:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2117:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:2",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2110:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2110:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2110:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2160:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2171:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2156:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:18:2"
																	},
																	{
																		"hexValue": "4f6e6c792074686520636f6e7472616374206f776e6572206d61792070657266",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2176:34:2",
																		"type": "",
																		"value": "Only the contract owner may perf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2149:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2231:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2242:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:18:2"
																	},
																	{
																		"hexValue": "6f726d207468697320616374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2247:17:2",
																		"type": "",
																		"value": "orm this action"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2220:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:45:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2220:45:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2274:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2286:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2297:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2282:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2274:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2047:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2061:4:2",
														"type": ""
													}
												],
												"src": "1896:411:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"You must be nominated before you\")\n        mstore(add(headStart, 96), \" can accept ownership\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"Only the contract owner may perf\")\n        mstore(add(headStart, 96), \"orm this action\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80635c975abb1161005b5780635c975abb146100da57806379ba5097146100f75780638da5cb5b146100ff57806391b4ded91461011257600080fd5b80631627540c1461008257806316c38b3c1461009757806353a47bb7146100aa575b600080fd5b61009561009036600461035b565b610129565b005b6100956100a536600461038b565b610186565b6001546100bd906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6003546100e79060ff1681565b60405190151581526020016100d1565b6100956101f8565b6000546100bd906001600160a01b031681565b61011b60025481565b6040519081526020016100d1565b6101316102e7565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22906020015b60405180910390a150565b61018e6102e7565b60035460ff161515811515146101f5576003805460ff191682151590811790915560ff16156101bc57426002555b60035460405160ff909116151581527f8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec59060200161017b565b50565b6001546001600160a01b031633146102755760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b60648201526084015b60405180910390fd5b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031633146103595760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b606482015260840161026c565b565b60006020828403121561036d57600080fd5b81356001600160a01b038116811461038457600080fd5b9392505050565b60006020828403121561039d57600080fd5b8135801515811461038457600080fdfea2646970667358221220cae89dc691a678696b5b61b9ae5eb8bc073580952a4e796e8c8f571d23f0364864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x91B4DED9 EQ PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1627540C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x35B JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x38B JUMP JUMPDEST PUSH2 0x186 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xBD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x11B PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x18E PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x1F5 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xFF AND ISZERO PUSH2 0x1BC JUMPI TIMESTAMP PUSH1 0x2 SSTORE JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO DUP2 MSTORE PUSH32 0x8FB6C181EE25A520CF3DD6565006EF91229FCFE5A989566C2A3B8C115570CEC5 SWAP1 PUSH1 0x20 ADD PUSH2 0x17B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x275 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x26C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xE8 SWAP14 0xC6 SWAP2 0xA6 PUSH25 0x696B5B61B9AE5EB8BC073580952A4E796E8C8F571D23F03648 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "161:1128:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:138:0;;;;;;:::i;:::-;;:::i;:::-;;630:484:1;;;;;;:::i;:::-;;:::i;167:29:0:-;;;;;-1:-1:-1;;;;;167:29:0;;;;;;-1:-1:-1;;;;;747:32:2;;;729:51;;717:2;702:18;167:29:0;;;;;;;;237:18:1;;;;;;;;;;;;956:14:2;;949:22;931:41;;919:2;904:18;237::1;791:187:2;527:266:0;;;:::i;141:20::-;;;;;-1:-1:-1;;;;;141:20:0;;;206:25:1;;;;;;;;;1129::2;;;1117:2;1102:18;206:25:1;983:177:2;383:138:0;828:12;:10;:12::i;:::-;454:14:::1;:23:::0;;-1:-1:-1;;;;;;454:23:0::1;-1:-1:-1::0;;;;;454:23:0;::::1;::::0;;::::1;::::0;;;492:22:::1;::::0;729:51:2;;;492:22:0::1;::::0;717:2:2;702:18;492:22:0::1;;;;;;;;383:138:::0;:::o;630:484:1:-;828:12:0;:10;:12::i;:::-;781:6:1::1;::::0;::::1;;770:17;;::::0;::::1;;766:54:::0;803:7:::1;766:54;863:6;:16:::0;;-1:-1:-1;;863:16:1::1;::::0;::::1;;::::0;;::::1;::::0;;;::::1;945:6:::0;941:68:::1;;;983:15;967:13;:31:::0;941:68:::1;1100:6;::::0;1087:20:::1;::::0;1100:6:::1;::::0;;::::1;956:14:2::0;949:22;931:41;;1087:20:1::1;::::0;919:2:2;904:18;1087:20:1::1;791:187:2::0;850:1:0::1;630:484:1::0;:::o;527:266:0:-;595:14;;-1:-1:-1;;;;;595:14:0;581:10;:28;573:94;;;;-1:-1:-1;;;573:94:0;;1367:2:2;573:94:0;;;1349:21:2;1406:2;1386:18;;;1379:30;1445:34;1425:18;;;1418:62;-1:-1:-1;;;1496:18:2;;;1489:51;1557:19;;573:94:0;;;;;;;;;695:5;;;702:14;682:35;;;-1:-1:-1;;;;;695:5:0;;;1799:34:2;;702:14:0;;;;1864:2:2;1849:18;;1842:43;682:35:0;;1734:18:2;682:35:0;;;;;;;735:14;;;;727:22;;-1:-1:-1;;;;;;727:22:0;;;-1:-1:-1;;;;;735:14:0;;727:22;;;;759:27;;;527:266::o;864:131::-;931:5;;-1:-1:-1;;;;;931:5:0;917:10;:19;909:79;;;;-1:-1:-1;;;909:79:0;;2098:2:2;909:79:0;;;2080:21:2;2137:2;2117:18;;;2110:30;2176:34;2156:18;;;2149:62;-1:-1:-1;;;2227:18:2;;;2220:45;2282:19;;909:79:0;1896:411:2;909:79:0;864:131::o;14:286:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:2;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:2:o;305:273::-;361:6;414:2;402:9;393:7;389:23;385:32;382:52;;;430:1;427;420:12;382:52;469:9;456:23;522:5;515:13;508:21;501:5;498:32;488:60;;544:1;541;534:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "199000",
								"executionCost": "27989",
								"totalCost": "226989"
							},
							"external": {
								"acceptOwnership()": "56348",
								"lastPauseTime()": "2361",
								"nominateNewOwner(address)": "27755",
								"nominatedOwner()": "2371",
								"owner()": "2370",
								"paused()": "2310",
								"setPaused(bool)": "54138"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 161,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 161,
									"end": 1289,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 262,
									"end": 502,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 262,
									"end": 502,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 262,
									"end": 502,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 262,
									"end": 502,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 502,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 262,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 502,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 262,
									"end": 502,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 262,
									"end": 502,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 502,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 188,
									"end": 198,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 188,
									"end": 198,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 241,
									"end": 299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 241,
									"end": 299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 294,
									"end": 321,
									"name": "PUSH",
									"source": 2,
									"value": "4F776E657220616464726573732063616E6E6F74206265203000000000000000"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 267,
									"end": 322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 339,
									"end": 357,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 339,
									"end": 357,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 241,
									"end": 299,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 309,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 323,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 309,
									"end": 323,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 309,
									"end": 323,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 309,
									"end": 323,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 338,
									"end": 370,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 580,
									"end": 614,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 580,
									"end": 614,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 580,
									"end": 614,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 647,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 630,
									"end": 648,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 630,
									"end": 648,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 623,
									"end": 666,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 623,
									"end": 666,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 623,
									"end": 666,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 623,
									"end": 666,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 338,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
								},
								{
									"begin": 338,
									"end": 370,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 515,
									"end": 533,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 338,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 338,
									"end": 370,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 338,
									"end": 370,
									"name": "LOG1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 390,
									"end": 391,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 378,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 373,
									"end": 378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 365,
									"end": 414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 365,
									"end": 414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 365,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 365,
									"end": 414,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 365,
									"end": 414,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 414,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 879,
									"end": 881,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 365,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 365,
									"end": 414,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 365,
									"end": 414,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 861,
									"end": 882,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 918,
									"end": 920,
									"name": "PUSH",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 898,
									"end": 916,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 898,
									"end": 916,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 898,
									"end": 916,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 891,
									"end": 921,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "13DDDB995C881B5D5CDD081899481CD95D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 937,
									"end": 955,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 937,
									"end": 955,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 937,
									"end": 955,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 930,
									"end": 977,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 994,
									"end": 1012,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 994,
									"end": 1012,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 365,
									"end": 414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 677,
									"end": 1018,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 365,
									"end": 414,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 365,
									"end": 414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 161,
									"end": 1289,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 1289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 161,
									"end": 1289,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 1289,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 161,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 1289,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cae89dc691a678696b5b61b9ae5eb8bc073580952a4e796e8c8f571d23f0364864736f6c63430008120033",
									".code": [
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "5C975ABB"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "5C975ABB"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "79BA5097"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "91B4DED9"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "1627540C"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "16C38B3C"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "53A47BB7"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 161,
											"end": 1289,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 383,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 383,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 383,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 630,
											"end": 1114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 630,
											"end": 1114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 167,
											"end": 196,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 167,
											"end": 196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 747,
											"end": 779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 779,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 779,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 729,
											"end": 780,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 729,
											"end": 780,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 717,
											"end": 719,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 702,
											"end": 720,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 167,
											"end": 196,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 196,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 237,
											"end": 255,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 237,
											"end": 255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 237,
											"end": 255,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 237,
											"end": 255,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 237,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 237,
											"end": 255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 237,
											"end": 255,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 237,
											"end": 255,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 237,
											"end": 255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 237,
											"end": 255,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 237,
											"end": 255,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 237,
											"end": 255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 237,
											"end": 255,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 255,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 956,
											"end": 970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 956,
											"end": 970,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 949,
											"end": 971,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 931,
											"end": 972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 931,
											"end": 972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 919,
											"end": 921,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 237,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 791,
											"end": 978,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 527,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 527,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 527,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 527,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 141,
											"end": 161,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 141,
											"end": 161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 141,
											"end": 161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 141,
											"end": 161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 141,
											"end": 161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 141,
											"end": 161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 141,
											"end": 161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 231,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 206,
											"end": 231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 206,
											"end": 231,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 231,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 206,
											"end": 231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 206,
											"end": 231,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 206,
											"end": 231,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 206,
											"end": 231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 231,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 231,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 206,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 983,
											"end": 1160,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 383,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 383,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 828,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 828,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 828,
											"end": 840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 840,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 828,
											"end": 840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 454,
											"end": 468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 454,
											"end": 477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 454,
											"end": 477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 729,
											"end": 780,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 729,
											"end": 780,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22"
										},
										{
											"begin": 492,
											"end": 514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 719,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 702,
											"end": 720,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 514,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 828,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 828,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 828,
											"end": 840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 840,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 828,
											"end": 840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 787,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 770,
											"end": 787,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 770,
											"end": 787,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 770,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 787,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 770,
											"end": 787,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 820,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 803,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 766,
											"end": 820,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 863,
											"end": 869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 863,
											"end": 879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 863,
											"end": 879,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 863,
											"end": 879,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 863,
											"end": 879,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 863,
											"end": 879,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 863,
											"end": 879,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 863,
											"end": 879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 863,
											"end": 879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 863,
											"end": 879,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 863,
											"end": 879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 863,
											"end": 879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 863,
											"end": 879,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 863,
											"end": 879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 945,
											"end": 951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1009,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 941,
											"end": 1009,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 983,
											"end": 998,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 967,
											"end": 980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 967,
											"end": 998,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 941,
											"end": 1009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1106,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 956,
											"end": 970,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 949,
											"end": 971,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 931,
											"end": 972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 931,
											"end": 972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8FB6C181EE25A520CF3DD6565006EF91229FCFE5A989566C2A3B8C115570CEC5"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 921,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 978,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 850,
											"end": 851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 850,
											"end": 851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 1114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 527,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 527,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 595,
											"end": 609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 595,
											"end": 609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 581,
											"end": 591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 581,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 573,
											"end": 667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1369,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "596F75206D757374206265206E6F6D696E61746564206265666F726520796F75"
										},
										{
											"begin": 1425,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1425,
											"end": 1443,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1480,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2063616E20616363657074206F776E65727368697"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1496,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1496,
											"end": 1514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1496,
											"end": 1514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1540,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 573,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 695,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 695,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 702,
											"end": 716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 695,
											"end": 700,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 695,
											"end": 700,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 695,
											"end": 700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1833,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1833,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 702,
											"end": 716,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 702,
											"end": 716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 702,
											"end": 716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 702,
											"end": 716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 682,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
										},
										{
											"begin": 682,
											"end": 717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 682,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 717,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 727,
											"end": 749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 735,
											"end": 749,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 735,
											"end": 749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 727,
											"end": 749,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 759,
											"end": 786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 786,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 527,
											"end": 793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 995,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 864,
											"end": 995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 931,
											"end": 936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 917,
											"end": 927,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 917,
											"end": 936,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 909,
											"end": 988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2100,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 909,
											"end": 988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "2F"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2140,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2210,
											"name": "PUSH",
											"source": 2,
											"value": "4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266"
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B936903A3434B99030B1BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2220,
											"end": 2265,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2282,
											"end": 2301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1896,
											"end": 2307,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 909,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 305,
											"end": 578,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 305,
											"end": 578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 361,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 402,
											"end": 411,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 393,
											"end": 400,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 389,
											"end": 412,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 385,
											"end": 417,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 382,
											"end": 434,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 382,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 382,
											"end": 434,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 430,
											"end": 431,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 428,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 420,
											"end": 432,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 382,
											"end": 434,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 382,
											"end": 434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 469,
											"end": 478,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 456,
											"end": 479,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 528,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 508,
											"end": 529,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 501,
											"end": 506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 498,
											"end": 530,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 488,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 488,
											"end": 548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 544,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 542,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 546,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/Owned.sol",
								"contracts/Pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"lastPauseTime()": "91b4ded9",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"setPaused(bool)": "16c38b3c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPauseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setPaused(bool)\":{\"details\":\"Only the contract owner may call this.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setPaused(bool)\":{\"notice\":\"Change the paused state of the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Owned.sol\":{\"keccak256\":\"0xbca0504b2cff7f1782aa3bf2d0826dd79947507e642c8fa1b67a91441eba304d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea35d656c8e0f56c6a0f5f2f259496b30d8ce15498f09fd6293fdf81d96f831b\",\"dweb:/ipfs/QmScsjkrFG35vViSnhGoSguuchSFD4ymFuLBfx7ri3Ss7Q\"]},\"contracts/Pausable.sol\":{\"keccak256\":\"0x02b004dad7a7a7b63531639c99bb220ad0e0bf700daa691888a1787d74ebd4c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://005ad4810f2350ff223a4e8fff2c7509e138237c66fdc33479f49d2e94497718\",\"dweb:/ipfs/QmXKp91FY99K1gi5CUmjSbgDbeThLtW8TGTCh3mZouKEQW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 116,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "lastPauseTime",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 118,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "paused",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setPaused(bool)": {
								"notice": "Change the paused state of the contract"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Owned.sol": {
				"ast": {
					"absolutePath": "contracts/Owned.sol",
					"exportedSymbols": {
						"Owned": [
							107
						]
					},
					"id": 108,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Owned",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 107,
							"linearizedBaseContracts": [
								107
							],
							"name": "Owned",
							"nameLocation": "129:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "156:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "141:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "141:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "53a47bb7",
									"id": 5,
									"mutability": "mutable",
									"name": "nominatedOwner",
									"nameLocation": "182:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "167:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "167:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "231:146:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 11,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "249:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 14,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "267:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 13,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "259:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 12,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "259:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "259:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "249:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e657220616464726573732063616e6e6f742062652030",
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "271:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96",
																"typeString": "literal_string \"Owner address cannot be 0\""
															},
															"value": "Owner address cannot be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96",
																"typeString": "literal_string \"Owner address cannot be 0\""
															}
														],
														"id": 10,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "241:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "241:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "241:58:0"
											},
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "309:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 21,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "317:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "309:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "309:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 27,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "359:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "351:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 25,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "351:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "351:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 29,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "363:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 24,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "338:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "338:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "EmitStatement",
												"src": "333:37:0"
											}
										]
									},
									"id": 33,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "223:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "215:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:16:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "231:0:0"
									},
									"scope": 107,
									"src": "203:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "444:77:0",
										"statements": [
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 40,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "454:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 41,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "471:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "454:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "454:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 45,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "507:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 44,
														"name": "OwnerNominated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "492:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "492:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "EmitStatement",
												"src": "487:27:0"
											}
										]
									},
									"functionSelector": "1627540c",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 38,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 37,
												"name": "onlyOwner",
												"nameLocations": [
													"434:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 84,
												"src": "434:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "434:9:0"
										}
									],
									"name": "nominateNewOwner",
									"nameLocation": "392:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:16:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:0:0"
									},
									"scope": 107,
									"src": "383:138:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "563:230:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 53,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "581:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "585:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "581:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 55,
																"name": "nominatedOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "595:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "581:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "611:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b",
																"typeString": "literal_string \"You must be nominated before you can accept ownership\""
															},
															"value": "You must be nominated before you can accept ownership"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b",
																"typeString": "literal_string \"You must be nominated before you can accept ownership\""
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "573:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "573:94:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "573:94:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 61,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "695:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 62,
															"name": "nominatedOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "702:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "682:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "682:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "EmitStatement",
												"src": "677:40:0"
											},
											{
												"expression": {
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "727:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 66,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "735:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "727:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "727:22:0"
											},
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 69,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "759:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "784:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "776:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 70,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "776:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "776:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "759:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "759:27:0"
											}
										]
									},
									"functionSelector": "79ba5097",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "536:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "563:0:0"
									},
									"scope": 107,
									"src": "527:266:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "818:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 79,
														"name": "_onlyOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "828:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "828:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "828:12:0"
											},
											{
												"id": 82,
												"nodeType": "PlaceholderStatement",
												"src": "850:1:0"
											}
										]
									},
									"id": 84,
									"name": "onlyOwner",
									"nameLocation": "808:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:0:0"
									},
									"src": "799:59:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "899:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 88,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "917:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "921:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "917:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 90,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "931:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "917:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e",
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "938:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a",
																"typeString": "literal_string \"Only the contract owner may perform this action\""
															},
															"value": "Only the contract owner may perform this action"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a",
																"typeString": "literal_string \"Only the contract owner may perform this action\""
															}
														],
														"id": 87,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "909:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "909:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "909:79:0"
											}
										]
									},
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyOwner",
									"nameLocation": "873:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "883:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "899:0:0"
									},
									"scope": 107,
									"src": "864:131:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22",
									"id": 100,
									"name": "OwnerNominated",
									"nameLocation": "1007:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1030:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1022:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:18:0"
									},
									"src": "1001:39:0"
								},
								{
									"anonymous": false,
									"eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
									"id": 106,
									"name": "OwnerChanged",
									"nameLocation": "1051:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "1072:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1064:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1090:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1082:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:36:0"
									},
									"src": "1045:55:0"
								}
							],
							"scope": 108,
							"src": "120:982:0",
							"usedErrors": []
						}
					],
					"src": "32:1070:0"
				},
				"id": 0
			},
			"contracts/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/Pausable.sol",
					"exportedSymbols": {
						"Owned": [
							107
						],
						"Pausable": [
							178
						]
					},
					"id": 179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 109,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "contracts/Owned.sol",
							"file": "./Owned.sol",
							"id": 110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 179,
							"sourceUnit": 108,
							"src": "73:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 112,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "188:3:1",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 113,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "192:6:1",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "188:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 111,
										"name": "Owned",
										"nameLocations": [
											"182:5:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 107,
										"src": "182:5:1"
									},
									"id": 114,
									"nodeType": "InheritanceSpecifier",
									"src": "182:17:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 178,
							"linearizedBaseContracts": [
								178,
								107
							],
							"name": "Pausable",
							"nameLocation": "170:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "91b4ded9",
									"id": 116,
									"mutability": "mutable",
									"name": "lastPauseTime",
									"nameLocation": "218:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 178,
									"src": "206:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 115,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "206:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 118,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "249:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 178,
									"src": "237:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 117,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "237:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "276:226:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 122,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "373:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "390:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "382:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 123,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "382:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "382:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "373:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e6572206d75737420626520736574",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "394:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c87338ddde5ff52c699ea56bd9b81e21603f0adc0875fd9959e16afe2346ac96",
																"typeString": "literal_string \"Owner must be set\""
															},
															"value": "Owner must be set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c87338ddde5ff52c699ea56bd9b81e21603f0adc0875fd9959e16afe2346ac96",
																"typeString": "literal_string \"Owner must be set\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "365:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "365:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "365:49:1"
											}
										]
									},
									"id": 132,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "276:0:1"
									},
									"scope": 178,
									"src": "262:240:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "682:432:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 140,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "770:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 141,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "781:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "770:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "IfStatement",
												"src": "766:54:1",
												"trueBody": {
													"id": 144,
													"nodeType": "Block",
													"src": "789:31:1",
													"statements": [
														{
															"functionReturnParameters": 139,
															"id": 143,
															"nodeType": "Return",
															"src": "803:7:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "863:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "872:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "863:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "863:16:1"
											},
											{
												"condition": {
													"id": 150,
													"name": "paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 118,
													"src": "945:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 157,
												"nodeType": "IfStatement",
												"src": "941:68:1",
												"trueBody": {
													"id": 156,
													"nodeType": "Block",
													"src": "953:56:1",
													"statements": [
														{
															"expression": {
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 151,
																	"name": "lastPauseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "967:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 152,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "983:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "989:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "983:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "967:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 155,
															"nodeType": "ExpressionStatement",
															"src": "967:31:1"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 159,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "1100:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 158,
														"name": "PauseChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1087:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "EmitStatement",
												"src": "1082:25:1"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "508:117:1",
										"text": " @notice Change the paused state of the contract\n @dev Only the contract owner may call this."
									},
									"functionSelector": "16c38b3c",
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 138,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 137,
												"name": "onlyOwner",
												"nameLocations": [
													"672:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 84,
												"src": "672:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "672:9:1"
										}
									],
									"name": "setPaused",
									"nameLocation": "639:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_paused",
												"nameLocation": "654:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "649:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "649:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:14:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "682:0:1"
									},
									"scope": 178,
									"src": "630:484:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5",
									"id": 167,
									"name": "PauseChanged",
									"nameLocation": "1126:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "isPaused",
												"nameLocation": "1144:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1139:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1138:15:1"
									},
									"src": "1120:34:1"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "1179:108:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1197:7:1",
															"subExpression": {
																"id": 170,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "1198:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e747261637420697320706175736564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1206:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f",
																"typeString": "literal_string \"This action cannot be performed while the contract is paused\""
															},
															"value": "This action cannot be performed while the contract is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f",
																"typeString": "literal_string \"This action cannot be performed while the contract is paused\""
															}
														],
														"id": 169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1189:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1189:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1189:80:1"
											},
											{
												"id": 175,
												"nodeType": "PlaceholderStatement",
												"src": "1279:1:1"
											}
										]
									},
									"id": 177,
									"name": "notPaused",
									"nameLocation": "1169:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1179:0:1"
									},
									"src": "1160:127:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 179,
							"src": "161:1128:1",
							"usedErrors": []
						}
					],
					"src": "32:1257:1"
				},
				"id": 1
			}
		}
	}
}