{
	"id": "3ab46759b57b54742f7ce54b7fc302eb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Zero2HeroWeek2StakingRewards.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.16;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n// Inheritance\nimport \"../interfaces/IZero2HeroWeek2StakingRewards.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n// source code from https://github.com/Synthetixio/synthetix/blob/develop/contracts/StakingRewards.sol\n// https://docs.synthetix.io/contracts/source/contracts/stakingrewards\ncontract Zero2HeroWeek2StakingRewards is IZero2HeroWeek2StakingRewards, ReentrancyGuard, Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    /* ========== STATE VARIABLES ========== */\n    address public rewardsToken;\n    address public stakingToken;\n    uint256 public periodFinish = 0;\n    uint256 public rewardRate = 0;\n    uint256 public rewardsDuration = 7 days;\n    uint256 public lastUpdateTime;\n    uint256 public rewardPerTokenStored;\n    address public rewardsDistribution;\n\n    mapping(address => uint256) public userRewardPerTokenPaid;\n    mapping(address => uint256) public rewards;\n\n    uint256 private _totalSupply;\n    mapping(address => uint256) private _balances;\n\n    /* ========== CONSTRUCTOR ========== */\n    // msg.sender is the first owner\n    constructor(\n        address _rewardsDistribution,\n        address _rewardsToken,\n        address _stakingToken\n    ) {\n        rewardsToken = _rewardsToken;\n        stakingToken = _stakingToken;\n        rewardsDistribution = _rewardsDistribution;\n    }\n\n    /* ========== VIEWS ========== */\n\n    function totalSupply() external view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) external view returns (uint256) {\n        return _balances[account];\n    }\n\n    function lastTimeRewardApplicable() public view returns (uint256) {\n        return block.timestamp < periodFinish ? block.timestamp : periodFinish;\n    }\n\n    function rewardPerToken() public view returns (uint256) {\n        if (_totalSupply == 0) {\n            return rewardPerTokenStored;\n        }\n        return\n            rewardPerTokenStored.add(\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply)\n            );\n    }\n\n    function earned(address account) public view returns (uint256) {\n        return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\n    }\n\n    function getRewardForDuration() external view returns (uint256) {\n        return rewardRate.mul(rewardsDuration);\n    }\n\n    /* ========== MUTATIVE FUNCTIONS ========== */\n\n    function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {\n        require(amount > 0, \"Cannot stake 0\");\n        _totalSupply = _totalSupply.add(amount);\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\n        IERC20(stakingToken).safeTransferFrom(msg.sender, address(this), amount);\n        emit Staked(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"Cannot withdraw 0\");\n        _totalSupply = _totalSupply.sub(amount);\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\n        IERC20(stakingToken).safeTransfer(msg.sender, amount);\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    function getReward() public nonReentrant updateReward(msg.sender) {\n        uint256 reward = rewards[msg.sender];\n        if (reward > 0) {\n            rewards[msg.sender] = 0;\n            IERC20(rewardsToken).safeTransfer(msg.sender, reward);\n            emit RewardPaid(msg.sender, reward);\n        }\n    }\n\n    function exit() external {\n        withdraw(_balances[msg.sender]);\n        getReward();\n    }\n\n    /* ========== RESTRICTED FUNCTIONS ========== */\n\n    function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\n        if (block.timestamp >= periodFinish) {\n            rewardRate = reward.div(rewardsDuration);\n        } else {\n            uint256 remaining = periodFinish.sub(block.timestamp);\n            uint256 leftover = remaining.mul(rewardRate);\n            rewardRate = reward.add(leftover).div(rewardsDuration);\n        }\n\n        // Ensure the provided reward amount is not more than the balance in the contract.\n        // This keeps the reward rate in the right range, preventing overflows due to\n        // very high values of rewardRate in the earned and rewardsPerToken functions;\n        // Reward + leftover must be less than 2^256 / 10^18 to avoid overflow.\n        uint balance = IERC20(rewardsToken).balanceOf(address(this));\n        require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\");\n\n        lastUpdateTime = block.timestamp;\n        periodFinish = block.timestamp.add(rewardsDuration);\n        emit RewardAdded(reward);\n    }\n\n    // Added to support recovering LP Rewards from other systems such as BAL to be distributed to holders\n    function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\n        require(tokenAddress != stakingToken, \"Cannot withdraw the staking token\");\n        IERC20(tokenAddress).safeTransfer(owner(), tokenAmount);\n        emit Recovered(tokenAddress, tokenAmount);\n    }\n\n    function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\n        require(\n            block.timestamp > periodFinish,\n            \"Previous rewards period must be complete before changing the duration for the new period\"\n        );\n        rewardsDuration = _rewardsDuration;\n        emit RewardsDurationUpdated(rewardsDuration);\n    }\n\n    /* ========== MODIFIERS ========== */\n\n    modifier updateReward(address account) {\n        rewardPerTokenStored = rewardPerToken();\n        lastUpdateTime = lastTimeRewardApplicable();\n        if (account != address(0)) {\n            rewards[account] = earned(account);\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\n        }\n        _;\n    }\n\n    /* ========== EVENTS ========== */\n\n    event RewardAdded(uint256 reward);\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event RewardPaid(address indexed user, uint256 reward);\n    event RewardsDurationUpdated(uint256 newDuration);\n    event Recovered(address token, uint256 amount);\n\n\n    /* ========== RewardsDistributionRecipient.sol functions ========== */\n    modifier onlyRewardsDistribution() {\n        require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\");\n        _;\n    }\n\n    function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {\n        rewardsDistribution = _rewardsDistribution;\n    }\n\n    /* ========== Pausable.sol functions ========== */\n    uint public lastPauseTime;\n    bool public paused;\n\n    /**\n     * @notice Change the paused state of the contract\n     * @dev Only the contract owner may call this.\n     */\n    function setPaused(bool _paused) external onlyOwner {\n        // Ensure we're actually changing the state before we do anything\n        if (_paused == paused) {\n            return;\n        }\n\n        // Set our paused state.\n        paused = _paused;\n\n        // If applicable, set the last pause time.\n        if (paused) {\n            lastPauseTime = block.timestamp;\n        }\n\n        // Let everyone know that our pause state has changed.\n        emit PauseChanged(paused);\n    }\n\n    event PauseChanged(bool isPaused);\n\n    modifier notPaused {\n        require(!paused, \"This action cannot be performed while the contract is paused\");\n        _;\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"interfaces/IZero2HeroWeek2StakingRewards.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24;\n\n// https://docs.synthetix.io/contracts/source/interfaces/istakingrewards\ninterface IZero2HeroWeek2StakingRewards {\n    // Views\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function earned(address account) external view returns (uint256);\n\n    function getRewardForDuration() external view returns (uint256);\n\n    function lastTimeRewardApplicable() external view returns (uint256);\n\n    function rewardPerToken() external view returns (uint256);\n\n    function rewardsDistribution() external view returns (address);\n\n    function rewardsToken() external view returns (address);\n\n    function totalSupply() external view returns (uint256);\n\n    // Mutative\n\n    function exit() external;\n\n    function getReward() external;\n\n    function stake(uint256 amount) external;\n\n    function withdraw(uint256 amount) external;\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122086177b5d8028cfcb82dab84f68cb3aec7cf1a3293e7c53e32090a8097535e71c64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122086177b5d8028cfcb82dab84f68cb3aec7cf1a3293e7c53e32090a8097535e71c64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 OR PUSH28 0x5D8028CFCB82DAB84F68CB3AEC7CF1A3293E7C53E32090A8097535E7 SHR PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "707:3748:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122086177b5d8028cfcb82dab84f68cb3aec7cf1a3293e7c53e32090a8097535e71c64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 OR PUSH28 0x5D8028CFCB82DAB84F68CB3AEC7CF1A3293E7C53E32090A8097535E7 SHR PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "707:3748:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086177b5d8028cfcb82dab84f68cb3aec7cf1a3293e7c53e32090a8097535e71c64736f6c63430008120033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Zero2HeroWeek2StakingRewards.sol",
								"interfaces/IZero2HeroWeek2StakingRewards.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d1e7198caf12105a271eb026d2296f45a3cf3a2165583e9fdf453394b5f1989364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d1e7198caf12105a271eb026d2296f45a3cf3a2165583e9fdf453394b5f1989364736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xE7 NOT DUP13 0xAF SLT LT GAS 0x27 0x1E 0xB0 0x26 0xD2 0x29 PUSH16 0x45A3CF3A2165583E9FDF453394B5F198 SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:8964:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d1e7198caf12105a271eb026d2296f45a3cf3a2165583e9fdf453394b5f1989364736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xE7 NOT DUP13 0xAF SLT LT GAS 0x27 0x1E 0xB0 0x26 0xD2 0x29 PUSH16 0x45A3CF3A2165583E9FDF453394B5F198 SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:8964:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d1e7198caf12105a271eb026d2296f45a3cf3a2165583e9fdf453394b5f1989364736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Zero2HeroWeek2StakingRewards.sol",
								"interfaces/IZero2HeroWeek2StakingRewards.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEE DUP7 0xE8 KECCAK256 DUP14 0xE7 0x4B EXTCODEHASH LOG4 0xB1 PUSH16 0x3B51DCF7FAC733127FC4F9E663FD4716 DUP12 SWAP4 DUP2 DIV PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "482:6300:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEE DUP7 0xE8 KECCAK256 DUP14 0xE7 0x4B EXTCODEHASH LOG4 0xB1 PUSH16 0x3B51DCF7FAC733127FC4F9E663FD4716 DUP12 SWAP4 DUP2 DIV PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "482:6300:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Zero2HeroWeek2StakingRewards.sol",
								"interfaces/IZero2HeroWeek2StakingRewards.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Zero2HeroWeek2StakingRewards.sol": {
				"Zero2HeroWeek2StakingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsDistribution",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isPaused",
									"type": "bool"
								}
							],
							"name": "PauseChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Recovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDuration",
									"type": "uint256"
								}
							],
							"name": "RewardsDurationUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastPauseTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "recoverERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_paused",
									"type": "bool"
								}
							],
							"name": "setPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsDistribution",
									"type": "address"
								}
							],
							"name": "setRewardsDistribution",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardsDuration",
									"type": "uint256"
								}
							],
							"name": "setRewardsDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setPaused(bool)": {
								"details": "Only the contract owner may call this."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":735:7971  contract Zero2HeroWeek2StakingRewards is IZero2HeroWeek2StakingRewards, ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1047:1048  0 */\n  0x00\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1017:1048  uint256 public periodFinish = 0 */\n  0x04\n  sstore\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1082:1083  0 */\n  0x00\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1054:1083  uint256 public rewardRate = 0 */\n  0x05\n  sstore\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1122:1128  7 days */\n  0x093a80\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1089:1128  uint256 public rewardsDuration = 7 days */\n  0x06\n  sstore\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1530:1783  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1658:1670  rewardsToken */\n  0x02\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1658:1686  rewardsToken = _rewardsToken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1696:1708  stakingToken */\n  0x03\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1696:1724  stakingToken = _stakingToken */\n  dup1\n  sload\n  swap3\n  dup5\n  and\n  swap3\n  dup3\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1734:1753  rewardsDistribution */\n  0x09\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1734:1776  rewardsDistribution = _rewardsDistribution */\n  dup1\n  sload\n  swap4\n  swap1\n  swap3\n  and\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":735:7971  contract Zero2HeroWeek2StakingRewards is IZero2HeroWeek2StakingRewards, ReentrancyGuard, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_17:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:574   */\ntag_3:\n    /* \"#utility.yul\":284:290   */\n  0x00\n    /* \"#utility.yul\":292:298   */\n  dup1\n    /* \"#utility.yul\":300:306   */\n  0x00\n    /* \"#utility.yul\":353:355   */\n  0x60\n    /* \"#utility.yul\":341:350   */\n  dup5\n    /* \"#utility.yul\":332:339   */\n  dup7\n    /* \"#utility.yul\":328:351   */\n  sub\n    /* \"#utility.yul\":324:356   */\n  slt\n    /* \"#utility.yul\":321:373   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":369:370   */\n  0x00\n    /* \"#utility.yul\":366:367   */\n  dup1\n    /* \"#utility.yul\":359:371   */\n  revert\n    /* \"#utility.yul\":321:373   */\ntag_22:\n    /* \"#utility.yul\":392:432   */\n  tag_23\n    /* \"#utility.yul\":422:431   */\n  dup5\n    /* \"#utility.yul\":392:432   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":382:432   */\n  swap3\n  pop\n    /* \"#utility.yul\":451:500   */\n  tag_24\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup6\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":451:500   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":441:500   */\n  swap2\n  pop\n    /* \"#utility.yul\":519:568   */\n  tag_25\n    /* \"#utility.yul\":564:566   */\n  0x40\n    /* \"#utility.yul\":553:562   */\n  dup6\n    /* \"#utility.yul\":549:567   */\n  add\n    /* \"#utility.yul\":519:568   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":509:568   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:574   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\ntag_18:\n    /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":735:7971  contract Zero2HeroWeek2StakingRewards is IZero2HeroWeek2StakingRewards, ReentrancyGuard, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":735:7971  contract Zero2HeroWeek2StakingRewards is IZero2HeroWeek2StakingRewards, ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b0a47ee\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xc8f33c91\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xdf136d65\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xebe2b12b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xc8f33c91\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xcc1a378f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x8b876347\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x91b4ded9\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x7b0a47ee\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8980f11f\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x386a9525\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x5c975abb\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x386a9525\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3c6b16ab\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3fc6df6e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x18160ddd\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x19762143\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1c1f78eb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x16c38b3c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2528:2724  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2528:2724  function earned(address account) public view returns (uint256) {... */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1314:1356  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_40\n      tag_47\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_47:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7312:7796  function setPaused(bool _paused) external onlyOwner {... */\n    tag_5:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1828:1919  function totalSupply() external view returns (uint256) {... */\n    tag_6:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1900:1912  _totalSupply */\n      sload(0x0c)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1828:1919  function totalSupply() external view returns (uint256) {... */\n      jump(tag_40)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6933:7073  function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {... */\n    tag_7:\n      tag_50\n      tag_58\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2730:2849  function getRewardForDuration() external view returns (uint256) {... */\n    tag_8:\n      tag_40\n      tag_61\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3294:3653  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {... */\n    tag_9:\n      tag_50\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1089:1128  uint256 public rewardsDuration = 7 days */\n    tag_10:\n      tag_40\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4127:5199  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {... */\n    tag_11:\n      tag_50\n      tag_71\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3659:3967  function getReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_12:\n      tag_50\n      tag_74\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1210:1244  address public rewardsDistribution */\n    tag_13:\n      sload(0x09)\n      tag_75\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_75:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1283:1315   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1265:1316   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1253:1255   */\n      0x20\n        /* \"#utility.yul\":1238:1256   */\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1210:1244  address public rewardsDistribution */\n      tag_44\n        /* \"#utility.yul\":1119:1322   */\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7165:7183  bool public paused */\n    tag_14:\n      sload(0x0f)\n      tag_79\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_79:\n      mload(0x40)\n        /* \"#utility.yul\":1492:1506   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1485:1507   */\n      iszero\n        /* \"#utility.yul\":1467:1508   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1440:1458   */\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7165:7183  bool public paused */\n      tag_44\n        /* \"#utility.yul\":1327:1514   */\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1925:2035  function balanceOf(address account) external view returns (uint256) {... */\n    tag_15:\n      tag_40\n      tag_84\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2010:2028  _balances[account] */\n      and\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1984:1991  uint256 */\n      0x00\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2010:2028  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2010:2019  _balances */\n      0x0d\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2010:2028  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1925:2035  function balanceOf(address account) external view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_50\n      tag_88\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":984:1011  address public stakingToken */\n    tag_17:\n      sload(0x03)\n      tag_75\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1054:1083  uint256 public rewardRate = 0 */\n    tag_18:\n      tag_40\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2041:2194  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_19:\n      tag_40\n      tag_96\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5311:5602  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {... */\n    tag_20:\n      tag_50\n      tag_99\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1251:1308  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_21:\n      tag_40\n      tag_103\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_103:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_75)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7134:7159  uint public lastPauseTime */\n    tag_23:\n      tag_40\n      sload(0x0e)\n      dup2\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2907:3288  function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {... */\n    tag_24:\n      tag_50\n      tag_113\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1134:1163  uint256 public lastUpdateTime */\n    tag_25:\n      tag_40\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5608:5961  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {... */\n    tag_26:\n      tag_50\n      tag_119\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2200:2522  function rewardPerToken() public view returns (uint256) {... */\n    tag_27:\n      tag_40\n      tag_122\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":951:978  address public rewardsToken */\n    tag_28:\n      sload(0x02)\n      tag_75\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1169:1204  uint256 public rewardPerTokenStored */\n    tag_29:\n      tag_40\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3973:4067  function exit() external {... */\n    tag_30:\n      tag_50\n      tag_131\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":1017:1048  uint256 public periodFinish = 0 */\n    tag_31:\n      tag_40\n      sload(0x04)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n      tag_50\n      tag_136\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2528:2724  function earned(address account) public view returns (uint256) {... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2700:2716  rewards[account] */\n      dup2\n      and\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2582:2589  uint256 */\n      0x00\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2700:2716  rewards[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2700:2707  rewards */\n      0x0b\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2700:2716  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2652:2674  userRewardPerTokenPaid */\n      0x0a\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2652:2683  userRewardPerTokenPaid[account] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2608:2717  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_139\n      swap2\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2700:2716  rewards[account] */\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2608:2695  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_140\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2690:2694  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2608:2685  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      tag_141\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2631:2684  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      tag_142\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2631:2647  rewardPerToken() */\n      tag_143\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2631:2645  rewardPerToken */\n      tag_122\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2631:2647  rewardPerToken() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2631:2651  rewardPerToken().sub */\n      swap1\n      tag_144\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2631:2684  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      jump\t// in\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2608:2626  _balances[account] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2608:2617  _balances */\n      0x0d\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2608:2626  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2608:2630  _balances[account].mul */\n      tag_145\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2608:2685  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2608:2689  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div */\n      swap1\n      tag_146\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2608:2695  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2608:2699  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      swap1\n      tag_147\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2608:2717  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2601:2717  return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap3\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2528:2724  function earned(address account) public view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7312:7796  function setPaused(bool _paused) external onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7463:7469  paused */\n      and(0xff, sload(0x0f))\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7452:7469  _paused == paused */\n      iszero\n      iszero\n      dup2\n      iszero\n      iszero\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7448:7502  if (_paused == paused) {... */\n      eq\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7485:7492  return; */\n      tag_151\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7448:7502  if (_paused == paused) {... */\n      jumpi\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7545:7551  paused */\n      0x0f\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7545:7561  paused = _paused */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0xff\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7627:7633  paused */\n      and\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7623:7691  if (paused) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7665:7680  block.timestamp */\n      timestamp\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7649:7662  lastPauseTime */\n      0x0e\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7649:7680  lastPauseTime = block.timestamp */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7623:7691  if (paused) {... */\n    tag_153:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7782:7788  paused */\n      sload(0x0f)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7769:7789  PauseChanged(paused) */\n      mload(0x40)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7782:7788  paused */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1492:1506   */\n      iszero\n        /* \"#utility.yul\":1485:1507   */\n      iszero\n        /* \"#utility.yul\":1467:1508   */\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7769:7789  PauseChanged(paused) */\n      0x8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5\n      swap1\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1440:1458   */\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7769:7789  PauseChanged(paused) */\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1117:1118  _ */\n    tag_151:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7312:7796  function setPaused(bool _paused) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6933:7073  function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7024:7043  rewardsDistribution */\n      0x09\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7024:7066  rewardsDistribution = _rewardsDistribution */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6933:7073  function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2730:2849  function getRewardForDuration() external view returns (uint256) {... */\n    tag_61:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2785:2792  uint256 */\n      0x00\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2811:2842  rewardRate.mul(rewardsDuration) */\n      tag_160\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2826:2841  rewardsDuration */\n      sload(0x06)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2811:2821  rewardRate */\n      sload(0x05)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2811:2825  rewardRate.mul */\n      tag_145\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2811:2842  rewardRate.mul(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2804:2842  return rewardRate.mul(rewardsDuration) */\n      swap1\n      pop\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2730:2849  function getRewardForDuration() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3294:3653  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_162\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_163\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3361:3371  msg.sender */\n      caller\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6082:6098  rewardPerToken() */\n      tag_165\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6082:6096  rewardPerToken */\n      tag_122\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6082:6098  rewardPerToken() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6059:6079  rewardPerTokenStored */\n      0x08\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6059:6098  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6125:6151  lastTimeRewardApplicable() */\n      tag_166\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6125:6149  lastTimeRewardApplicable */\n      tag_96\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6125:6151  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6108:6122  lastUpdateTime */\n      0x07\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6108:6151  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6165:6186  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6161:6315  if (account != address(0)) {... */\n      tag_167\n      jumpi\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6221:6236  earned(account) */\n      tag_168\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6228:6235  account */\n      dup2\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6221:6227  earned */\n      tag_43\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6221:6236  earned(account) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6218  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6209  rewards */\n      0x0b\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6218  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6236  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6284:6304  rewardPerTokenStored */\n      sload(0x08)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6250:6272  userRewardPerTokenPaid */\n      0x0a\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6250:6281  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6250:6304  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6161:6315  if (account != address(0)) {... */\n    tag_167:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3400:3401  0 */\n      0x00\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3391:3397  amount */\n      dup3\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3391:3401  amount > 0 */\n      gt\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3383:3423  require(amount > 0, \"Cannot withdraw 0\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1980:1982   */\n      0x20\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3383:3423  require(amount > 0, \"Cannot withdraw 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1962:1983   */\n      mstore\n        /* \"#utility.yul\":2019:2021   */\n      0x11\n        /* \"#utility.yul\":1999:2017   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1992:2022   */\n      mstore\n      shl(0x7c, 0x043616e6e6f74207769746864726177203)\n        /* \"#utility.yul\":2038:2056   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2031:2078   */\n      mstore\n        /* \"#utility.yul\":2095:2113   */\n      0x64\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3383:3423  require(amount > 0, \"Cannot withdraw 0\") */\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3448:3460  _totalSupply */\n      sload(0x0c)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3448:3472  _totalSupply.sub(amount) */\n      tag_173\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3465:3471  amount */\n      dup4\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3448:3464  _totalSupply.sub */\n      tag_144\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3448:3472  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3433:3445  _totalSupply */\n      0x0c\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3433:3472  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3516:3526  msg.sender */\n      caller\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3506:3527  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3506:3515  _balances */\n      0x0d\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3506:3527  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3506:3539  _balances[msg.sender].sub(amount) */\n      tag_174\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3532:3538  amount */\n      dup4\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3506:3531  _balances[msg.sender].sub */\n      tag_144\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3506:3539  _balances[msg.sender].sub(amount) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3492:3502  msg.sender */\n      caller\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3482:3503  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3482:3491  _balances */\n      0x0d\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3482:3503  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3482:3539  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3556:3568  stakingToken */\n      sload(0x03)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3549:3602  IERC20(stakingToken).safeTransfer(msg.sender, amount) */\n      tag_175\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3556:3568  stakingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3595:3601  amount */\n      dup5\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3549:3582  IERC20(stakingToken).safeTransfer */\n      tag_176\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3549:3602  IERC20(stakingToken).safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3617:3646  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3627:3637  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3617:3646  Withdrawn(msg.sender, amount) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3617:3646  Withdrawn(msg.sender, amount) */\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_151\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4127:5199  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {... */\n    tag_72:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6843:6862  rewardsDistribution */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6829:6839  msg.sender */\n      caller\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6829:6862  msg.sender == rewardsDistribution */\n      eq\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6821:6909  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2326:2328   */\n      0x20\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6821:6909  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2308:2329   */\n      mstore\n        /* \"#utility.yul\":2365:2367   */\n      0x2a\n        /* \"#utility.yul\":2345:2363   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2338:2368   */\n      mstore\n        /* \"#utility.yul\":2404:2438   */\n      0x43616c6c6572206973206e6f742052657761726473446973747269627574696f\n        /* \"#utility.yul\":2384:2402   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2377:2439   */\n      mstore\n      shl(0xb2, 0x1b8818dbdb9d1c9858dd)\n        /* \"#utility.yul\":2455:2473   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2448:2488   */\n      mstore\n        /* \"#utility.yul\":2505:2524   */\n      0x84\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6821:6909  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n      tag_171\n        /* \"#utility.yul\":2124:2530   */\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6821:6909  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n    tag_181:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4225:4226  0 */\n      0x00\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6082:6098  rewardPerToken() */\n      tag_185\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6082:6096  rewardPerToken */\n      tag_122\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6082:6098  rewardPerToken() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6059:6079  rewardPerTokenStored */\n      0x08\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6059:6098  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6125:6151  lastTimeRewardApplicable() */\n      tag_186\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6125:6149  lastTimeRewardApplicable */\n      tag_96\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6125:6151  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6108:6122  lastUpdateTime */\n      0x07\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6108:6151  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6165:6186  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6161:6315  if (account != address(0)) {... */\n      tag_187\n      jumpi\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6221:6236  earned(account) */\n      tag_188\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6228:6235  account */\n      dup2\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6221:6227  earned */\n      tag_43\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6221:6236  earned(account) */\n      jump\t// in\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6218  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6209  rewards */\n      0x0b\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6218  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6236  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6284:6304  rewardPerTokenStored */\n      sload(0x08)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6250:6272  userRewardPerTokenPaid */\n      0x0a\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6250:6281  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6250:6304  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6161:6315  if (account != address(0)) {... */\n    tag_187:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4262:4274  periodFinish */\n      sload(0x04)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4243:4258  block.timestamp */\n      timestamp\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4243:4274  block.timestamp >= periodFinish */\n      lt\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4239:4551  if (block.timestamp >= periodFinish) {... */\n      tag_190\n      jumpi\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4314:4329  rewardsDuration */\n      sload(0x06)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4303:4330  reward.div(rewardsDuration) */\n      tag_191\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4303:4309  reward */\n      dup4\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4303:4313  reward.div */\n      tag_146\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4303:4330  reward.div(rewardsDuration) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4290:4300  rewardRate */\n      0x05\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4290:4330  rewardRate = reward.div(rewardsDuration) */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4239:4551  if (block.timestamp >= periodFinish) {... */\n      jump(tag_192)\n    tag_190:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4381:4393  periodFinish */\n      sload(0x04)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4361:4378  uint256 remaining */\n      0x00\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4381:4414  periodFinish.sub(block.timestamp) */\n      tag_193\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4398:4413  block.timestamp */\n      timestamp\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4381:4397  periodFinish.sub */\n      tag_144\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4381:4414  periodFinish.sub(block.timestamp) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4361:4414  uint256 remaining = periodFinish.sub(block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4428:4444  uint256 leftover */\n      0x00\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4447:4472  remaining.mul(rewardRate) */\n      tag_194\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4461:4471  rewardRate */\n      sload(0x05)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4447:4456  remaining */\n      dup4\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4447:4460  remaining.mul */\n      tag_145\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4447:4472  remaining.mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4524:4539  rewardsDuration */\n      sload(0x06)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4428:4472  uint256 leftover = remaining.mul(rewardRate) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4499:4540  reward.add(leftover).div(rewardsDuration) */\n      tag_195\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4499:4519  reward.add(leftover) */\n      tag_141\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4499:4505  reward */\n      dup7\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4428:4472  uint256 leftover = remaining.mul(rewardRate) */\n      dup5\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4499:4509  reward.add */\n      tag_147\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4499:4519  reward.add(leftover) */\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4499:4540  reward.add(leftover).div(rewardsDuration) */\n    tag_195:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4486:4496  rewardRate */\n      0x05\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4486:4540  rewardRate = reward.add(leftover).div(rewardsDuration) */\n      sstore\n      pop\n      pop\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4239:4551  if (block.timestamp >= periodFinish) {... */\n    tag_192:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4927:4939  rewardsToken */\n      sload(0x02)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4920:4965  IERC20(rewardsToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4959:4963  this */\n      address\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4920:4965  IERC20(rewardsToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1265:1316   */\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4905:4917  uint balance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4927:4939  rewardsToken */\n      and\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4920:4950  IERC20(rewardsToken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1238:1256   */\n      0x24\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4920:4965  IERC20(rewardsToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_199:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4905:4965  uint balance = IERC20(rewardsToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4997:5025  balance.div(rewardsDuration) */\n      tag_202\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5009:5024  rewardsDuration */\n      sload(0x06)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4997:5004  balance */\n      dup3\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4997:5008  balance.div */\n      tag_146\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4997:5025  balance.div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_202:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4983:4993  rewardRate */\n      sload(0x05)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4983:5025  rewardRate <= balance.div(rewardsDuration) */\n      gt\n      iszero\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4975:5054  require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2926:2928   */\n      0x20\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4975:5054  require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2908:2929   */\n      mstore\n        /* \"#utility.yul\":2965:2967   */\n      0x18\n        /* \"#utility.yul\":2945:2963   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2938:2968   */\n      mstore\n        /* \"#utility.yul\":3004:3030   */\n      0x50726f76696465642072657761726420746f6f20686967680000000000000000\n        /* \"#utility.yul\":2984:3002   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2977:3031   */\n      mstore\n        /* \"#utility.yul\":3048:3066   */\n      0x64\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4975:5054  require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\") */\n      tag_171\n        /* \"#utility.yul\":2724:3072   */\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4975:5054  require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\") */\n    tag_203:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5082:5097  block.timestamp */\n      timestamp\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5065:5079  lastUpdateTime */\n      0x07\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5065:5097  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5142:5157  rewardsDuration */\n      sload(0x06)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5122:5158  block.timestamp.add(rewardsDuration) */\n      tag_206\n      swap2\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5082:5097  block.timestamp */\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5122:5141  block.timestamp.add */\n      tag_147\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5122:5158  block.timestamp.add(rewardsDuration) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5107:5119  periodFinish */\n      0x04\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5107:5158  periodFinish = block.timestamp.add(rewardsDuration) */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5173:5192  RewardAdded(reward) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5173:5192  RewardAdded(reward) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5173:5192  RewardAdded(reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4229:5199  {... */\n      pop\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6919:6920  _ */\n      pop\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4127:5199  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {... */\n      pop\n      jump\t// out\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3659:3967  function getReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_209\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_163\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_209:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3713:3723  msg.sender */\n      caller\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6082:6098  rewardPerToken() */\n      tag_211\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6082:6096  rewardPerToken */\n      tag_122\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6082:6098  rewardPerToken() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6059:6079  rewardPerTokenStored */\n      0x08\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6059:6098  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6125:6151  lastTimeRewardApplicable() */\n      tag_212\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6125:6149  lastTimeRewardApplicable */\n      tag_96\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6125:6151  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_212:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6108:6122  lastUpdateTime */\n      0x07\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6108:6151  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6165:6186  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6161:6315  if (account != address(0)) {... */\n      tag_213\n      jumpi\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6221:6236  earned(account) */\n      tag_214\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6228:6235  account */\n      dup2\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6221:6227  earned */\n      tag_43\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6221:6236  earned(account) */\n      jump\t// in\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6218  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6209  rewards */\n      0x0b\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6218  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6236  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6284:6304  rewardPerTokenStored */\n      sload(0x08)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6250:6272  userRewardPerTokenPaid */\n      0x0a\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6250:6281  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6250:6304  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6161:6315  if (account != address(0)) {... */\n    tag_213:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3760:3770  msg.sender */\n      caller\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3735:3749  uint256 reward */\n      0x00\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3752:3771  rewards[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3752:3759  rewards */\n      0x0b\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3752:3771  rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3785:3795  reward > 0 */\n      dup1\n      iszero\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3781:3961  if (reward > 0) {... */\n      tag_216\n      jumpi\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3819:3829  msg.sender */\n      caller\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3833:3834  0 */\n      0x00\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3811:3830  rewards[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3811:3818  rewards */\n      0x0b\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3811:3830  rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3811:3834  rewards[msg.sender] = 0 */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3855:3867  rewardsToken */\n      sload(0x02)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3848:3901  IERC20(rewardsToken).safeTransfer(msg.sender, reward) */\n      tag_217\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3855:3867  rewardsToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3894:3900  reward */\n      dup4\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3848:3881  IERC20(rewardsToken).safeTransfer */\n      tag_176\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3848:3901  IERC20(rewardsToken).safeTransfer(msg.sender, reward) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3920:3950  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3931:3941  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3920:3950  RewardPaid(msg.sender, reward) */\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3920:3950  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3781:3961  if (reward > 0) {... */\n    tag_216:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3725:3967  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_219\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_219:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3659:3967  function getReward() public nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2041:2194  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_96:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2098:2105  uint256 */\n      0x00\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2142:2154  periodFinish */\n      sload(0x04)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2124:2139  block.timestamp */\n      timestamp\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2124:2154  block.timestamp < periodFinish */\n      lt\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2124:2187  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      tag_227\n      jumpi\n      pop\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2175:2187  periodFinish */\n      sload(0x04)\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2730:2849  function getRewardForDuration() external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2124:2187  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n    tag_227:\n      pop\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2157:2172  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2041:2194  function lastTimeRewardApplicable() public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5311:5602  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5429:5441  stakingToken */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5413:5441  tokenAddress != stakingToken */\n      swap1\n      dup4\n      and\n      sub\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5405:5479  require(tokenAddress != stakingToken, \"Cannot withdraw the staking token\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3279:3281   */\n      0x20\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5405:5479  require(tokenAddress != stakingToken, \"Cannot withdraw the staking token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3261:3282   */\n      mstore\n        /* \"#utility.yul\":3318:3320   */\n      0x21\n        /* \"#utility.yul\":3298:3316   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3291:3321   */\n      mstore\n        /* \"#utility.yul\":3357:3391   */\n      0x43616e6e6f7420776974686472617720746865207374616b696e6720746f6b65\n        /* \"#utility.yul\":3337:3355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3330:3392   */\n      mstore\n      shl(0xf9, 0x37)\n        /* \"#utility.yul\":3408:3426   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3401:3432   */\n      mstore\n        /* \"#utility.yul\":3449:3468   */\n      0x84\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5405:5479  require(tokenAddress != stakingToken, \"Cannot withdraw the staking token\") */\n      tag_171\n        /* \"#utility.yul\":3077:3474   */\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5405:5479  require(tokenAddress != stakingToken, \"Cannot withdraw the staking token\") */\n    tag_232:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5489:5544  IERC20(tokenAddress).safeTransfer(owner(), tokenAmount) */\n      tag_235\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5523:5530  owner() */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5523:5530  owner() */\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5489:5522  IERC20(tokenAddress).safeTransfer */\n      dup5\n      and\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5532:5543  tokenAmount */\n      dup4\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5489:5522  IERC20(tokenAddress).safeTransfer */\n      tag_176\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5489:5544  IERC20(tokenAddress).safeTransfer(owner(), tokenAmount) */\n      jump\t// in\n    tag_235:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5559:5595  Recovered(tokenAddress, tokenAmount) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3671:3703   */\n      dup5\n      and\n        /* \"#utility.yul\":3653:3704   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3735:3737   */\n      0x20\n        /* \"#utility.yul\":3720:3738   */\n      dup2\n      add\n        /* \"#utility.yul\":3713:3747   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5559:5595  Recovered(tokenAddress, tokenAmount) */\n      0x8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28\n      swap2\n        /* \"#utility.yul\":3626:3644   */\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5559:5595  Recovered(tokenAddress, tokenAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5311:5602  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2907:3288  function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_241\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_163\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7880:7886  paused */\n      and(0xff, sload(0x0f))\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7879:7886  !paused */\n      iszero\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7871:7951  require(!paused, \"This action cannot be performed while the contract is paused\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3960:3962   */\n      0x20\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7871:7951  require(!paused, \"This action cannot be performed while the contract is paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3942:3963   */\n      mstore\n        /* \"#utility.yul\":3999:4001   */\n      0x3c\n        /* \"#utility.yul\":3979:3997   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3972:4002   */\n      mstore\n        /* \"#utility.yul\":4038:4072   */\n      0x5468697320616374696f6e2063616e6e6f7420626520706572666f726d656420\n        /* \"#utility.yul\":4018:4036   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4011:4073   */\n      mstore\n        /* \"#utility.yul\":4109:4139   */\n      0x7768696c652074686520636f6e74726163742069732070617573656400000000\n        /* \"#utility.yul\":4089:4107   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4082:4140   */\n      mstore\n        /* \"#utility.yul\":4157:4176   */\n      0x84\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7871:7951  require(!paused, \"This action cannot be performed while the contract is paused\") */\n      tag_171\n        /* \"#utility.yul\":3758:4182   */\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":7871:7951  require(!paused, \"This action cannot be performed while the contract is paused\") */\n    tag_243:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2983:2993  msg.sender */\n      caller\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6082:6098  rewardPerToken() */\n      tag_247\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6082:6096  rewardPerToken */\n      tag_122\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6082:6098  rewardPerToken() */\n      jump\t// in\n    tag_247:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6059:6079  rewardPerTokenStored */\n      0x08\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6059:6098  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6125:6151  lastTimeRewardApplicable() */\n      tag_248\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6125:6149  lastTimeRewardApplicable */\n      tag_96\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6125:6151  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_248:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6108:6122  lastUpdateTime */\n      0x07\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6108:6151  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6165:6186  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6161:6315  if (account != address(0)) {... */\n      tag_249\n      jumpi\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6221:6236  earned(account) */\n      tag_250\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6228:6235  account */\n      dup2\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6221:6227  earned */\n      tag_43\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6221:6236  earned(account) */\n      jump\t// in\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6218  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6209  rewards */\n      0x0b\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6218  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6202:6236  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6284:6304  rewardPerTokenStored */\n      sload(0x08)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6250:6272  userRewardPerTokenPaid */\n      0x0a\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6250:6281  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6250:6304  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":6161:6315  if (account != address(0)) {... */\n    tag_249:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3022:3023  0 */\n      0x00\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3013:3019  amount */\n      dup3\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3013:3023  amount > 0 */\n      gt\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3005:3042  require(amount > 0, \"Cannot stake 0\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4389:4391   */\n      0x20\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3005:3042  require(amount > 0, \"Cannot stake 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4371:4392   */\n      mstore\n        /* \"#utility.yul\":4428:4430   */\n      0x0e\n        /* \"#utility.yul\":4408:4426   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4401:4431   */\n      mstore\n      shl(0x94, 0x043616e6e6f74207374616b65203)\n        /* \"#utility.yul\":4447:4465   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4440:4484   */\n      mstore\n        /* \"#utility.yul\":4501:4519   */\n      0x64\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3005:3042  require(amount > 0, \"Cannot stake 0\") */\n      tag_171\n        /* \"#utility.yul\":4187:4525   */\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3005:3042  require(amount > 0, \"Cannot stake 0\") */\n    tag_252:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3067:3079  _totalSupply */\n      sload(0x0c)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3067:3091  _totalSupply.add(amount) */\n      tag_255\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3084:3090  amount */\n      dup4\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3067:3083  _totalSupply.add */\n      tag_147\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3067:3091  _totalSupply.add(amount) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3052:3064  _totalSupply */\n      0x0c\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3052:3091  _totalSupply = _totalSupply.add(amount) */\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3135:3145  msg.sender */\n      caller\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3125:3146  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3125:3134  _balances */\n      0x0d\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3125:3146  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3125:3158  _balances[msg.sender].add(amount) */\n      tag_256\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3151:3157  amount */\n      dup4\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3125:3150  _balances[msg.sender].add */\n      tag_147\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3125:3158  _balances[msg.sender].add(amount) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3111:3121  msg.sender */\n      caller\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3101:3122  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3101:3110  _balances */\n      0x0d\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3101:3122  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3101:3158  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3175:3187  stakingToken */\n      sload(0x03)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3168:3240  IERC20(stakingToken).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_257\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3175:3187  stakingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3226:3230  this */\n      address\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3233:3239  amount */\n      dup6\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3168:3205  IERC20(stakingToken).safeTransferFrom */\n      tag_258\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3168:3240  IERC20(stakingToken).safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3255:3281  Staked(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3262:3272  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3255:3281  Staked(msg.sender, amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3255:3281  Staked(msg.sender, amount) */\n      tag_177\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5608:5961  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_262:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5730:5742  periodFinish */\n      sload(0x04)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5712:5727  block.timestamp */\n      timestamp\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5712:5742  block.timestamp > periodFinish */\n      gt\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5691:5856  require(... */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4732:4734   */\n      0x20\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5691:5856  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4714:4735   */\n      mstore\n        /* \"#utility.yul\":4771:4773   */\n      0x58\n        /* \"#utility.yul\":4751:4769   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4744:4774   */\n      mstore\n        /* \"#utility.yul\":4810:4844   */\n      0x50726576696f7573207265776172647320706572696f64206d75737420626520\n        /* \"#utility.yul\":4790:4808   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4783:4845   */\n      mstore\n        /* \"#utility.yul\":4881:4915   */\n      0x636f6d706c657465206265666f7265206368616e67696e672074686520647572\n        /* \"#utility.yul\":4861:4879   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4854:4916   */\n      mstore\n        /* \"#utility.yul\":4953:4979   */\n      0x6174696f6e20666f7220746865206e657720706572696f640000000000000000\n        /* \"#utility.yul\":4932:4951   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":4925:4980   */\n      mstore\n        /* \"#utility.yul\":4997:5016   */\n      0xa4\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5691:5856  require(... */\n      tag_171\n        /* \"#utility.yul\":4530:5022   */\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5691:5856  require(... */\n    tag_264:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5866:5881  rewardsDuration */\n      0x06\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5866:5900  rewardsDuration = _rewardsDuration */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5915:5954  RewardsDurationUpdated(rewardsDuration) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5915:5954  RewardsDurationUpdated(rewardsDuration) */\n      0xfb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":5915:5954  RewardsDurationUpdated(rewardsDuration) */\n      tag_154\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2200:2522  function rewardPerToken() public view returns (uint256) {... */\n    tag_122:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2247:2254  uint256 */\n      0x00\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2270:2282  _totalSupply */\n      sload(0x0c)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2286:2287  0 */\n      0x00\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2270:2287  _totalSupply == 0 */\n      sub\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2266:2341  if (_totalSupply == 0) {... */\n      tag_269\n      jumpi\n      pop\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2310:2330  rewardPerTokenStored */\n      sload(0x08)\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2200:2522  function rewardPerToken() public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2266:2341  if (_totalSupply == 0) {... */\n    tag_269:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2369:2515  rewardPerTokenStored.add(... */\n      tag_160\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2411:2501  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n      tag_271\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2488:2500  _totalSupply */\n      sload(0x0c)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2411:2483  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_141\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2478:2482  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2411:2473  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_274\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2462:2472  rewardRate */\n      sload(0x05)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2411:2457  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_274\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2442:2456  lastUpdateTime */\n      sload(0x07)\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2411:2437  lastTimeRewardApplicable() */\n      tag_143\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2411:2435  lastTimeRewardApplicable */\n      tag_96\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2411:2437  lastTimeRewardApplicable() */\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2411:2457  lastTimeRewardApplicable().sub(lastUpdateTime) */\n    tag_274:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2411:2461  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      swap1\n      tag_145\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2411:2473  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2411:2501  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n    tag_271:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2369:2389  rewardPerTokenStored */\n      sload(0x08)\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2369:2393  rewardPerTokenStored.add */\n      tag_147\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":2369:2515  rewardPerTokenStored.add(... */\n      jump\t// in\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":3973:4067  function exit() external {... */\n    tag_131:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4027:4037  msg.sender */\n      caller\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4017:4038  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4017:4026  _balances */\n      0x0d\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4017:4038  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4008:4039  withdraw(_balances[msg.sender]) */\n      tag_277\n      swap1\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4008:4016  withdraw */\n      tag_66\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4008:4039  withdraw(_balances[msg.sender]) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4049:4060  getReward() */\n      tag_219\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4049:4058  getReward */\n      tag_74\n        /* \"contracts/Zero2HeroWeek2StakingRewards.sol\":4049:4060  getReward() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_280:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5229:5231   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5211:5232   */\n      mstore\n        /* \"#utility.yul\":5268:5270   */\n      0x26\n        /* \"#utility.yul\":5248:5266   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5241:5271   */\n      mstore\n        /* \"#utility.yul\":5307:5341   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5287:5305   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5280:5342   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5358:5376   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5351:5387   */\n      mstore\n        /* \"#utility.yul\":5404:5423   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_171\n        /* \"#utility.yul\":5027:5429   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_282:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_287\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_287\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_291\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_287\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_294\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_287\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_297\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6426:6428   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6408:6429   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6445:6463   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6438:6468   */\n      mstore\n        /* \"#utility.yul\":6504:6538   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6484:6502   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6477:6539   */\n      mstore\n        /* \"#utility.yul\":6556:6574   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_171\n        /* \"#utility.yul\":6224:6580   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6787:6789   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6769:6790   */\n      mstore\n        /* \"#utility.yul\":6826:6828   */\n      0x1f\n        /* \"#utility.yul\":6806:6824   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6799:6829   */\n      mstore\n        /* \"#utility.yul\":6865:6898   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6845:6863   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6838:6899   */\n      mstore\n        /* \"#utility.yul\":6916:6934   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_171\n        /* \"#utility.yul\":6585:6940   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_306:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3671:3703   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3653:3704   */\n      mstore\n        /* \"#utility.yul\":3720:3738   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3713:3747   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_310\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":925:948  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":3626:3644   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_311:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:894  _callOptionalReturn */\n      tag_312\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7203:7218   */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7185:7219   */\n      mstore\n        /* \"#utility.yul\":7255:7270   */\n      dup4\n      and\n        /* \"#utility.yul\":7235:7253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7228:7271   */\n      mstore\n        /* \"#utility.yul\":7287:7305   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":7280:7314   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_316\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":7120:7138   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_311\n        /* \"#utility.yul\":6945:7320   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_321\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      and\n      tag_322\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_324\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7777:7779   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7759:7780   */\n      mstore\n        /* \"#utility.yul\":7816:7818   */\n      0x2a\n        /* \"#utility.yul\":7796:7814   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7789:7819   */\n      mstore\n        /* \"#utility.yul\":7855:7889   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":7835:7853   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7828:7890   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":7906:7924   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7899:7939   */\n      mstore\n        /* \"#utility.yul\":7956:7975   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_171\n        /* \"#utility.yul\":7575:7981   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_330\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_331\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8188:8190   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8170:8191   */\n      mstore\n        /* \"#utility.yul\":8227:8229   */\n      0x26\n        /* \"#utility.yul\":8207:8225   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8200:8230   */\n      mstore\n        /* \"#utility.yul\":8266:8300   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":8246:8264   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8239:8301   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":8317:8335   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8310:8346   */\n      mstore\n        /* \"#utility.yul\":8363:8382   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_171\n        /* \"#utility.yul\":7986:8388   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_336\n      swap2\n      swap1\n      tag_337\n      jump\t// in\n    tag_336:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_340\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_339)\n    tag_340:\n      0x60\n      swap2\n      pop\n    tag_339:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_341\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_342\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      tag_348\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9142:9144   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9124:9145   */\n      mstore\n        /* \"#utility.yul\":9181:9183   */\n      0x1d\n        /* \"#utility.yul\":9161:9179   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9154:9184   */\n      mstore\n        /* \"#utility.yul\":9220:9251   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":9200:9218   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9193:9252   */\n      mstore\n        /* \"#utility.yul\":9269:9287   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_171\n        /* \"#utility.yul\":8940:9293   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n    tag_348:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      jump(tag_330)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_330\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_359\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_360:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_366:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_42:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_368:\n        /* \"#utility.yul\":343:372   */\n      tag_287\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_360\n      jump\t// in\n        /* \"#utility.yul\":565:683   */\n    tag_361:\n        /* \"#utility.yul\":651:656   */\n      dup1\n        /* \"#utility.yul\":644:657   */\n      iszero\n        /* \"#utility.yul\":637:658   */\n      iszero\n        /* \"#utility.yul\":630:635   */\n      dup2\n        /* \"#utility.yul\":627:659   */\n      eq\n        /* \"#utility.yul\":617:677   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":673:674   */\n      0x00\n        /* \"#utility.yul\":670:671   */\n      dup1\n        /* \"#utility.yul\":663:675   */\n      revert\n        /* \"#utility.yul\":688:929   */\n    tag_52:\n        /* \"#utility.yul\":744:750   */\n      0x00\n        /* \"#utility.yul\":797:799   */\n      0x20\n        /* \"#utility.yul\":785:794   */\n      dup3\n        /* \"#utility.yul\":776:783   */\n      dup5\n        /* \"#utility.yul\":772:795   */\n      sub\n        /* \"#utility.yul\":768:800   */\n      slt\n        /* \"#utility.yul\":765:817   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":813:814   */\n      0x00\n        /* \"#utility.yul\":810:811   */\n      dup1\n        /* \"#utility.yul\":803:815   */\n      revert\n        /* \"#utility.yul\":765:817   */\n    tag_374:\n        /* \"#utility.yul\":852:861   */\n      dup2\n        /* \"#utility.yul\":839:862   */\n      calldataload\n        /* \"#utility.yul\":871:899   */\n      tag_287\n        /* \"#utility.yul\":893:898   */\n      dup2\n        /* \"#utility.yul\":871:899   */\n      tag_361\n      jump\t// in\n        /* \"#utility.yul\":934:1114   */\n    tag_65:\n        /* \"#utility.yul\":993:999   */\n      0x00\n        /* \"#utility.yul\":1046:1048   */\n      0x20\n        /* \"#utility.yul\":1034:1043   */\n      dup3\n        /* \"#utility.yul\":1025:1032   */\n      dup5\n        /* \"#utility.yul\":1021:1044   */\n      sub\n        /* \"#utility.yul\":1017:1049   */\n      slt\n        /* \"#utility.yul\":1014:1066   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":1062:1063   */\n      0x00\n        /* \"#utility.yul\":1059:1060   */\n      dup1\n        /* \"#utility.yul\":1052:1064   */\n      revert\n        /* \"#utility.yul\":1014:1066   */\n    tag_377:\n      pop\n        /* \"#utility.yul\":1085:1108   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":934:1114   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1519:1773   */\n    tag_100:\n        /* \"#utility.yul\":1587:1593   */\n      0x00\n        /* \"#utility.yul\":1595:1601   */\n      dup1\n        /* \"#utility.yul\":1648:1650   */\n      0x40\n        /* \"#utility.yul\":1636:1645   */\n      dup4\n        /* \"#utility.yul\":1627:1634   */\n      dup6\n        /* \"#utility.yul\":1623:1646   */\n      sub\n        /* \"#utility.yul\":1619:1651   */\n      slt\n        /* \"#utility.yul\":1616:1668   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1616:1668   */\n    tag_381:\n        /* \"#utility.yul\":1687:1716   */\n      tag_382\n        /* \"#utility.yul\":1706:1715   */\n      dup4\n        /* \"#utility.yul\":1687:1716   */\n      tag_360\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1677:1716   */\n      swap5\n        /* \"#utility.yul\":1763:1765   */\n      0x20\n        /* \"#utility.yul\":1748:1766   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1735:1767   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1519:1773   */\n      jump\t// out\n        /* \"#utility.yul\":2535:2719   */\n    tag_201:\n        /* \"#utility.yul\":2605:2611   */\n      0x00\n        /* \"#utility.yul\":2658:2660   */\n      0x20\n        /* \"#utility.yul\":2646:2655   */\n      dup3\n        /* \"#utility.yul\":2637:2644   */\n      dup5\n        /* \"#utility.yul\":2633:2656   */\n      sub\n        /* \"#utility.yul\":2629:2661   */\n      slt\n        /* \"#utility.yul\":2626:2678   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2671:2672   */\n      dup1\n        /* \"#utility.yul\":2664:2676   */\n      revert\n        /* \"#utility.yul\":2626:2678   */\n    tag_386:\n      pop\n        /* \"#utility.yul\":2697:2713   */\n      mload\n      swap2\n        /* \"#utility.yul\":2535:2719   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5434:5561   */\n    tag_362:\n        /* \"#utility.yul\":5495:5505   */\n      0x4e487b71\n        /* \"#utility.yul\":5490:5493   */\n      0xe0\n        /* \"#utility.yul\":5486:5506   */\n      shl\n        /* \"#utility.yul\":5483:5484   */\n      0x00\n        /* \"#utility.yul\":5476:5507   */\n      mstore\n        /* \"#utility.yul\":5526:5530   */\n      0x11\n        /* \"#utility.yul\":5523:5524   */\n      0x04\n        /* \"#utility.yul\":5516:5531   */\n      mstore\n        /* \"#utility.yul\":5550:5554   */\n      0x24\n        /* \"#utility.yul\":5547:5548   */\n      0x00\n        /* \"#utility.yul\":5540:5555   */\n      revert\n        /* \"#utility.yul\":5566:5694   */\n    tag_288:\n        /* \"#utility.yul\":5633:5642   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5654:5665   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5651:5688   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":5668:5686   */\n      tag_139\n      tag_362\n      jump\t// in\n        /* \"#utility.yul\":5699:5867   */\n    tag_291:\n        /* \"#utility.yul\":5772:5781   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5803:5812   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5820:5835   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5814:5836   */\n      dup5\n      eq\n        /* \"#utility.yul\":5800:5837   */\n      or\n        /* \"#utility.yul\":5790:5861   */\n      tag_139\n      jumpi\n        /* \"#utility.yul\":5841:5859   */\n      tag_139\n      tag_362\n      jump\t// in\n        /* \"#utility.yul\":5872:6089   */\n    tag_294:\n        /* \"#utility.yul\":5912:5913   */\n      0x00\n        /* \"#utility.yul\":5938:5939   */\n      dup3\n        /* \"#utility.yul\":5928:6060   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":5982:5992   */\n      0x4e487b71\n        /* \"#utility.yul\":5977:5980   */\n      0xe0\n        /* \"#utility.yul\":5973:5993   */\n      shl\n        /* \"#utility.yul\":5970:5971   */\n      0x00\n        /* \"#utility.yul\":5963:5994   */\n      mstore\n        /* \"#utility.yul\":6017:6021   */\n      0x12\n        /* \"#utility.yul\":6014:6015   */\n      0x04\n        /* \"#utility.yul\":6007:6022   */\n      mstore\n        /* \"#utility.yul\":6045:6049   */\n      0x24\n        /* \"#utility.yul\":6042:6043   */\n      0x00\n        /* \"#utility.yul\":6035:6050   */\n      revert\n        /* \"#utility.yul\":5928:6060   */\n    tag_402:\n      pop\n        /* \"#utility.yul\":6074:6083   */\n      div\n      swap1\n        /* \"#utility.yul\":5872:6089   */\n      jump\t// out\n        /* \"#utility.yul\":6094:6219   */\n    tag_297:\n        /* \"#utility.yul\":6159:6168   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6180:6190   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6177:6213   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":6193:6211   */\n      tag_139\n      tag_362\n      jump\t// in\n        /* \"#utility.yul\":7325:7570   */\n    tag_325:\n        /* \"#utility.yul\":7392:7398   */\n      0x00\n        /* \"#utility.yul\":7445:7447   */\n      0x20\n        /* \"#utility.yul\":7433:7442   */\n      dup3\n        /* \"#utility.yul\":7424:7431   */\n      dup5\n        /* \"#utility.yul\":7420:7443   */\n      sub\n        /* \"#utility.yul\":7416:7448   */\n      slt\n        /* \"#utility.yul\":7413:7465   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":7461:7462   */\n      0x00\n        /* \"#utility.yul\":7458:7459   */\n      dup1\n        /* \"#utility.yul\":7451:7463   */\n      revert\n        /* \"#utility.yul\":7413:7465   */\n    tag_410:\n        /* \"#utility.yul\":7493:7502   */\n      dup2\n        /* \"#utility.yul\":7487:7503   */\n      mload\n        /* \"#utility.yul\":7512:7540   */\n      tag_287\n        /* \"#utility.yul\":7534:7539   */\n      dup2\n        /* \"#utility.yul\":7512:7540   */\n      tag_361\n      jump\t// in\n        /* \"#utility.yul\":8393:8643   */\n    tag_363:\n        /* \"#utility.yul\":8478:8479   */\n      0x00\n        /* \"#utility.yul\":8488:8601   */\n    tag_415:\n        /* \"#utility.yul\":8502:8508   */\n      dup4\n        /* \"#utility.yul\":8499:8500   */\n      dup2\n        /* \"#utility.yul\":8496:8509   */\n      lt\n        /* \"#utility.yul\":8488:8601   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":8578:8589   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8572:8590   */\n      mload\n        /* \"#utility.yul\":8559:8570   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":8552:8591   */\n      mstore\n        /* \"#utility.yul\":8524:8526   */\n      0x20\n        /* \"#utility.yul\":8517:8527   */\n      add\n        /* \"#utility.yul\":8488:8601   */\n      jump(tag_415)\n    tag_417:\n      pop\n      pop\n        /* \"#utility.yul\":8635:8636   */\n      0x00\n        /* \"#utility.yul\":8617:8633   */\n      swap2\n      add\n        /* \"#utility.yul\":8610:8637   */\n      mstore\n        /* \"#utility.yul\":8393:8643   */\n      jump\t// out\n        /* \"#utility.yul\":8648:8935   */\n    tag_337:\n        /* \"#utility.yul\":8777:8780   */\n      0x00\n        /* \"#utility.yul\":8815:8821   */\n      dup3\n        /* \"#utility.yul\":8809:8822   */\n      mload\n        /* \"#utility.yul\":8831:8897   */\n      tag_419\n        /* \"#utility.yul\":8890:8896   */\n      dup2\n        /* \"#utility.yul\":8885:8888   */\n      dup5\n        /* \"#utility.yul\":8878:8882   */\n      0x20\n        /* \"#utility.yul\":8870:8876   */\n      dup8\n        /* \"#utility.yul\":8866:8883   */\n      add\n        /* \"#utility.yul\":8831:8897   */\n      tag_363\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8913:8929   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":8648:8935   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9298:9694   */\n    tag_359:\n        /* \"#utility.yul\":9447:9449   */\n      0x20\n        /* \"#utility.yul\":9436:9445   */\n      dup2\n        /* \"#utility.yul\":9429:9450   */\n      mstore\n        /* \"#utility.yul\":9410:9414   */\n      0x00\n        /* \"#utility.yul\":9479:9485   */\n      dup3\n        /* \"#utility.yul\":9473:9486   */\n      mload\n        /* \"#utility.yul\":9522:9528   */\n      dup1\n        /* \"#utility.yul\":9517:9519   */\n      0x20\n        /* \"#utility.yul\":9506:9515   */\n      dup5\n        /* \"#utility.yul\":9502:9520   */\n      add\n        /* \"#utility.yul\":9495:9529   */\n      mstore\n        /* \"#utility.yul\":9538:9617   */\n      tag_422\n        /* \"#utility.yul\":9610:9616   */\n      dup2\n        /* \"#utility.yul\":9605:9607   */\n      0x40\n        /* \"#utility.yul\":9594:9603   */\n      dup6\n        /* \"#utility.yul\":9590:9608   */\n      add\n        /* \"#utility.yul\":9585:9587   */\n      0x20\n        /* \"#utility.yul\":9577:9583   */\n      dup8\n        /* \"#utility.yul\":9573:9588   */\n      add\n        /* \"#utility.yul\":9538:9617   */\n      tag_363\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9678:9680   */\n      0x1f\n        /* \"#utility.yul\":9657:9672   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":9653:9682   */\n      and\n        /* \"#utility.yul\":9638:9683   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":9685:9687   */\n      0x40\n        /* \"#utility.yul\":9634:9688   */\n      add\n      swap3\n        /* \"#utility.yul\":9298:9694   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cc3c4486f15c843dd1b7b7cb4910c5692ca750d9a3f4d871a7bcd9814534737164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1303": {
									"entryPoint": null,
									"id": 1303,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_903": {
									"entryPoint": null,
									"id": 903,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 155,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:576:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:10"
															},
															"nodeType": "YulIf",
															"src": "115:70:10"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "311:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "357:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "366:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "369:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "332:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "341:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "353:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "324:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "324:32:10"
															},
															"nodeType": "YulIf",
															"src": "321:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "382:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "392:29:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:40:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "441:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "485:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "496:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "481:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "451:29:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:49:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "509:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "553:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "564:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "549:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "549:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "519:29:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:49:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "509:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "261:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "272:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "284:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "292:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "300:6:10",
														"type": ""
													}
												],
												"src": "196:378:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526000600455600060055562093a806006553480156200002257600080fd5b50604051620015b0380380620015b083398101604081905262000045916200010a565b600160005562000055336200009b565b600280546001600160a01b039384166001600160a01b03199182161790915560038054928416928216929092179091556009805493909216921691909117905562000154565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200010557600080fd5b919050565b6000806000606084860312156200012057600080fd5b6200012b84620000ed565b92506200013b60208501620000ed565b91506200014b60408501620000ed565b90509250925092565b61144c80620001646000396000f3fe608060405234801561001057600080fd5b50600436106101d95760003560e01c80637b0a47ee11610104578063c8f33c91116100a2578063df136d6511610071578063df136d65146103c7578063e9fad8ee146103d0578063ebe2b12b146103d8578063f2fde38b146103e157600080fd5b8063c8f33c9114610390578063cc1a378f14610399578063cd3daf9d146103ac578063d1af0c7d146103b457600080fd5b80638b876347116100de5780638b876347146103435780638da5cb5b1461036357806391b4ded914610374578063a694fc3a1461037d57600080fd5b80637b0a47ee1461031f57806380faa57d146103285780638980f11f1461033057600080fd5b8063386a95251161017c5780635c975abb1161014b5780635c975abb146102be57806370a08231146102db578063715018a61461030457806372f702f31461030c57600080fd5b8063386a95251461026f5780633c6b16ab146102785780633d18b9121461028b5780633fc6df6e1461029357600080fd5b806318160ddd116101b857806318160ddd1461023957806319762143146102415780631c1f78eb146102545780632e1a7d4d1461025c57600080fd5b80628cc262146101de5780630700037d1461020457806316c38b3c14610224575b600080fd5b6101f16101ec36600461126f565b6103f4565b6040519081526020015b60405180910390f35b6101f161021236600461126f565b600b6020526000908152604090205481565b610237610232366004611298565b610472565b005b600c546101f1565b61023761024f36600461126f565b6104e9565b6101f1610513565b61023761026a3660046112b5565b610531565b6101f160065481565b6102376102863660046112b5565b610674565b6102376108c2565b6009546102a6906001600160a01b031681565b6040516001600160a01b0390911681526020016101fb565b600f546102cb9060ff1681565b60405190151581526020016101fb565b6101f16102e936600461126f565b6001600160a01b03166000908152600d602052604090205490565b6102376109a8565b6003546102a6906001600160a01b031681565b6101f160055481565b6101f16109ba565b61023761033e3660046112ce565b6109d1565b6101f161035136600461126f565b600a6020526000908152604090205481565b6001546001600160a01b03166102a6565b6101f1600e5481565b61023761038b3660046112b5565b610aad565b6101f160075481565b6102376103a73660046112b5565b610c53565b6101f1610d2d565b6002546102a6906001600160a01b031681565b6101f160085481565b610237610d78565b6101f160045481565b6102376103ef36600461126f565b610d99565b6001600160a01b0381166000908152600b6020908152604080832054600a90925282205461046c919061046690670de0b6b3a764000090610460906104419061043b610d2d565b90610e0f565b6001600160a01b0388166000908152600d602052604090205490610e22565b90610e2e565b90610e3a565b92915050565b61047a610e46565b600f5460ff161515811515146104e657600f805460ff191682151590811790915560ff16156104a85742600e555b600f5460405160ff909116151581527f8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5906020015b60405180910390a15b50565b6104f1610e46565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b600061052c600654600554610e2290919063ffffffff16565b905090565b610539610ea0565b33610542610d2d565b60085561054d6109ba565b6007556001600160a01b0381161561059457610568816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600854600a909152919020555b600082116105dd5760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b60448201526064015b60405180910390fd5b600c546105ea9083610e0f565b600c55336000908152600d60205260409020546106079083610e0f565b336000818152600d6020526040902091909155600354610633916001600160a01b039091169084610ef9565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a2506104e66001600055565b6009546001600160a01b031633146106e15760405162461bcd60e51b815260206004820152602a60248201527f43616c6c6572206973206e6f742052657761726473446973747269627574696f6044820152691b8818dbdb9d1c9858dd60b21b60648201526084016105d4565b60006106eb610d2d565b6008556106f66109ba565b6007556001600160a01b0381161561073d57610711816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600854600a909152919020555b600454421061075c57600654610754908390610e2e565b60055561079f565b60045460009061076c9042610e0f565b9050600061078560055483610e2290919063ffffffff16565b600654909150610799906104608684610e3a565b60055550505b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080c91906112f8565b905061082360065482610e2e90919063ffffffff16565b60055411156108745760405162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f2068696768000000000000000060448201526064016105d4565b4260078190556006546108879190610e3a565b6004556040518381527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a1505050565b6108ca610ea0565b336108d3610d2d565b6008556108de6109ba565b6007556001600160a01b03811615610925576108f9816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600854600a909152919020555b336000908152600b6020526040902054801561099a57336000818152600b6020526040812055600254610964916001600160a01b039091169083610ef9565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25b50506109a66001600055565b565b6109b0610e46565b6109a66000610f61565b600060045442106109cc575060045490565b504290565b6109d9610e46565b6003546001600160a01b0390811690831603610a415760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656044820152603760f91b60648201526084016105d4565b610a67610a566001546001600160a01b031690565b6001600160a01b0384169083610ef9565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28910160405180910390a15050565b610ab5610ea0565b600f5460ff1615610b2e5760405162461bcd60e51b815260206004820152603c60248201527f5468697320616374696f6e2063616e6e6f7420626520706572666f726d65642060448201527f7768696c652074686520636f6e7472616374206973207061757365640000000060648201526084016105d4565b33610b37610d2d565b600855610b426109ba565b6007556001600160a01b03811615610b8957610b5d816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600854600a909152919020555b60008211610bca5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b60448201526064016105d4565b600c54610bd79083610e3a565b600c55336000908152600d6020526040902054610bf49083610e3a565b336000818152600d6020526040902091909155600354610c21916001600160a01b03909116903085610fb3565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610661565b610c5b610e46565b6004544211610cf85760405162461bcd60e51b815260206004820152605860248201527f50726576696f7573207265776172647320706572696f64206d7573742062652060448201527f636f6d706c657465206265666f7265206368616e67696e67207468652064757260648201527f6174696f6e20666f7220746865206e657720706572696f640000000000000000608482015260a4016105d4565b60068190556040518181527ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3906020016104dd565b6000600c54600003610d40575060085490565b61052c610d6f600c54610460670de0b6b3a7640000610d69600554610d6960075461043b6109ba565b90610e22565b60085490610e3a565b336000908152600d6020526040902054610d9190610531565b6109a66108c2565b610da1610e46565b6001600160a01b038116610e065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d4565b6104e681610f61565b6000610e1b8284611327565b9392505050565b6000610e1b828461133a565b6000610e1b8284611351565b6000610e1b8284611373565b6001546001600160a01b031633146109a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d4565b600260005403610ef25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d4565b6002600055565b6040516001600160a01b038316602482015260448101829052610f5c90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ff1565b505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610feb9085906323b872dd60e01b90608401610f25565b50505050565b6000611046826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110c39092919063ffffffff16565b805190915015610f5c57808060200190518101906110649190611386565b610f5c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105d4565b60606110d284846000856110da565b949350505050565b60608247101561113b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105d4565b600080866001600160a01b0316858760405161115791906113c7565b60006040518083038185875af1925050503d8060008114611194576040519150601f19603f3d011682016040523d82523d6000602084013e611199565b606091505b50915091506111aa878383876111b5565b979650505050505050565b6060831561122457825160000361121d576001600160a01b0385163b61121d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105d4565b50816110d2565b6110d283838151156112395781518083602001fd5b8060405162461bcd60e51b81526004016105d491906113e3565b80356001600160a01b038116811461126a57600080fd5b919050565b60006020828403121561128157600080fd5b610e1b82611253565b80151581146104e657600080fd5b6000602082840312156112aa57600080fd5b8135610e1b8161128a565b6000602082840312156112c757600080fd5b5035919050565b600080604083850312156112e157600080fd5b6112ea83611253565b946020939093013593505050565b60006020828403121561130a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561046c5761046c611311565b808202811582820484141761046c5761046c611311565b60008261136e57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561046c5761046c611311565b60006020828403121561139857600080fd5b8151610e1b8161128a565b60005b838110156113be5781810151838201526020016113a6565b50506000910152565b600082516113d98184602087016113a3565b9190910192915050565b60208152600082518060208401526114028160408501602087016113a3565b601f01601f1916919091016040019291505056fea2646970667358221220cc3c4486f15c843dd1b7b7cb4910c5692ca750d9a3f4d871a7bcd9814534737164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH3 0x93A80 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15B0 CODESIZE SUB DUP1 PUSH3 0x15B0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x45 SWAP2 PUSH3 0x10A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH3 0x55 CALLER PUSH3 0x9B JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 DUP5 AND SWAP3 DUP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP4 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x154 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x12B DUP5 PUSH3 0xED JUMP JUMPDEST SWAP3 POP PUSH3 0x13B PUSH1 0x20 DUP6 ADD PUSH3 0xED JUMP JUMPDEST SWAP2 POP PUSH3 0x14B PUSH1 0x40 DUP6 ADD PUSH3 0xED JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x144C DUP1 PUSH3 0x164 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xC8F33C91 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDF136D65 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B876347 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x91B4DED9 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x386A9525 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x19762143 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x224 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x2CB SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x237 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x12CE JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0xD78 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xA SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x466 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x460 SWAP1 PUSH2 0x441 SWAP1 PUSH2 0x43B PUSH2 0xD2D JUMP JUMPDEST SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xE22 JUMP JUMPDEST SWAP1 PUSH2 0xE2E JUMP JUMPDEST SWAP1 PUSH2 0xE3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47A PUSH2 0xE46 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x4E6 JUMPI PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xFF AND ISZERO PUSH2 0x4A8 JUMPI TIMESTAMP PUSH1 0xE SSTORE JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO DUP2 MSTORE PUSH32 0x8FB6C181EE25A520CF3DD6565006EF91229FCFE5A989566C2A3B8C115570CEC5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x4F1 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52C PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xE22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x539 PUSH2 0xEA0 JUMP JUMPDEST CALLER PUSH2 0x542 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x54D PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x594 JUMPI PUSH2 0x568 DUP2 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH2 0x5EA SWAP1 DUP4 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0xC SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x607 SWAP1 DUP4 PUSH2 0xE0F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x633 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x4E6 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742052657761726473446973747269627574696F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1B8818DBDB9D1C9858DD PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EB PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x6F6 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x73D JUMPI PUSH2 0x711 DUP2 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x75C JUMPI PUSH1 0x6 SLOAD PUSH2 0x754 SWAP1 DUP4 SWAP1 PUSH2 0xE2E JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x79F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x76C SWAP1 TIMESTAMP PUSH2 0xE0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x785 PUSH1 0x5 SLOAD DUP4 PUSH2 0xE22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x799 SWAP1 PUSH2 0x460 DUP7 DUP5 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x5 SSTORE POP POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x823 PUSH1 0x6 SLOAD DUP3 PUSH2 0xE2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x887 SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x8CA PUSH2 0xEA0 JUMP JUMPDEST CALLER PUSH2 0x8D3 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x8DE PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x925 JUMPI PUSH2 0x8F9 DUP2 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x99A JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x964 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH2 0x9A6 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9B0 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x9A6 PUSH1 0x0 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x9CC JUMPI POP PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST POP TIMESTAMP SWAP1 JUMP JUMPDEST PUSH2 0x9D9 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420776974686472617720746865207374616B696E6720746F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0xA67 PUSH2 0xA56 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xAB5 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320616374696F6E2063616E6E6F7420626520706572666F726D656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7768696C652074686520636F6E74726163742069732070617573656400000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST CALLER PUSH2 0xB37 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xB42 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xB89 JUMPI PUSH2 0xB5D DUP2 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xBCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0xBD7 SWAP1 DUP4 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0xC SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBF4 SWAP1 DUP4 PUSH2 0xE3A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0xC21 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP6 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH1 0x20 ADD PUSH2 0x661 JUMP JUMPDEST PUSH2 0xC5B PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x58 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726576696F7573207265776172647320706572696F64206D75737420626520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F6D706C657465206265666F7265206368616E67696E672074686520647572 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6174696F6E20666F7220746865206E657720706572696F640000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3 SWAP1 PUSH1 0x20 ADD PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x0 SUB PUSH2 0xD40 JUMPI POP PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52C PUSH2 0xD6F PUSH1 0xC SLOAD PUSH2 0x460 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD69 PUSH1 0x5 SLOAD PUSH2 0xD69 PUSH1 0x7 SLOAD PUSH2 0x43B PUSH2 0x9BA JUMP JUMPDEST SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH2 0xE3A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD91 SWAP1 PUSH2 0x531 JUMP JUMPDEST PUSH2 0x9A6 PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0xDA1 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x4E6 DUP2 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B DUP3 DUP5 PUSH2 0x1327 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B DUP3 DUP5 PUSH2 0x133A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B DUP3 DUP5 PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B DUP3 DUP5 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xF5C SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xFF1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xFEB SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0xF25 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1046 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10C3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF5C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1064 SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10D2 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x10DA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x113B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1157 SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1194 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11AA DUP8 DUP4 DUP4 DUP8 PUSH2 0x11B5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1224 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x121D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x121D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST POP DUP2 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x10D2 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1239 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x126A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1B DUP3 PUSH2 0x1253 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE1B DUP2 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EA DUP4 PUSH2 0x1253 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0x1311 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x136E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE1B DUP2 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13BE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13A6 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x13D9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1402 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC EXTCODECOPY PREVRANDAO DUP7 CALL 0x5C DUP5 RETURNDATASIZE 0xD1 0xB7 0xB7 0xCB 0x49 LT 0xC5 PUSH10 0x2CA750D9A3F4D871A7BC 0xD9 DUP2 GASLIMIT CALLVALUE PUSH20 0x7164736F6C634300081200330000000000000000 ",
							"sourceMap": "735:7236:8:-:0;;;1047:1;1017:31;;1082:1;1054:29;;1122:6;1089:39;;1530:253;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:1;1821:7;:22;936:32:0;719:10:6;936:18:0;:32::i;:::-;1658:12:8;:28;;-1:-1:-1;;;;;1658:28:8;;;-1:-1:-1;;;;;;1658:28:8;;;;;;;1696:12;:28;;;;;;;;;;;;;;;1734:19;:42;;;;;;;;;;;;;;735:7236;;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:177:10:-;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;735:7236:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_560": {
									"entryPoint": 4081,
									"id": 560,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 3654,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_903": {
									"entryPoint": null,
									"id": 903,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_165": {
									"entryPoint": null,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_157": {
									"entryPoint": 3744,
									"id": 157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_890": {
									"entryPoint": null,
									"id": 890,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 3937,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1089": {
									"entryPoint": 3642,
									"id": 1089,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1323": {
									"entryPoint": null,
									"id": 1323,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_1134": {
									"entryPoint": 3630,
									"id": 1134,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@earned_1398": {
									"entryPoint": 1012,
									"id": 1398,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@exit_1581": {
									"entryPoint": 3448,
									"id": 1581,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_715": {
									"entryPoint": 4314,
									"id": 715,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_651": {
									"entryPoint": 4291,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getRewardForDuration_1409": {
									"entryPoint": 1299,
									"id": 1409,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getReward_1567": {
									"entryPoint": 2242,
									"id": 1567,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_579": {
									"entryPoint": null,
									"id": 579,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastPauseTime_1824": {
									"entryPoint": null,
									"id": 1824,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTimeRewardApplicable_1338": {
									"entryPoint": 2490,
									"id": 1338,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastUpdateTime_1263": {
									"entryPoint": null,
									"id": 1263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_1119": {
									"entryPoint": 3618,
									"id": 1119,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@notifyRewardAmount_1673": {
									"entryPoint": 1652,
									"id": 1673,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1826": {
									"entryPoint": null,
									"id": 1826,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@periodFinish_1255": {
									"entryPoint": null,
									"id": 1255,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@recoverERC20_1704": {
									"entryPoint": 2513,
									"id": 1704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 2472,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_1265": {
									"entryPoint": null,
									"id": 1265,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_1369": {
									"entryPoint": 3373,
									"id": 1369,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardRate_1258": {
									"entryPoint": null,
									"id": 1258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsDistribution_1267": {
									"entryPoint": null,
									"id": 1267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsDuration_1261": {
									"entryPoint": null,
									"id": 1261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_1250": {
									"entryPoint": null,
									"id": 1250,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_1275": {
									"entryPoint": null,
									"id": 1275,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_338": {
									"entryPoint": 4019,
									"id": 338,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_312": {
									"entryPoint": 3833,
									"id": 312,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setPaused_1857": {
									"entryPoint": 1138,
									"id": 1857,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardsDistribution_1822": {
									"entryPoint": 1257,
									"id": 1822,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardsDuration_1728": {
									"entryPoint": 3155,
									"id": 1728,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1469": {
									"entryPoint": 2733,
									"id": 1469,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingToken_1252": {
									"entryPoint": null,
									"id": 1252,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1104": {
									"entryPoint": 3599,
									"id": 1104,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_1311": {
									"entryPoint": null,
									"id": 1311,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 3481,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_1271": {
									"entryPoint": null,
									"id": 1271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_846": {
									"entryPoint": 4533,
									"id": 846,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdraw_1523": {
									"entryPoint": 1329,
									"id": 1523,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5027,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9696:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:10"
															},
															"nodeType": "YulIf",
															"src": "272:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:10",
														"type": ""
													}
												],
												"src": "192:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:10",
														"type": ""
													}
												],
												"src": "383:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "607:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "661:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "670:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "673:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "663:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "663:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "663:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "630:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "651:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "644:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "644:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "637:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "637:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "627:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "620:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:40:10"
															},
															"nodeType": "YulIf",
															"src": "617:60:10"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "596:5:10",
														"type": ""
													}
												],
												"src": "565:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "755:174:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "801:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "813:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "803:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "803:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "803:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "776:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "785:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "772:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "772:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "797:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "768:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "768:32:10"
															},
															"nodeType": "YulIf",
															"src": "765:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "826:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "839:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "839:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "830:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "893:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "871:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:28:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "871:28:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "908:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "918:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "908:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "721:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "732:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "744:6:10",
														"type": ""
													}
												],
												"src": "688:241:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1004:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1050:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1059:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1062:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1052:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1052:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1052:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1025:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1034:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1021:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1046:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1017:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:32:10"
															},
															"nodeType": "YulIf",
															"src": "1014:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1075:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1098:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1085:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1075:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "970:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "981:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "993:6:10",
														"type": ""
													}
												],
												"src": "934:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1242:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1253:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1238:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1230:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1272:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1287:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1303:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1308:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1299:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1299:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1312:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1295:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1295:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1283:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1283:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1265:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1265:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1189:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1200:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1211:4:10",
														"type": ""
													}
												],
												"src": "1119:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1444:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1440:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1432:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1474:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1499:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1492:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1492:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1485:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1485:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1467:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1467:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1391:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1413:4:10",
														"type": ""
													}
												],
												"src": "1327:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1606:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1652:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1661:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1664:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1654:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1654:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1654:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1627:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1623:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1648:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1619:32:10"
															},
															"nodeType": "YulIf",
															"src": "1616:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1677:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1706:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1687:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1725:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1752:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1763:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1748:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1748:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1735:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1725:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1564:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1575:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1587:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1595:6:10",
														"type": ""
													}
												],
												"src": "1519:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1952:167:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1969:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1980:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2003:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2014:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1999:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1999:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2019:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1992:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1992:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2042:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2053:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2038:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2038:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f742077697468647261772030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2058:19:10",
																		"type": "",
																		"value": "Cannot withdraw 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2031:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2031:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2031:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2087:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2099:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2110:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2095:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2087:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1929:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1943:4:10",
														"type": ""
													}
												],
												"src": "1778:341:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2298:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2315:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2326:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2308:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2308:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2349:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2360:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2345:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2345:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2365:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2338:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2338:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2388:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2399:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2384:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2384:18:10"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742052657761726473446973747269627574696f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2404:34:10",
																		"type": "",
																		"value": "Caller is not RewardsDistributio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2377:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2377:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2459:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2470:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2455:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2455:18:10"
																	},
																	{
																		"hexValue": "6e20636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2475:12:10",
																		"type": "",
																		"value": "n contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2448:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2448:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2497:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2509:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2520:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2505:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2505:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2497:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2275:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2289:4:10",
														"type": ""
													}
												],
												"src": "2124:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2616:103:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2662:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2671:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2664:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2664:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2664:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2637:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2646:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2633:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2633:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2658:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:32:10"
															},
															"nodeType": "YulIf",
															"src": "2626:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2687:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2703:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2697:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2697:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2582:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2593:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2605:6:10",
														"type": ""
													}
												],
												"src": "2535:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2898:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2915:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2926:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2908:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2908:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2949:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2960:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2945:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2945:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2938:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2938:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2938:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2988:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2984:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2984:18:10"
																	},
																	{
																		"hexValue": "50726f76696465642072657761726420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3004:26:10",
																		"type": "",
																		"value": "Provided reward too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2977:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2977:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2977:54:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3040:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3052:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3063:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3048:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3048:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3040:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2875:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2889:4:10",
														"type": ""
													}
												],
												"src": "2724:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3251:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3268:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3279:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3261:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3261:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3261:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3302:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3313:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3298:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3298:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3318:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3291:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3291:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3291:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3341:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3352:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3337:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3337:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f7420776974686472617720746865207374616b696e6720746f6b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3357:34:10",
																		"type": "",
																		"value": "Cannot withdraw the staking toke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3330:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3330:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3412:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3423:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3408:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3408:18:10"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3428:3:10",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3401:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3401:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3441:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3453:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3464:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3449:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3449:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3441:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3228:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3242:4:10",
														"type": ""
													}
												],
												"src": "3077:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3608:145:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3618:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3630:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3641:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3626:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3626:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3618:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3660:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3675:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3691:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3696:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3687:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3687:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3700:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3683:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3683:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3671:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3671:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3653:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3653:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3653:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3724:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3735:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3720:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3720:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3740:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3713:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3713:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3569:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3580:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3588:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3599:4:10",
														"type": ""
													}
												],
												"src": "3479:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3932:250:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3949:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3960:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3942:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3942:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3942:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3983:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3994:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3979:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3979:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3999:2:10",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3972:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3972:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3972:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4022:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4033:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4018:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4018:18:10"
																	},
																	{
																		"hexValue": "5468697320616374696f6e2063616e6e6f7420626520706572666f726d656420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4038:34:10",
																		"type": "",
																		"value": "This action cannot be performed "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4011:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4011:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4011:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4093:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4104:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4089:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4089:18:10"
																	},
																	{
																		"hexValue": "7768696c652074686520636f6e747261637420697320706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4109:30:10",
																		"type": "",
																		"value": "while the contract is paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4082:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4082:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4082:58:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4149:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4161:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4172:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4157:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4157:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4149:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3909:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3923:4:10",
														"type": ""
													}
												],
												"src": "3758:424:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4361:164:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4378:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4389:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4371:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4371:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4412:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4408:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4408:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4401:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4401:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4451:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4462:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4447:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4467:16:10",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4440:44:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4493:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4505:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4516:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4501:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4501:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4493:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4338:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4352:4:10",
														"type": ""
													}
												],
												"src": "4187:338:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4704:318:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4721:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4732:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4714:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4714:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4714:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4755:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4766:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4751:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4751:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4771:2:10",
																		"type": "",
																		"value": "88"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4744:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4744:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4805:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4790:18:10"
																	},
																	{
																		"hexValue": "50726576696f7573207265776172647320706572696f64206d75737420626520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4810:34:10",
																		"type": "",
																		"value": "Previous rewards period must be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4783:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4783:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4865:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4876:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4861:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4861:18:10"
																	},
																	{
																		"hexValue": "636f6d706c657465206265666f7265206368616e67696e672074686520647572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4881:34:10",
																		"type": "",
																		"value": "complete before changing the dur"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4854:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4854:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4936:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4947:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4932:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4932:19:10"
																	},
																	{
																		"hexValue": "6174696f6e20666f7220746865206e657720706572696f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4953:26:10",
																		"type": "",
																		"value": "ation for the new period"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4925:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:55:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4925:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4989:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5001:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5012:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4997:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4997:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4989:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4681:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4695:4:10",
														"type": ""
													}
												],
												"src": "4530:492:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5201:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5218:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5229:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5211:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5211:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5211:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5252:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5263:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5268:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5241:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5241:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5291:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5302:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5287:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5287:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5307:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5280:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5280:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5280:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5362:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5373:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5358:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5358:18:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5378:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5351:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5351:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5351:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5396:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5408:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5419:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5396:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5178:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5192:4:10",
														"type": ""
													}
												],
												"src": "5027:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5466:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5483:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5490:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5495:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5486:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5486:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5476:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5476:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5523:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5526:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5516:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5516:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5547:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5550:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5540:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5540:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5434:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5615:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5625:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5637:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5640:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5633:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5633:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5625:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5666:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5668:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5668:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5668:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5657:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5663:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5654:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5654:11:10"
															},
															"nodeType": "YulIf",
															"src": "5651:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5597:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5600:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5606:4:10",
														"type": ""
													}
												],
												"src": "5566:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5751:116:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5761:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5776:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5779:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5772:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5772:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5761:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5839:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5841:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5841:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5841:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5810:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5803:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5803:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5817:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5824:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5833:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5820:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5820:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5814:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5814:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5800:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5800:37:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5793:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5793:45:10"
															},
															"nodeType": "YulIf",
															"src": "5790:71:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5730:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5733:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5739:7:10",
														"type": ""
													}
												],
												"src": "5699:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5918:171:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5949:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5970:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5977:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5982:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5973:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5973:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5963:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5963:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5963:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6014:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6017:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6007:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6007:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6007:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6042:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6045:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6035:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6035:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6035:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5938:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5931:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5931:9:10"
															},
															"nodeType": "YulIf",
															"src": "5928:132:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6069:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6078:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6081:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6074:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6074:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6069:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5903:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5906:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5912:1:10",
														"type": ""
													}
												],
												"src": "5872:217:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6142:77:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6152:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6163:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6166:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6159:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6152:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6191:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6193:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6193:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6193:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6183:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6186:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6180:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6180:10:10"
															},
															"nodeType": "YulIf",
															"src": "6177:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6125:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6128:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6134:3:10",
														"type": ""
													}
												],
												"src": "6094:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6398:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6415:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6426:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6408:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6408:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6408:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6449:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6460:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6445:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6445:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6465:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6438:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6438:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6438:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6488:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6499:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6484:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6484:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6504:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6477:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6477:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6477:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6548:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6560:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6571:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6548:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6375:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6389:4:10",
														"type": ""
													}
												],
												"src": "6224:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6759:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6776:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6787:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6769:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6769:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6769:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6810:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6821:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6806:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6806:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6826:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6799:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6799:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6799:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6849:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6860:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6845:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6845:18:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6865:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6838:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6838:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6838:61:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6908:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6920:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6931:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6916:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6916:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6908:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6736:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6750:4:10",
														"type": ""
													}
												],
												"src": "6585:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7102:218:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7112:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7124:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7135:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7120:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7120:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7112:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7147:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7165:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7170:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7161:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7161:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7174:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7157:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7157:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7151:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7192:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7207:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7215:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7203:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7203:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7185:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7185:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7185:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7239:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7250:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7235:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7235:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7259:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7267:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7255:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7255:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7228:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7228:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7228:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7291:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7302:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7287:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7287:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7307:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7280:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7280:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7055:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7066:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7074:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7082:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7093:4:10",
														"type": ""
													}
												],
												"src": "6945:375:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7403:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7449:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7458:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7461:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7451:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7451:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7451:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7424:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7433:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7420:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7420:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7445:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7416:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7416:32:10"
															},
															"nodeType": "YulIf",
															"src": "7413:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7474:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7493:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7487:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7487:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7478:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7534:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7512:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7512:28:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7512:28:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7549:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7559:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7549:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7369:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7380:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7392:6:10",
														"type": ""
													}
												],
												"src": "7325:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7749:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7766:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7777:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7759:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7759:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7759:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7800:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7811:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7796:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7796:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7816:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7789:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7789:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7789:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7839:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7850:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7835:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7835:18:10"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7855:34:10",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7828:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7828:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7828:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7910:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7921:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7906:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7906:18:10"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7926:12:10",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7899:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7899:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7899:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7948:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7960:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7971:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7956:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7956:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7948:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7726:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7740:4:10",
														"type": ""
													}
												],
												"src": "7575:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8160:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8177:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8188:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8170:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8170:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8170:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8211:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8222:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8207:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8207:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8227:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8200:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8200:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8200:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8250:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8261:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8246:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8246:18:10"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8266:34:10",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8239:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8239:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8239:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8321:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8332:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8317:18:10"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8337:8:10",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8310:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8310:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8355:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8367:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8378:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8363:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8363:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8355:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8137:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8151:4:10",
														"type": ""
													}
												],
												"src": "7986:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8459:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8469:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8478:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8473:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8538:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8563:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8568:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8559:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8559:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "8582:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8587:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8578:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8578:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8572:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8572:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8552:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8552:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8552:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8499:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8502:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8496:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8496:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8510:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8512:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8521:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8524:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8517:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8517:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8512:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8492:3:10",
																"statements": []
															},
															"src": "8488:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8621:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8626:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8617:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8617:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8635:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8610:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8610:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8610:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8437:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8442:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8447:6:10",
														"type": ""
													}
												],
												"src": "8393:250:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8785:150:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8795:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8815:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8809:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8809:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8870:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8878:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8866:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8866:17:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8885:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8890:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8831:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8831:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8831:66:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8906:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8917:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8922:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8913:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8913:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8906:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8761:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8766:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8777:3:10",
														"type": ""
													}
												],
												"src": "8648:287:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9114:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9131:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9142:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9124:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9124:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9124:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9165:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9176:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9161:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9161:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9181:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9154:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9154:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9154:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9204:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9215:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9200:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9200:18:10"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9220:31:10",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9193:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9193:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9193:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9261:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9273:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9284:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9269:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9269:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9261:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9091:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9105:4:10",
														"type": ""
													}
												],
												"src": "8940:353:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9419:275:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9436:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9447:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9429:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9429:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9429:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9459:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9479:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9473:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9473:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9463:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9506:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9517:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9502:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9502:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9522:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9495:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9495:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9495:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9577:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9585:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9573:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9573:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9594:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9605:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9590:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9590:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9610:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9538:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9538:79:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9538:79:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9626:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9642:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "9661:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9669:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9657:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9657:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9678:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9674:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9674:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9653:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9653:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9638:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9638:45:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9685:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9634:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9634:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9626:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9388:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9399:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9410:4:10",
														"type": ""
													}
												],
												"src": "9298:396:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Cannot withdraw 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Caller is not RewardsDistributio\")\n        mstore(add(headStart, 96), \"n contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Provided reward too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Cannot withdraw the staking toke\")\n        mstore(add(headStart, 96), \"n\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"This action cannot be performed \")\n        mstore(add(headStart, 96), \"while the contract is paused\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Cannot stake 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 88)\n        mstore(add(headStart, 64), \"Previous rewards period must be \")\n        mstore(add(headStart, 96), \"complete before changing the dur\")\n        mstore(add(headStart, 128), \"ation for the new period\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101d95760003560e01c80637b0a47ee11610104578063c8f33c91116100a2578063df136d6511610071578063df136d65146103c7578063e9fad8ee146103d0578063ebe2b12b146103d8578063f2fde38b146103e157600080fd5b8063c8f33c9114610390578063cc1a378f14610399578063cd3daf9d146103ac578063d1af0c7d146103b457600080fd5b80638b876347116100de5780638b876347146103435780638da5cb5b1461036357806391b4ded914610374578063a694fc3a1461037d57600080fd5b80637b0a47ee1461031f57806380faa57d146103285780638980f11f1461033057600080fd5b8063386a95251161017c5780635c975abb1161014b5780635c975abb146102be57806370a08231146102db578063715018a61461030457806372f702f31461030c57600080fd5b8063386a95251461026f5780633c6b16ab146102785780633d18b9121461028b5780633fc6df6e1461029357600080fd5b806318160ddd116101b857806318160ddd1461023957806319762143146102415780631c1f78eb146102545780632e1a7d4d1461025c57600080fd5b80628cc262146101de5780630700037d1461020457806316c38b3c14610224575b600080fd5b6101f16101ec36600461126f565b6103f4565b6040519081526020015b60405180910390f35b6101f161021236600461126f565b600b6020526000908152604090205481565b610237610232366004611298565b610472565b005b600c546101f1565b61023761024f36600461126f565b6104e9565b6101f1610513565b61023761026a3660046112b5565b610531565b6101f160065481565b6102376102863660046112b5565b610674565b6102376108c2565b6009546102a6906001600160a01b031681565b6040516001600160a01b0390911681526020016101fb565b600f546102cb9060ff1681565b60405190151581526020016101fb565b6101f16102e936600461126f565b6001600160a01b03166000908152600d602052604090205490565b6102376109a8565b6003546102a6906001600160a01b031681565b6101f160055481565b6101f16109ba565b61023761033e3660046112ce565b6109d1565b6101f161035136600461126f565b600a6020526000908152604090205481565b6001546001600160a01b03166102a6565b6101f1600e5481565b61023761038b3660046112b5565b610aad565b6101f160075481565b6102376103a73660046112b5565b610c53565b6101f1610d2d565b6002546102a6906001600160a01b031681565b6101f160085481565b610237610d78565b6101f160045481565b6102376103ef36600461126f565b610d99565b6001600160a01b0381166000908152600b6020908152604080832054600a90925282205461046c919061046690670de0b6b3a764000090610460906104419061043b610d2d565b90610e0f565b6001600160a01b0388166000908152600d602052604090205490610e22565b90610e2e565b90610e3a565b92915050565b61047a610e46565b600f5460ff161515811515146104e657600f805460ff191682151590811790915560ff16156104a85742600e555b600f5460405160ff909116151581527f8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5906020015b60405180910390a15b50565b6104f1610e46565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b600061052c600654600554610e2290919063ffffffff16565b905090565b610539610ea0565b33610542610d2d565b60085561054d6109ba565b6007556001600160a01b0381161561059457610568816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600854600a909152919020555b600082116105dd5760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b60448201526064015b60405180910390fd5b600c546105ea9083610e0f565b600c55336000908152600d60205260409020546106079083610e0f565b336000818152600d6020526040902091909155600354610633916001600160a01b039091169084610ef9565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a2506104e66001600055565b6009546001600160a01b031633146106e15760405162461bcd60e51b815260206004820152602a60248201527f43616c6c6572206973206e6f742052657761726473446973747269627574696f6044820152691b8818dbdb9d1c9858dd60b21b60648201526084016105d4565b60006106eb610d2d565b6008556106f66109ba565b6007556001600160a01b0381161561073d57610711816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600854600a909152919020555b600454421061075c57600654610754908390610e2e565b60055561079f565b60045460009061076c9042610e0f565b9050600061078560055483610e2290919063ffffffff16565b600654909150610799906104608684610e3a565b60055550505b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080c91906112f8565b905061082360065482610e2e90919063ffffffff16565b60055411156108745760405162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f2068696768000000000000000060448201526064016105d4565b4260078190556006546108879190610e3a565b6004556040518381527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a1505050565b6108ca610ea0565b336108d3610d2d565b6008556108de6109ba565b6007556001600160a01b03811615610925576108f9816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600854600a909152919020555b336000908152600b6020526040902054801561099a57336000818152600b6020526040812055600254610964916001600160a01b039091169083610ef9565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25b50506109a66001600055565b565b6109b0610e46565b6109a66000610f61565b600060045442106109cc575060045490565b504290565b6109d9610e46565b6003546001600160a01b0390811690831603610a415760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656044820152603760f91b60648201526084016105d4565b610a67610a566001546001600160a01b031690565b6001600160a01b0384169083610ef9565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28910160405180910390a15050565b610ab5610ea0565b600f5460ff1615610b2e5760405162461bcd60e51b815260206004820152603c60248201527f5468697320616374696f6e2063616e6e6f7420626520706572666f726d65642060448201527f7768696c652074686520636f6e7472616374206973207061757365640000000060648201526084016105d4565b33610b37610d2d565b600855610b426109ba565b6007556001600160a01b03811615610b8957610b5d816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600854600a909152919020555b60008211610bca5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b60448201526064016105d4565b600c54610bd79083610e3a565b600c55336000908152600d6020526040902054610bf49083610e3a565b336000818152600d6020526040902091909155600354610c21916001600160a01b03909116903085610fb3565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610661565b610c5b610e46565b6004544211610cf85760405162461bcd60e51b815260206004820152605860248201527f50726576696f7573207265776172647320706572696f64206d7573742062652060448201527f636f6d706c657465206265666f7265206368616e67696e67207468652064757260648201527f6174696f6e20666f7220746865206e657720706572696f640000000000000000608482015260a4016105d4565b60068190556040518181527ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3906020016104dd565b6000600c54600003610d40575060085490565b61052c610d6f600c54610460670de0b6b3a7640000610d69600554610d6960075461043b6109ba565b90610e22565b60085490610e3a565b336000908152600d6020526040902054610d9190610531565b6109a66108c2565b610da1610e46565b6001600160a01b038116610e065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d4565b6104e681610f61565b6000610e1b8284611327565b9392505050565b6000610e1b828461133a565b6000610e1b8284611351565b6000610e1b8284611373565b6001546001600160a01b031633146109a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d4565b600260005403610ef25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d4565b6002600055565b6040516001600160a01b038316602482015260448101829052610f5c90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ff1565b505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610feb9085906323b872dd60e01b90608401610f25565b50505050565b6000611046826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110c39092919063ffffffff16565b805190915015610f5c57808060200190518101906110649190611386565b610f5c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105d4565b60606110d284846000856110da565b949350505050565b60608247101561113b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105d4565b600080866001600160a01b0316858760405161115791906113c7565b60006040518083038185875af1925050503d8060008114611194576040519150601f19603f3d011682016040523d82523d6000602084013e611199565b606091505b50915091506111aa878383876111b5565b979650505050505050565b6060831561122457825160000361121d576001600160a01b0385163b61121d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105d4565b50816110d2565b6110d283838151156112395781518083602001fd5b8060405162461bcd60e51b81526004016105d491906113e3565b80356001600160a01b038116811461126a57600080fd5b919050565b60006020828403121561128157600080fd5b610e1b82611253565b80151581146104e657600080fd5b6000602082840312156112aa57600080fd5b8135610e1b8161128a565b6000602082840312156112c757600080fd5b5035919050565b600080604083850312156112e157600080fd5b6112ea83611253565b946020939093013593505050565b60006020828403121561130a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561046c5761046c611311565b808202811582820484141761046c5761046c611311565b60008261136e57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561046c5761046c611311565b60006020828403121561139857600080fd5b8151610e1b8161128a565b60005b838110156113be5781810151838201526020016113a6565b50506000910152565b600082516113d98184602087016113a3565b9190910192915050565b60208152600082518060208401526114028160408501602087016113a3565b601f01601f1916919091016040019291505056fea2646970667358221220cc3c4486f15c843dd1b7b7cb4910c5692ca750d9a3f4d871a7bcd9814534737164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xC8F33C91 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDF136D65 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B876347 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x91B4DED9 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x386A9525 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x19762143 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x224 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x2CB SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x237 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x12CE JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0xD78 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xA SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x466 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x460 SWAP1 PUSH2 0x441 SWAP1 PUSH2 0x43B PUSH2 0xD2D JUMP JUMPDEST SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xE22 JUMP JUMPDEST SWAP1 PUSH2 0xE2E JUMP JUMPDEST SWAP1 PUSH2 0xE3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47A PUSH2 0xE46 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x4E6 JUMPI PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xFF AND ISZERO PUSH2 0x4A8 JUMPI TIMESTAMP PUSH1 0xE SSTORE JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO DUP2 MSTORE PUSH32 0x8FB6C181EE25A520CF3DD6565006EF91229FCFE5A989566C2A3B8C115570CEC5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x4F1 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52C PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xE22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x539 PUSH2 0xEA0 JUMP JUMPDEST CALLER PUSH2 0x542 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x54D PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x594 JUMPI PUSH2 0x568 DUP2 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH2 0x5EA SWAP1 DUP4 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0xC SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x607 SWAP1 DUP4 PUSH2 0xE0F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x633 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x4E6 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742052657761726473446973747269627574696F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1B8818DBDB9D1C9858DD PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EB PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x6F6 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x73D JUMPI PUSH2 0x711 DUP2 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x75C JUMPI PUSH1 0x6 SLOAD PUSH2 0x754 SWAP1 DUP4 SWAP1 PUSH2 0xE2E JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x79F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x76C SWAP1 TIMESTAMP PUSH2 0xE0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x785 PUSH1 0x5 SLOAD DUP4 PUSH2 0xE22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x799 SWAP1 PUSH2 0x460 DUP7 DUP5 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x5 SSTORE POP POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x823 PUSH1 0x6 SLOAD DUP3 PUSH2 0xE2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x887 SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x8CA PUSH2 0xEA0 JUMP JUMPDEST CALLER PUSH2 0x8D3 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x8DE PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x925 JUMPI PUSH2 0x8F9 DUP2 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x99A JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x964 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH2 0x9A6 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9B0 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x9A6 PUSH1 0x0 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x9CC JUMPI POP PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST POP TIMESTAMP SWAP1 JUMP JUMPDEST PUSH2 0x9D9 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420776974686472617720746865207374616B696E6720746F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0xA67 PUSH2 0xA56 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xAB5 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320616374696F6E2063616E6E6F7420626520706572666F726D656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7768696C652074686520636F6E74726163742069732070617573656400000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST CALLER PUSH2 0xB37 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xB42 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xB89 JUMPI PUSH2 0xB5D DUP2 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xBCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0xBD7 SWAP1 DUP4 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0xC SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBF4 SWAP1 DUP4 PUSH2 0xE3A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0xC21 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP6 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH1 0x20 ADD PUSH2 0x661 JUMP JUMPDEST PUSH2 0xC5B PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x58 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726576696F7573207265776172647320706572696F64206D75737420626520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F6D706C657465206265666F7265206368616E67696E672074686520647572 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6174696F6E20666F7220746865206E657720706572696F640000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3 SWAP1 PUSH1 0x20 ADD PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x0 SUB PUSH2 0xD40 JUMPI POP PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52C PUSH2 0xD6F PUSH1 0xC SLOAD PUSH2 0x460 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD69 PUSH1 0x5 SLOAD PUSH2 0xD69 PUSH1 0x7 SLOAD PUSH2 0x43B PUSH2 0x9BA JUMP JUMPDEST SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH2 0xE3A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD91 SWAP1 PUSH2 0x531 JUMP JUMPDEST PUSH2 0x9A6 PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0xDA1 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x4E6 DUP2 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B DUP3 DUP5 PUSH2 0x1327 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B DUP3 DUP5 PUSH2 0x133A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B DUP3 DUP5 PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B DUP3 DUP5 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xF5C SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xFF1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xFEB SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0xF25 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1046 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10C3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF5C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1064 SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10D2 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x10DA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x113B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1157 SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1194 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11AA DUP8 DUP4 DUP4 DUP8 PUSH2 0x11B5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1224 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x121D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x121D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST POP DUP2 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x10D2 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1239 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x126A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1B DUP3 PUSH2 0x1253 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE1B DUP2 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EA DUP4 PUSH2 0x1253 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0x1311 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x136E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE1B DUP2 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13BE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13A6 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x13D9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1402 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC EXTCODECOPY PREVRANDAO DUP7 CALL 0x5C DUP5 RETURNDATASIZE 0xD1 0xB7 0xB7 0xCB 0x49 LT 0xC5 PUSH10 0x2CA750D9A3F4D871A7BC 0xD9 DUP2 GASLIMIT CALLVALUE PUSH20 0x7164736F6C634300081200330000000000000000 ",
							"sourceMap": "735:7236:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2528:196;;;;;;:::i;:::-;;:::i;:::-;;;529:25:10;;;517:2;502:18;2528:196:8;;;;;;;;1314:42;;;;;;:::i;:::-;;;;;;;;;;;;;;7312:484;;;;;;:::i;:::-;;:::i;:::-;;1828:91;1900:12;;1828:91;;6933:140;;;;;;:::i;:::-;;:::i;2730:119::-;;;:::i;3294:359::-;;;;;;:::i;:::-;;:::i;1089:39::-;;;;;;4127:1072;;;;;;:::i;:::-;;:::i;3659:308::-;;;:::i;1210:34::-;;;;;-1:-1:-1;;;;;1210:34:8;;;;;;-1:-1:-1;;;;;1283:32:10;;;1265:51;;1253:2;1238:18;1210:34:8;1119:203:10;7165:18:8;;;;;;;;;;;;1492:14:10;;1485:22;1467:41;;1455:2;1440:18;7165::8;1327:187:10;1925:110:8;;;;;;:::i;:::-;-1:-1:-1;;;;;2010:18:8;1984:7;2010:18;;;:9;:18;;;;;;;1925:110;1831:101:0;;;:::i;984:27:8:-;;;;;-1:-1:-1;;;;;984:27:8;;;1054:29;;;;;;2041:153;;;:::i;5311:291::-;;;;;;:::i;:::-;;:::i;1251:57::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1201:85:0;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;;7134:25:8;;;;;;2907:381;;;;;;:::i;:::-;;:::i;1134:29::-;;;;;;5608:353;;;;;;:::i;:::-;;:::i;2200:322::-;;;:::i;951:27::-;;;;;-1:-1:-1;;;;;951:27:8;;;1169:35;;;;;;3973:94;;;:::i;1017:31::-;;;;;;2081:198:0;;;;;;:::i;:::-;;:::i;2528:196:8:-;-1:-1:-1;;;;;2700:16:8;;2582:7;2700:16;;;:7;:16;;;;;;;;;2652:22;:31;;;;;;2608:109;;2700:16;2608:87;;2690:4;;2608:77;;2631:53;;:16;:14;:16::i;:::-;:20;;:53::i;:::-;-1:-1:-1;;;;;2608:18:8;;;;;;:9;:18;;;;;;;:22;:77::i;:::-;:81;;:87::i;:::-;:91;;:109::i;:::-;2601:116;2528:196;-1:-1:-1;;2528:196:8:o;7312:484::-;1094:13:0;:11;:13::i;:::-;7463:6:8::1;::::0;::::1;;7452:17;;::::0;::::1;;7448:54:::0;7485:7:::1;7448:54;7545:6;:16:::0;;-1:-1:-1;;7545:16:8::1;::::0;::::1;;::::0;;::::1;::::0;;;::::1;7627:6:::0;7623:68:::1;;;7665:15;7649:13;:31:::0;7623:68:::1;7782:6;::::0;7769:20:::1;::::0;7782:6:::1;::::0;;::::1;1492:14:10::0;1485:22;1467:41;;7769:20:8::1;::::0;1455:2:10;1440:18;7769:20:8::1;;;;;;;;1117:1:0;7312:484:8::0;:::o;6933:140::-;1094:13:0;:11;:13::i;:::-;7024:19:8::1;:42:::0;;-1:-1:-1;;;;;;7024:42:8::1;-1:-1:-1::0;;;;;7024:42:8;;;::::1;::::0;;;::::1;::::0;;6933:140::o;2730:119::-;2785:7;2811:31;2826:15;;2811:10;;:14;;:31;;;;:::i;:::-;2804:38;;2730:119;:::o;3294:359::-;2261:21:1;:19;:21::i;:::-;3361:10:8::1;6082:16;:14;:16::i;:::-;6059:20;:39:::0;6125:26:::1;:24;:26::i;:::-;6108:14;:43:::0;-1:-1:-1;;;;;6165:21:8;::::1;::::0;6161:154:::1;;6221:15;6228:7;6221:6;:15::i;:::-;-1:-1:-1::0;;;;;6202:16:8;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;6284:20:::1;::::0;6250:22:::1;:31:::0;;;;;;:54;6161:154:::1;3400:1:::2;3391:6;:10;3383:40;;;::::0;-1:-1:-1;;;3383:40:8;;1980:2:10;3383:40:8::2;::::0;::::2;1962:21:10::0;2019:2;1999:18;;;1992:30;-1:-1:-1;;;2038:18:10;;;2031:47;2095:18;;3383:40:8::2;;;;;;;;;3448:12;::::0;:24:::2;::::0;3465:6;3448:16:::2;:24::i;:::-;3433:12;:39:::0;3516:10:::2;3506:21;::::0;;;:9:::2;:21;::::0;;;;;:33:::2;::::0;3532:6;3506:25:::2;:33::i;:::-;3492:10;3482:21;::::0;;;:9:::2;:21;::::0;;;;:57;;;;3556:12:::2;::::0;3549:53:::2;::::0;-1:-1:-1;;;;;3556:12:8;;::::2;::::0;3595:6;3549:33:::2;:53::i;:::-;3617:29;::::0;529:25:10;;;3627:10:8::2;::::0;3617:29:::2;::::0;517:2:10;502:18;3617:29:8::2;;;;;;;;2292:1:1::1;2303:20:::0;1716:1;2809:7;:22;2629:209;4127:1072:8;6843:19;;-1:-1:-1;;;;;6843:19:8;6829:10;:33;6821:88;;;;-1:-1:-1;;;6821:88:8;;2326:2:10;6821:88:8;;;2308:21:10;2365:2;2345:18;;;2338:30;2404:34;2384:18;;;2377:62;-1:-1:-1;;;2455:18:10;;;2448:40;2505:19;;6821:88:8;2124:406:10;6821:88:8;4225:1:::1;6082:16;:14;:16::i;:::-;6059:20;:39:::0;6125:26:::1;:24;:26::i;:::-;6108:14;:43:::0;-1:-1:-1;;;;;6165:21:8;::::1;::::0;6161:154:::1;;6221:15;6228:7;6221:6;:15::i;:::-;-1:-1:-1::0;;;;;6202:16:8;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;6284:20:::1;::::0;6250:22:::1;:31:::0;;;;;;:54;6161:154:::1;4262:12:::2;;4243:15;:31;4239:312;;4314:15;::::0;4303:27:::2;::::0;:6;;:10:::2;:27::i;:::-;4290:10;:40:::0;4239:312:::2;;;4381:12;::::0;4361:17:::2;::::0;4381:33:::2;::::0;4398:15:::2;4381:16;:33::i;:::-;4361:53;;4428:16;4447:25;4461:10;;4447:9;:13;;:25;;;;:::i;:::-;4524:15;::::0;4428:44;;-1:-1:-1;4499:41:8::2;::::0;:20:::2;:6:::0;4428:44;4499:10:::2;:20::i;:41::-;4486:10;:54:::0;-1:-1:-1;;4239:312:8::2;4927:12;::::0;4920:45:::2;::::0;-1:-1:-1;;;4920:45:8;;4959:4:::2;4920:45;::::0;::::2;1265:51:10::0;4905:12:8::2;::::0;-1:-1:-1;;;;;4927:12:8::2;::::0;4920:30:::2;::::0;1238:18:10;;4920:45:8::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4905:60;;4997:28;5009:15;;4997:7;:11;;:28;;;;:::i;:::-;4983:10;;:42;;4975:79;;;::::0;-1:-1:-1;;;4975:79:8;;2926:2:10;4975:79:8::2;::::0;::::2;2908:21:10::0;2965:2;2945:18;;;2938:30;3004:26;2984:18;;;2977:54;3048:18;;4975:79:8::2;2724:348:10::0;4975:79:8::2;5082:15;5065:14;:32:::0;;;5142:15:::2;::::0;5122:36:::2;::::0;5082:15;5122:19:::2;:36::i;:::-;5107:12;:51:::0;5173:19:::2;::::0;529:25:10;;;5173:19:8::2;::::0;517:2:10;502:18;5173:19:8::2;;;;;;;4229:970;6919:1:::1;4127:1072:::0;:::o;3659:308::-;2261:21:1;:19;:21::i;:::-;3713:10:8::1;6082:16;:14;:16::i;:::-;6059:20;:39:::0;6125:26:::1;:24;:26::i;:::-;6108:14;:43:::0;-1:-1:-1;;;;;6165:21:8;::::1;::::0;6161:154:::1;;6221:15;6228:7;6221:6;:15::i;:::-;-1:-1:-1::0;;;;;6202:16:8;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;6284:20:::1;::::0;6250:22:::1;:31:::0;;;;;;:54;6161:154:::1;3760:10:::2;3735:14;3752:19:::0;;;:7:::2;:19;::::0;;;;;3785:10;;3781:180:::2;;3819:10;3833:1;3811:19:::0;;;:7:::2;:19;::::0;;;;:23;3855:12:::2;::::0;3848:53:::2;::::0;-1:-1:-1;;;;;3855:12:8;;::::2;::::0;3894:6;3848:33:::2;:53::i;:::-;3920:30;::::0;529:25:10;;;3931:10:8::2;::::0;3920:30:::2;::::0;517:2:10;502:18;3920:30:8::2;;;;;;;3781:180;3725:242;2292:1:1::1;2303:20:::0;1716:1;2809:7;:22;2629:209;2303:20;3659:308:8:o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;2041:153:8:-:0;2098:7;2142:12;;2124:15;:30;:63;;-1:-1:-1;2175:12:8;;;2730:119::o;2124:63::-;-1:-1:-1;2157:15:8;;2041:153::o;5311:291::-;1094:13:0;:11;:13::i;:::-;5429:12:8::1;::::0;-1:-1:-1;;;;;5429:12:8;;::::1;5413:28:::0;;::::1;::::0;5405:74:::1;;;::::0;-1:-1:-1;;;5405:74:8;;3279:2:10;5405:74:8::1;::::0;::::1;3261:21:10::0;3318:2;3298:18;;;3291:30;3357:34;3337:18;;;3330:62;-1:-1:-1;;;3408:18:10;;;3401:31;3449:19;;5405:74:8::1;3077:397:10::0;5405:74:8::1;5489:55;5523:7;1273:6:0::0;;-1:-1:-1;;;;;1273:6:0;;1201:85;5523:7:8::1;-1:-1:-1::0;;;;;5489:33:8;::::1;::::0;5532:11;5489:33:::1;:55::i;:::-;5559:36;::::0;;-1:-1:-1;;;;;3671:32:10;;3653:51;;3735:2;3720:18;;3713:34;;;5559:36:8::1;::::0;3626:18:10;5559:36:8::1;;;;;;;5311:291:::0;;:::o;2907:381::-;2261:21:1;:19;:21::i;:::-;7880:6:8::1;::::0;::::1;;7879:7;7871:80;;;::::0;-1:-1:-1;;;7871:80:8;;3960:2:10;7871:80:8::1;::::0;::::1;3942:21:10::0;3999:2;3979:18;;;3972:30;4038:34;4018:18;;;4011:62;4109:30;4089:18;;;4082:58;4157:19;;7871:80:8::1;3758:424:10::0;7871:80:8::1;2983:10:::2;6082:16;:14;:16::i;:::-;6059:20;:39:::0;6125:26:::2;:24;:26::i;:::-;6108:14;:43:::0;-1:-1:-1;;;;;6165:21:8;::::2;::::0;6161:154:::2;;6221:15;6228:7;6221:6;:15::i;:::-;-1:-1:-1::0;;;;;6202:16:8;::::2;;::::0;;;:7:::2;:16;::::0;;;;;;;:34;;;;6284:20:::2;::::0;6250:22:::2;:31:::0;;;;;;:54;6161:154:::2;3022:1:::3;3013:6;:10;3005:37;;;::::0;-1:-1:-1;;;3005:37:8;;4389:2:10;3005:37:8::3;::::0;::::3;4371:21:10::0;4428:2;4408:18;;;4401:30;-1:-1:-1;;;4447:18:10;;;4440:44;4501:18;;3005:37:8::3;4187:338:10::0;3005:37:8::3;3067:12;::::0;:24:::3;::::0;3084:6;3067:16:::3;:24::i;:::-;3052:12;:39:::0;3135:10:::3;3125:21;::::0;;;:9:::3;:21;::::0;;;;;:33:::3;::::0;3151:6;3125:25:::3;:33::i;:::-;3111:10;3101:21;::::0;;;:9:::3;:21;::::0;;;;:57;;;;3175:12:::3;::::0;3168:72:::3;::::0;-1:-1:-1;;;;;3175:12:8;;::::3;::::0;3226:4:::3;3233:6:::0;3168:37:::3;:72::i;:::-;3255:26;::::0;529:25:10;;;3262:10:8::3;::::0;3255:26:::3;::::0;517:2:10;502:18;3255:26:8::3;383:177:10::0;5608:353:8;1094:13:0;:11;:13::i;:::-;5730:12:8::1;;5712:15;:30;5691:165;;;::::0;-1:-1:-1;;;5691:165:8;;4732:2:10;5691:165:8::1;::::0;::::1;4714:21:10::0;4771:2;4751:18;;;4744:30;4810:34;4790:18;;;4783:62;4881:34;4861:18;;;4854:62;4953:26;4932:19;;;4925:55;4997:19;;5691:165:8::1;4530:492:10::0;5691:165:8::1;5866:15;:34:::0;;;5915:39:::1;::::0;529:25:10;;;5915:39:8::1;::::0;517:2:10;502:18;5915:39:8::1;383:177:10::0;2200:322:8;2247:7;2270:12;;2286:1;2270:17;2266:75;;-1:-1:-1;2310:20:8;;;2200:322::o;2266:75::-;2369:146;2411:90;2488:12;;2411:72;2478:4;2411:62;2462:10;;2411:46;2442:14;;2411:26;:24;:26::i;:46::-;:50;;:62::i;:90::-;2369:20;;;:24;:146::i;3973:94::-;4027:10;4017:21;;;;:9;:21;;;;;;4008:31;;:8;:31::i;:::-;4049:11;:9;:11::i;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;5229:2:10;2161:73:0::1;::::0;::::1;5211:21:10::0;5268:2;5248:18;;;5241:30;5307:34;5287:18;;;5280:62;-1:-1:-1;;;5358:18:10;;;5351:36;5404:19;;2161:73:0::1;5027:402:10::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;3122:96:7:-:0;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;3122:96;-1:-1:-1;;;3122:96:7:o;3465:::-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6426:2:10;1414:68:0;;;6408:21:10;;;6445:18;;;6438:30;6504:34;6484:18;;;6477:62;6556:18;;1414:68:0;6224:356:10;2336:287:1;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;6787:2:10;2460:63:1;;;6769:21:10;6826:2;6806:18;;;6799:30;6865:33;6845:18;;;6838:61;6916:18;;2460:63:1;6585:355:10;2460:63:1;1759:1;2598:7;:18;2336:287::o;763:205:4:-;902:58;;-1:-1:-1;;;;;3671:32:10;;902:58:4;;;3653:51:10;3720:18;;;3713:34;;;875:86:4;;895:5;;-1:-1:-1;;;925:23:4;3626:18:10;;902:58:4;;;;-1:-1:-1;;902:58:4;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:4;-1:-1:-1;;;;;;902:58:4;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;974:241:4:-;1139:68;;-1:-1:-1;;;;;7203:15:10;;;1139:68:4;;;7185:34:10;7255:15;;7235:18;;;7228:43;7287:18;;;7280:34;;;1112:96:4;;1132:5;;-1:-1:-1;;;1162:27:4;7120:18:10;;1139:68:4;6945:375:10;1112:96:4;974:241;;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:4;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:4;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:4;;7777:2:10;4351:85:4;;;7759:21:10;7816:2;7796:18;;;7789:30;7855:34;7835:18;;;7828:62;-1:-1:-1;;;7906:18:10;;;7899:40;7956:19;;4351:85:4;7575:406:10;3873:223:5;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:5:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:5;;8188:2:10;5149:81:5;;;8170:21:10;8227:2;8207:18;;;8200:30;8266:34;8246:18;;;8239:62;-1:-1:-1;;;8317:18:10;;;8310:36;8363:19;;5149:81:5;7986:402:10;5149:81:5;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:5;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:5:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:5;;;7908:60;;;;-1:-1:-1;;;7908:60:5;;9142:2:10;7908:60:5;;;9124:21:10;9181:2;9161:18;;;9154:30;9220:31;9200:18;;;9193:59;9269:18;;7908:60:5;8940:353:10;7908:60:5;-1:-1:-1;8003:10:5;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:5;;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:118::-;651:5;644:13;637:21;630:5;627:32;617:60;;673:1;670;663:12;688:241;744:6;797:2;785:9;776:7;772:23;768:32;765:52;;;813:1;810;803:12;765:52;852:9;839:23;871:28;893:5;871:28;:::i;934:180::-;993:6;1046:2;1034:9;1025:7;1021:23;1017:32;1014:52;;;1062:1;1059;1052:12;1014:52;-1:-1:-1;1085:23:10;;934:180;-1:-1:-1;934:180:10:o;1519:254::-;1587:6;1595;1648:2;1636:9;1627:7;1623:23;1619:32;1616:52;;;1664:1;1661;1654:12;1616:52;1687:29;1706:9;1687:29;:::i;:::-;1677:39;1763:2;1748:18;;;;1735:32;;-1:-1:-1;;;1519:254:10:o;2535:184::-;2605:6;2658:2;2646:9;2637:7;2633:23;2629:32;2626:52;;;2674:1;2671;2664:12;2626:52;-1:-1:-1;2697:16:10;;2535:184;-1:-1:-1;2535:184:10:o;5434:127::-;5495:10;5490:3;5486:20;5483:1;5476:31;5526:4;5523:1;5516:15;5550:4;5547:1;5540:15;5566:128;5633:9;;;5654:11;;;5651:37;;;5668:18;;:::i;5699:168::-;5772:9;;;5803;;5820:15;;;5814:22;;5800:37;5790:71;;5841:18;;:::i;5872:217::-;5912:1;5938;5928:132;;5982:10;5977:3;5973:20;5970:1;5963:31;6017:4;6014:1;6007:15;6045:4;6042:1;6035:15;5928:132;-1:-1:-1;6074:9:10;;5872:217::o;6094:125::-;6159:9;;;6180:10;;;6177:36;;;6193:18;;:::i;7325:245::-;7392:6;7445:2;7433:9;7424:7;7420:23;7416:32;7413:52;;;7461:1;7458;7451:12;7413:52;7493:9;7487:16;7512:28;7534:5;7512:28;:::i;8393:250::-;8478:1;8488:113;8502:6;8499:1;8496:13;8488:113;;;8578:11;;;8572:18;8559:11;;;8552:39;8524:2;8517:10;8488:113;;;-1:-1:-1;;8635:1:10;8617:16;;8610:27;8393:250::o;8648:287::-;8777:3;8815:6;8809:13;8831:66;8890:6;8885:3;8878:4;8870:6;8866:17;8831:66;:::i;:::-;8913:16;;;;;8648:287;-1:-1:-1;;8648:287:10:o;9298:396::-;9447:2;9436:9;9429:21;9410:4;9479:6;9473:13;9522:6;9517:2;9506:9;9502:18;9495:34;9538:79;9610:6;9605:2;9594:9;9590:18;9585:2;9577:6;9573:15;9538:79;:::i;:::-;9678:2;9657:15;-1:-1:-1;;9653:29:10;9638:45;;;;9685:2;9634:54;;9298:396;-1:-1:-1;;9298:396:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1039200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "2593",
								"earned(address)": "infinite",
								"exit()": "infinite",
								"getReward()": "infinite",
								"getRewardForDuration()": "infinite",
								"lastPauseTime()": "2373",
								"lastTimeRewardApplicable()": "4490",
								"lastUpdateTime()": "2329",
								"notifyRewardAmount(uint256)": "infinite",
								"owner()": "2398",
								"paused()": "2355",
								"periodFinish()": "2372",
								"recoverERC20(address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardPerToken()": "infinite",
								"rewardPerTokenStored()": "2328",
								"rewardRate()": "2330",
								"rewards(address)": "2577",
								"rewardsDistribution()": "2449",
								"rewardsDuration()": "2330",
								"rewardsToken()": "2448",
								"setPaused(bool)": "infinite",
								"setRewardsDistribution(address)": "26803",
								"setRewardsDuration(uint256)": "27755",
								"stake(uint256)": "infinite",
								"stakingToken()": "2448",
								"totalSupply()": "2327",
								"transferOwnership(address)": "28446",
								"userRewardPerTokenPaid(address)": "2553",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 735,
									"end": 7971,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 735,
									"end": 7971,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 735,
									"end": 7971,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1047,
									"end": 1048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1017,
									"end": 1048,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1017,
									"end": 1048,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1083,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1054,
									"end": 1083,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1054,
									"end": 1083,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1128,
									"name": "PUSH",
									"source": 8,
									"value": "93A80"
								},
								{
									"begin": 1089,
									"end": 1128,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1089,
									"end": 1128,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1530,
									"end": 1783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1530,
									"end": 1783,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1670,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1658,
									"end": 1686,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1686,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1658,
									"end": 1686,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1686,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1686,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1658,
									"end": 1686,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1686,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1686,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1686,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1686,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1686,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1686,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1708,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1724,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1753,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1776,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 735,
									"end": 7971,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 735,
									"end": 7971,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 284,
									"end": 290,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 298,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 300,
									"end": 306,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 355,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 341,
									"end": 350,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 332,
									"end": 339,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 328,
									"end": 351,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 324,
									"end": 356,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 321,
									"end": 373,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 321,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 369,
									"end": 370,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 367,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 359,
									"end": 371,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 321,
									"end": 373,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 422,
									"end": 431,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 392,
									"end": 432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 392,
									"end": 432,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 392,
									"end": 432,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 382,
									"end": 432,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 382,
									"end": 432,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 451,
									"end": 500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 451,
									"end": 500,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 451,
									"end": 500,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 441,
									"end": 500,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 441,
									"end": 500,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 519,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 564,
									"end": 566,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 562,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 549,
									"end": 567,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 519,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 519,
									"end": 568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 519,
									"end": 568,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 519,
									"end": 568,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 509,
									"end": 568,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 509,
									"end": 568,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 574,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 196,
									"end": 574,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 574,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 196,
									"end": 574,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 574,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 196,
									"end": 574,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 196,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 735,
									"end": 7971,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 735,
									"end": 7971,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 735,
									"end": 7971,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 735,
									"end": 7971,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 7971,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 735,
									"end": 7971,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 7971,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc3c4486f15c843dd1b7b7cb4910c5692ca750d9a3f4d871a7bcd9814534737164736f6c63430008120033",
									".code": [
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "7B0A47EE"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "C8F33C91"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "DF136D65"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "DF136D65"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "E9FAD8EE"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "EBE2B12B"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "C8F33C91"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "CC1A378F"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "CD3DAF9D"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "D1AF0C7D"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "8B876347"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "8B876347"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "91B4DED9"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "A694FC3A"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "7B0A47EE"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "80FAA57D"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "8980F11F"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "386A9525"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "72F702F3"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "386A9525"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "3C6B16AB"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "3D18B912"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "3FC6DF6E"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "19762143"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "1C1F78EB"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "2E1A7D4D"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "8CC262"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "700037D"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "16C38B3C"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 7971,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2528,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2528,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1314,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1356,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 7312,
											"end": 7796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7312,
											"end": 7796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1828,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1919,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 7073,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6933,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 6933,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 6933,
											"end": 7073,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 7073,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6933,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 6933,
											"end": 7073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 7073,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 6933,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 6933,
											"end": 7073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2849,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2730,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2730,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3653,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3294,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3294,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3294,
											"end": 3653,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3653,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3294,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 3294,
											"end": 3653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3653,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3294,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3294,
											"end": 3653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1128,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1089,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1128,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1089,
											"end": 1128,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1128,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 4127,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4127,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3659,
											"end": 3967,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3659,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3659,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3659,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 3659,
											"end": 3967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1253,
											"end": 1255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1119,
											"end": 1322,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1506,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1506,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1507,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1508,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1508,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1327,
											"end": 1514,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1925,
											"end": 2035,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1925,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1925,
											"end": 2035,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2035,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1925,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2035,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1925,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1984,
											"end": 1991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2010,
											"end": 2019,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2035,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1011,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 984,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 984,
											"end": 1011,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 984,
											"end": 1011,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 984,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 984,
											"end": 1011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 984,
											"end": 1011,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 984,
											"end": 1011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 984,
											"end": 1011,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2194,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2041,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2041,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5311,
											"end": 5602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5311,
											"end": 5602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1251,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1251,
											"end": 1308,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2907,
											"end": 3288,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2907,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2907,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2907,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2907,
											"end": 3288,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2907,
											"end": 3288,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2907,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2907,
											"end": 3288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2907,
											"end": 3288,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2907,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2907,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2907,
											"end": 3288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1134,
											"end": 1163,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1134,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1134,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1163,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1134,
											"end": 1163,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1134,
											"end": 1163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1134,
											"end": 1163,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5608,
											"end": 5961,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5608,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5608,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 5608,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 5608,
											"end": 5961,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5608,
											"end": 5961,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5608,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 5608,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5608,
											"end": 5961,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 5608,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5608,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 5608,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2522,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2200,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2200,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 951,
											"end": 978,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 951,
											"end": 978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 951,
											"end": 978,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 951,
											"end": 978,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 951,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 951,
											"end": 978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 951,
											"end": 978,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 951,
											"end": 978,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 951,
											"end": 978,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1204,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1169,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1169,
											"end": 1204,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1204,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1204,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 4067,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3973,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3973,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3973,
											"end": 4067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1017,
											"end": 1048,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1017,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1017,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1048,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1017,
											"end": 1048,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1017,
											"end": 1048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1017,
											"end": 1048,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2707,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 2652,
											"end": 2683,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2683,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2683,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2683,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2683,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2683,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2608,
											"end": 2717,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2608,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2694,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2690,
											"end": 2694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2608,
											"end": 2685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2631,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2631,
											"end": 2684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2631,
											"end": 2651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2631,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2631,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2631,
											"end": 2684,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2631,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2608,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2685,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2608,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2608,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2695,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2608,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2699,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2608,
											"end": 2717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2717,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2608,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2717,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2724,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2528,
											"end": 2724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7463,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 7463,
											"end": 7469,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 7463,
											"end": 7469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7452,
											"end": 7469,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7452,
											"end": 7469,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7452,
											"end": 7469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7452,
											"end": 7469,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7452,
											"end": 7469,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7448,
											"end": 7502,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7485,
											"end": 7492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 7448,
											"end": 7502,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 7545,
											"end": 7561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7561,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7545,
											"end": 7561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7561,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7561,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7561,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 7627,
											"end": 7633,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7623,
											"end": 7691,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7623,
											"end": 7691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 7623,
											"end": 7691,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7665,
											"end": 7680,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7649,
											"end": 7662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 7649,
											"end": 7680,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7623,
											"end": 7691,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 7623,
											"end": 7691,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7782,
											"end": 7788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 7782,
											"end": 7788,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7769,
											"end": 7789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7769,
											"end": 7789,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7782,
											"end": 7788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 7782,
											"end": 7788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7782,
											"end": 7788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7782,
											"end": 7788,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1506,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1507,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1508,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1508,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8FB6C181EE25A520CF3DD6565006EF91229FCFE5A989566C2A3B8C115570CEC5"
										},
										{
											"begin": 7769,
											"end": 7789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 7769,
											"end": 7789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7769,
											"end": 7789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7769,
											"end": 7789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7769,
											"end": 7789,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7769,
											"end": 7789,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7769,
											"end": 7789,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7769,
											"end": 7789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7769,
											"end": 7789,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1117,
											"end": 1118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 7073,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 6933,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7024,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 7024,
											"end": 7066,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7066,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7024,
											"end": 7066,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7024,
											"end": 7066,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7066,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7066,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7066,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7066,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7066,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7066,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 7073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2849,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2730,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2785,
											"end": 2792,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2826,
											"end": 2841,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2826,
											"end": 2841,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2821,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2811,
											"end": 2821,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2811,
											"end": 2825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 2842,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 2842,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3653,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3294,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3371,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 6082,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6082,
											"end": 6098,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 6082,
											"end": 6098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6059,
											"end": 6079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6059,
											"end": 6098,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 6125,
											"end": 6149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 6125,
											"end": 6151,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 6125,
											"end": 6151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6108,
											"end": 6122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6108,
											"end": 6151,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 6228,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 6221,
											"end": 6236,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 6221,
											"end": 6236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 6202,
											"end": 6218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6284,
											"end": 6304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6284,
											"end": 6304,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6304,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3397,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3391,
											"end": 3401,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3383,
											"end": 3423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 1982,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3383,
											"end": 3423,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2021,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1999,
											"end": 2017,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1999,
											"end": 2017,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2017,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43616E6E6F74207769746864726177203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2038,
											"end": 2056,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2038,
											"end": 2056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2078,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2113,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2095,
											"end": 2113,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3383,
											"end": 3423,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3448,
											"end": 3460,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3472,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 3448,
											"end": 3472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3464,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3448,
											"end": 3472,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3472,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 3448,
											"end": 3472,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3433,
											"end": 3445,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3433,
											"end": 3472,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3526,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3506,
											"end": 3527,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3539,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3538,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3531,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3506,
											"end": 3539,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3539,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 3506,
											"end": 3539,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3502,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3503,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3503,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3503,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3503,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3482,
											"end": 3503,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3482,
											"end": 3503,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3503,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3482,
											"end": 3503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3503,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3539,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3539,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3539,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3568,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3556,
											"end": 3568,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3602,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3549,
											"end": 3602,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3556,
											"end": 3568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3568,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3568,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3595,
											"end": 3601,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3582,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3549,
											"end": 3602,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3602,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3549,
											"end": 3602,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3646,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3646,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3637,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3646,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 3617,
											"end": 3646,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3646,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3617,
											"end": 3646,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3646,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3646,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3646,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3646,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3646,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3646,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3646,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6829,
											"end": 6839,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6829,
											"end": 6862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6821,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 6821,
											"end": 6909,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6821,
											"end": 6909,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6821,
											"end": 6909,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6821,
											"end": 6909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6821,
											"end": 6909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 2328,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6821,
											"end": 6909,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6821,
											"end": 6909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6821,
											"end": 6909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2365,
											"end": 2367,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 2345,
											"end": 2363,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2345,
											"end": 2363,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2363,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2338,
											"end": 2368,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2438,
											"name": "PUSH",
											"source": 10,
											"value": "43616C6C6572206973206E6F742052657761726473446973747269627574696F"
										},
										{
											"begin": 2384,
											"end": 2402,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2384,
											"end": 2402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2402,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2377,
											"end": 2439,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B8818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2505,
											"end": 2524,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2505,
											"end": 2524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6821,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2124,
											"end": 2530,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6821,
											"end": 6909,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 6821,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4225,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 6082,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6082,
											"end": 6098,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 6082,
											"end": 6098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6059,
											"end": 6079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6059,
											"end": 6098,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6125,
											"end": 6149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 6125,
											"end": 6151,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6125,
											"end": 6151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6108,
											"end": 6122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6108,
											"end": 6151,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6228,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 6221,
											"end": 6236,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6221,
											"end": 6236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 6202,
											"end": 6218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6284,
											"end": 6304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6284,
											"end": 6304,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6304,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4274,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4262,
											"end": 4274,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4243,
											"end": 4258,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4243,
											"end": 4274,
											"modifierDepth": 2,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4239,
											"end": 4551,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4239,
											"end": 4551,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4329,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4314,
											"end": 4329,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4303,
											"end": 4330,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 4303,
											"end": 4330,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4303,
											"end": 4313,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 4303,
											"end": 4330,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4303,
											"end": 4330,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 4303,
											"end": 4330,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4290,
											"end": 4300,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4290,
											"end": 4330,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4239,
											"end": 4551,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 4239,
											"end": 4551,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4239,
											"end": 4551,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4239,
											"end": 4551,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4381,
											"end": 4393,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4381,
											"end": 4393,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4361,
											"end": 4378,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4361,
											"end": 4378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4381,
											"end": 4414,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4381,
											"end": 4414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4413,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4381,
											"end": 4397,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 4381,
											"end": 4414,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4381,
											"end": 4414,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4381,
											"end": 4414,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4361,
											"end": 4414,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4361,
											"end": 4414,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4428,
											"end": 4444,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4472,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 4461,
											"end": 4471,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4461,
											"end": 4471,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4456,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4460,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 4447,
											"end": 4460,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4472,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4472,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4472,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4447,
											"end": 4472,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4472,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4472,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 4447,
											"end": 4472,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4539,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4524,
											"end": 4539,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4428,
											"end": 4472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4428,
											"end": 4472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4499,
											"end": 4540,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4499,
											"end": 4540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4499,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4428,
											"end": 4472,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4499,
											"end": 4509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4499,
											"end": 4519,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4499,
											"end": 4540,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4499,
											"end": 4540,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4486,
											"end": 4540,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4239,
											"end": 4551,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 4239,
											"end": 4551,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4939,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4927,
											"end": 4939,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 4965,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4920,
											"end": 4965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4959,
											"end": 4963,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4920,
											"end": 4965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1265,
											"end": 1316,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4917,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4927,
											"end": 4939,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4950,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 4920,
											"end": 4950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 4920,
											"end": 4965,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 4920,
											"end": 4965,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4905,
											"end": 4965,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4905,
											"end": 4965,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5025,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 5009,
											"end": 5024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5009,
											"end": 5024,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5004,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5008,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 4997,
											"end": 5008,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5025,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5025,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5025,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4997,
											"end": 5025,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5025,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5025,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 4997,
											"end": 5025,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 4993,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4983,
											"end": 4993,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 5025,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 5025,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4975,
											"end": 5054,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 4975,
											"end": 5054,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4975,
											"end": 5054,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4975,
											"end": 5054,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4975,
											"end": 5054,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4975,
											"end": 5054,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2928,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4975,
											"end": 5054,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4975,
											"end": 5054,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4975,
											"end": 5054,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 2929,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2945,
											"end": 2963,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2945,
											"end": 2963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2945,
											"end": 2963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 2968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3030,
											"name": "PUSH",
											"source": 10,
											"value": "50726F76696465642072657761726420746F6F20686967680000000000000000"
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5054,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2724,
											"end": 3072,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5054,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 4975,
											"end": 5054,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5097,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 5065,
											"end": 5079,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5065,
											"end": 5097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5065,
											"end": 5097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5065,
											"end": 5097,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5157,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5158,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 5122,
											"end": 5158,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5141,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 5122,
											"end": 5158,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5158,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 5122,
											"end": 5158,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5119,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5107,
											"end": 5158,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5192,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5173,
											"end": 5192,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5192,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 5173,
											"end": 5192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5192,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5173,
											"end": 5192,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5192,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5192,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5192,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5192,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5192,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 5199,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6919,
											"end": 6920,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3659,
											"end": 3967,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 3659,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3723,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 6082,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6082,
											"end": 6098,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 6082,
											"end": 6098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6059,
											"end": 6079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6059,
											"end": 6098,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 6125,
											"end": 6149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 6125,
											"end": 6151,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 6125,
											"end": 6151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6108,
											"end": 6122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6108,
											"end": 6151,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 6228,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 6221,
											"end": 6236,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 6221,
											"end": 6236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 6202,
											"end": 6218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6284,
											"end": 6304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6284,
											"end": 6304,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6304,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3760,
											"end": 3770,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3735,
											"end": 3749,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3771,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3759,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3752,
											"end": 3771,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3752,
											"end": 3771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3771,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3752,
											"end": 3771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3771,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3771,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3785,
											"end": 3795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3785,
											"end": 3795,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3781,
											"end": 3961,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3781,
											"end": 3961,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3829,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3834,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3834,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3855,
											"end": 3867,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3855,
											"end": 3867,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 3901,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3848,
											"end": 3901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3855,
											"end": 3867,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3855,
											"end": 3867,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3855,
											"end": 3867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 3881,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3848,
											"end": 3901,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 3901,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3848,
											"end": 3901,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 3950,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3920,
											"end": 3950,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3941,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 3941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 3950,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 3920,
											"end": 3950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3950,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3920,
											"end": 3950,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 3950,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 3950,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 3950,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 3950,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 3950,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3781,
											"end": 3961,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3781,
											"end": 3961,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3725,
											"end": 3967,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 3967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2194,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2041,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2154,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2154,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2139,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2154,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2124,
											"end": 2187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2175,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2175,
											"end": 2187,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2175,
											"end": 2187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2187,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2124,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5429,
											"end": 5441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 5429,
											"end": 5441,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5429,
											"end": 5441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5429,
											"end": 5441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5429,
											"end": 5441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5441,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5441,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 5405,
											"end": 5479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5405,
											"end": 5479,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5405,
											"end": 5479,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5479,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3281,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5405,
											"end": 5479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5405,
											"end": 5479,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3282,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3320,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 3298,
											"end": 3316,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3298,
											"end": 3316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3357,
											"end": 3391,
											"name": "PUSH",
											"source": 10,
											"value": "43616E6E6F7420776974686472617720746865207374616B696E6720746F6B65"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3432,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3449,
											"end": 3468,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 3449,
											"end": 3468,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5405,
											"end": 5479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3077,
											"end": 3474,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5405,
											"end": 5479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 5405,
											"end": 5479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 5523,
											"end": 5530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5530,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 5523,
											"end": 5530,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5489,
											"end": 5522,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5543,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 5489,
											"end": 5544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 5489,
											"end": 5544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 5595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5559,
											"end": 5595,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 5595,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3671,
											"end": 3703,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3671,
											"end": 3703,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3704,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3737,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3747,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3747,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28"
										},
										{
											"begin": 5559,
											"end": 5595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5559,
											"end": 5595,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 5595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 5595,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 5595,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 5595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 5595,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2907,
											"end": 3288,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2907,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 7886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7880,
											"end": 7886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 7880,
											"end": 7886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7879,
											"end": 7886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 7871,
											"end": 7951,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7871,
											"end": 7951,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7871,
											"end": 7951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7951,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7871,
											"end": 7951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7871,
											"end": 7951,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7951,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3963,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3999,
											"end": 4001,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 4002,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4038,
											"end": 4072,
											"name": "PUSH",
											"source": 10,
											"value": "5468697320616374696F6E2063616E6E6F7420626520706572666F726D656420"
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4073,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4139,
											"name": "PUSH",
											"source": 10,
											"value": "7768696C652074686520636F6E74726163742069732070617573656400000000"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4082,
											"end": 4140,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4157,
											"end": 4176,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4157,
											"end": 4176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7871,
											"end": 7951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3758,
											"end": 4182,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7871,
											"end": 7951,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 7871,
											"end": 7951,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 2993,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6098,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 6082,
											"end": 6096,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6082,
											"end": 6098,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6098,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 6082,
											"end": 6098,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6059,
											"end": 6079,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6059,
											"end": 6098,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6151,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 6125,
											"end": 6149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 6125,
											"end": 6151,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6125,
											"end": 6151,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 6125,
											"end": 6151,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6108,
											"end": 6122,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6108,
											"end": 6151,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6186,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6236,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 6228,
											"end": 6235,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6227,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 6221,
											"end": 6236,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6236,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 6221,
											"end": 6236,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 6202,
											"end": 6218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6284,
											"end": 6304,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6284,
											"end": 6304,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6281,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6304,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 6161,
											"end": 6315,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3023,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3019,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3023,
											"modifierDepth": 3,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3005,
											"end": 3042,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 3005,
											"end": 3042,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3005,
											"end": 3042,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3005,
											"end": 3042,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3005,
											"end": 3042,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3005,
											"end": 3042,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4389,
											"end": 4391,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3042,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3005,
											"end": 3042,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3005,
											"end": 3042,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4431,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43616E6E6F74207374616B65203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "94"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4447,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4447,
											"end": 4465,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4440,
											"end": 4484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4501,
											"end": 4519,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4501,
											"end": 4519,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3042,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 4187,
											"end": 4525,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3042,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 3005,
											"end": 3042,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3067,
											"end": 3079,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3067,
											"end": 3079,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3067,
											"end": 3091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3067,
											"end": 3083,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3067,
											"end": 3091,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3052,
											"end": 3064,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3052,
											"end": 3091,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3145,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3146,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3146,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3146,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3134,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3125,
											"end": 3146,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3146,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3146,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3125,
											"end": 3146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3146,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3146,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3158,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3125,
											"end": 3158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3157,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3150,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3125,
											"end": 3158,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3158,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3125,
											"end": 3158,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3111,
											"end": 3121,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3122,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3122,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3122,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3122,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3110,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3101,
											"end": 3122,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3122,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3122,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3101,
											"end": 3122,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3122,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3158,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3158,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3158,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3187,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3240,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3168,
											"end": 3240,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3187,
											"modifierDepth": 3,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3230,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3239,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3205,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3168,
											"end": 3240,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3240,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3168,
											"end": 3240,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3281,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3281,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3262,
											"end": 3272,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3262,
											"end": 3272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3281,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 3255,
											"end": 3281,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3281,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5608,
											"end": 5961,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 5608,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5730,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5730,
											"end": 5742,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5712,
											"end": 5727,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 5712,
											"end": 5742,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 5691,
											"end": 5856,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5691,
											"end": 5856,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5691,
											"end": 5856,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4732,
											"end": 4734,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5691,
											"end": 5856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5691,
											"end": 5856,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4735,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4773,
											"name": "PUSH",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4774,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4810,
											"end": 4844,
											"name": "PUSH",
											"source": 10,
											"value": "50726576696F7573207265776172647320706572696F64206D75737420626520"
										},
										{
											"begin": 4790,
											"end": 4808,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4790,
											"end": 4808,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4790,
											"end": 4808,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4783,
											"end": 4845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 4915,
											"name": "PUSH",
											"source": 10,
											"value": "636F6D706C657465206265666F7265206368616E67696E672074686520647572"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4854,
											"end": 4916,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 4979,
											"name": "PUSH",
											"source": 10,
											"value": "6174696F6E20666F7220746865206E657720706572696F640000000000000000"
										},
										{
											"begin": 4932,
											"end": 4951,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4932,
											"end": 4951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4932,
											"end": 4951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4925,
											"end": 4980,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 5016,
											"name": "PUSH",
											"source": 10,
											"value": "A4"
										},
										{
											"begin": 4997,
											"end": 5016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5691,
											"end": 5856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 4530,
											"end": 5022,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5691,
											"end": 5856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 5691,
											"end": 5856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5866,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5866,
											"end": 5900,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5866,
											"end": 5900,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5866,
											"end": 5900,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5915,
											"end": 5954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5915,
											"end": 5954,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 5954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3"
										},
										{
											"begin": 5915,
											"end": 5954,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 5954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2522,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2200,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2247,
											"end": 2254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2282,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 2270,
											"end": 2282,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2286,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2287,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2266,
											"end": 2341,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2341,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2266,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2411,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2478,
											"end": 2482,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2411,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2462,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2462,
											"end": 2472,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2411,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2411,
											"end": 2437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2457,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2411,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2411,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2501,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 2411,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2369,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 4067,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3973,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4037,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4026,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4008,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4008,
											"end": 4039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4008,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4008,
											"end": 4039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4008,
											"end": 4039,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4008,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 4049,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 4049,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5229,
											"end": 5231,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 5232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5270,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5307,
											"end": 5341,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5358,
											"end": 5376,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5358,
											"end": 5376,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5376,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5387,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5404,
											"end": 5423,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5404,
											"end": 5423,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5027,
											"end": 5429,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6426,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6429,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6429,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6468,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6504,
											"end": 6538,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6484,
											"end": 6502,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6484,
											"end": 6502,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6484,
											"end": 6502,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6477,
											"end": 6539,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6224,
											"end": 6580,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6787,
											"end": 6789,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6790,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 6828,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6806,
											"end": 6824,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6806,
											"end": 6824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 6824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6799,
											"end": 6829,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6898,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6838,
											"end": 6899,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6916,
											"end": 6934,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6916,
											"end": 6934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6585,
											"end": 6940,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3671,
											"end": 3703,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3671,
											"end": 3703,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3704,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3747,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 895,
											"end": 900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 925,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 902,
											"end": 960,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 875,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 875,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 875,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7203,
											"end": 7218,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7203,
											"end": 7218,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7203,
											"end": 7218,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7255,
											"end": 7270,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7255,
											"end": 7270,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7228,
											"end": 7271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7287,
											"end": 7305,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7287,
											"end": 7305,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7287,
											"end": 7305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 6945,
											"end": 7320,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 974,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 4359,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7777,
											"end": 7779,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7780,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7816,
											"end": 7818,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 7819,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7855,
											"end": 7889,
											"name": "PUSH",
											"source": 10,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7890,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7899,
											"end": 7939,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 7975,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 7956,
											"end": 7975,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7575,
											"end": 7981,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 4037,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3873,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8188,
											"end": 8190,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8170,
											"end": 8191,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8229,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8230,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8266,
											"end": 8300,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8239,
											"end": 8301,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8310,
											"end": 8346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8363,
											"end": 8382,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8363,
											"end": 8382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 7986,
											"end": 8388,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 5282,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 5330,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4960,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9142,
											"end": 9144,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9124,
											"end": 9145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9181,
											"end": 9183,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9154,
											"end": 9184,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9220,
											"end": 9251,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9193,
											"end": 9252,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9287,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9269,
											"end": 9287,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 8940,
											"end": 9293,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 9119,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 565,
											"end": 683,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 565,
											"end": 683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 651,
											"end": 656,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 644,
											"end": 657,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 637,
											"end": 658,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 630,
											"end": 635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 627,
											"end": 659,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 617,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 617,
											"end": 677,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 673,
											"end": 674,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 671,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 663,
											"end": 675,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 688,
											"end": 929,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 688,
											"end": 929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 744,
											"end": 750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 799,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 776,
											"end": 783,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 765,
											"end": 817,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 765,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 765,
											"end": 817,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 813,
											"end": 814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 811,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 803,
											"end": 815,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 765,
											"end": 817,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 765,
											"end": 817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 839,
											"end": 862,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 871,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 893,
											"end": 898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 871,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 871,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 934,
											"end": 1114,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 934,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 993,
											"end": 999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1032,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1017,
											"end": 1049,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1066,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 1014,
											"end": 1066,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1060,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1064,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1066,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 1014,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 934,
											"end": 1114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 934,
											"end": 1114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1773,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1636,
											"end": 1645,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1646,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1619,
											"end": 1651,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 1706,
											"end": 1715,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 1687,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1763,
											"end": 1765,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1766,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1766,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1767,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1767,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2535,
											"end": 2719,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2535,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2605,
											"end": 2611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2658,
											"end": 2660,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2655,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2637,
											"end": 2644,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2656,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2629,
											"end": 2661,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2626,
											"end": 2678,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2626,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 2626,
											"end": 2678,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2672,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2676,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2626,
											"end": 2678,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 2626,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2697,
											"end": 2713,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2713,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2535,
											"end": 2719,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2535,
											"end": 2719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5561,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5434,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5495,
											"end": 5505,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5490,
											"end": 5493,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5486,
											"end": 5506,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5483,
											"end": 5484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5507,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5526,
											"end": 5530,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5523,
											"end": 5524,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5516,
											"end": 5531,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5554,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5547,
											"end": 5548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5540,
											"end": 5555,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5694,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5566,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5642,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5642,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5642,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5665,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 5688,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5651,
											"end": 5688,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5668,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5668,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5699,
											"end": 5867,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 5699,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 5781,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 5781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 5781,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5803,
											"end": 5812,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5803,
											"end": 5812,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5835,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5814,
											"end": 5836,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5814,
											"end": 5836,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5837,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5790,
											"end": 5861,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5841,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5841,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5841,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5872,
											"end": 6089,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5872,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 5913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5939,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 5928,
											"end": 6060,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 5992,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5977,
											"end": 5980,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5973,
											"end": 5993,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5970,
											"end": 5971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5963,
											"end": 5994,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6017,
											"end": 6021,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6014,
											"end": 6015,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6007,
											"end": 6022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6049,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6042,
											"end": 6043,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6035,
											"end": 6050,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 6060,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 5928,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6083,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5872,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6219,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6094,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6168,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6168,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6168,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6190,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6190,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6213,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 6177,
											"end": 6213,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6193,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 6193,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 6193,
											"end": 6211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7570,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 7325,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7392,
											"end": 7398,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7447,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7433,
											"end": 7442,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7424,
											"end": 7431,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7420,
											"end": 7443,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7416,
											"end": 7448,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7465,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7413,
											"end": 7465,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7461,
											"end": 7462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7463,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7465,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7413,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7493,
											"end": 7502,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7503,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7512,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 7534,
											"end": 7539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7512,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 7512,
											"end": 7540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8393,
											"end": 8643,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 8393,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8488,
											"end": 8601,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 8488,
											"end": 8601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8499,
											"end": 8500,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8496,
											"end": 8509,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8488,
											"end": 8601,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8488,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8488,
											"end": 8601,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8578,
											"end": 8589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8578,
											"end": 8589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8578,
											"end": 8589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8570,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8552,
											"end": 8591,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8524,
											"end": 8526,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8517,
											"end": 8527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8488,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 8488,
											"end": 8601,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8488,
											"end": 8601,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8488,
											"end": 8601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8635,
											"end": 8636,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8617,
											"end": 8633,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8617,
											"end": 8633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8610,
											"end": 8637,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8393,
											"end": 8643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8648,
											"end": 8935,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 8648,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8815,
											"end": 8821,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 8890,
											"end": 8896,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8878,
											"end": 8882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8876,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8866,
											"end": 8883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 8831,
											"end": 8897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 8897,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 8831,
											"end": 8897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8929,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8929,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8929,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8648,
											"end": 8935,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8648,
											"end": 8935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9694,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 9298,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9449,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9436,
											"end": 9445,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9450,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9479,
											"end": 9485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9473,
											"end": 9486,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9522,
											"end": 9528,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9517,
											"end": 9519,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9506,
											"end": 9515,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9495,
											"end": 9529,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9538,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 9610,
											"end": 9616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9607,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9594,
											"end": 9603,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9585,
											"end": 9587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9577,
											"end": 9583,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9573,
											"end": 9588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9538,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 9538,
											"end": 9617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9538,
											"end": 9617,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 9538,
											"end": 9617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9678,
											"end": 9680,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9657,
											"end": 9672,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9653,
											"end": 9682,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9638,
											"end": 9683,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9638,
											"end": 9683,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9638,
											"end": 9683,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9638,
											"end": 9683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9685,
											"end": 9687,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9634,
											"end": 9688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9634,
											"end": 9688,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9298,
											"end": 9694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Zero2HeroWeek2StakingRewards.sol",
								"interfaces/IZero2HeroWeek2StakingRewards.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"lastPauseTime()": "91b4ded9",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"periodFinish()": "ebe2b12b",
							"recoverERC20(address,uint256)": "8980f11f",
							"renounceOwnership()": "715018a6",
							"rewardPerToken()": "cd3daf9d",
							"rewardPerTokenStored()": "df136d65",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"rewardsDistribution()": "3fc6df6e",
							"rewardsDuration()": "386a9525",
							"rewardsToken()": "d1af0c7d",
							"setPaused(bool)": "16c38b3c",
							"setRewardsDistribution(address)": "19762143",
							"setRewardsDuration(uint256)": "cc1a378f",
							"stake(uint256)": "a694fc3a",
							"stakingToken()": "72f702f3",
							"totalSupply()": "18160ddd",
							"transferOwnership(address)": "f2fde38b",
							"userRewardPerTokenPaid(address)": "8b876347",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsDistribution\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDuration\",\"type\":\"uint256\"}],\"name\":\"RewardsDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPauseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsDistribution\",\"type\":\"address\"}],\"name\":\"setRewardsDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"setRewardsDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setPaused(bool)\":{\"details\":\"Only the contract owner may call this.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setPaused(bool)\":{\"notice\":\"Change the paused state of the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Zero2HeroWeek2StakingRewards.sol\":\"Zero2HeroWeek2StakingRewards\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/Zero2HeroWeek2StakingRewards.sol\":{\"keccak256\":\"0xdf9ab388df57e3cdd764b86420bfc20c6532c4b0b29b601f6469f2463c4256d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61755dce776b1e9c4bd2329f5184a2013a42b74afb27f32981a1c9d466a75fc6\",\"dweb:/ipfs/QmTRksC6MLU393covFZvuXfMrDoDDQVrPuQJzyZAAHnrMA\"]},\"interfaces/IZero2HeroWeek2StakingRewards.sol\":{\"keccak256\":\"0xc7b2cb99ab1e3722a4c4e9e0652634a7760da355a8ba9aa35479ba1436aaa7a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50df401b549d3494dce9d48ffc7357fd1d5c9bf1b3274e39bf2bd6e7c97d928f\",\"dweb:/ipfs/QmQVDpx83qiuec3CGUXtqyxZTp3CeG1UXkzAskaBAVTyx7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1250,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1252,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "stakingToken",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1255,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "periodFinish",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1258,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "rewardRate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1261,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "rewardsDuration",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1263,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1265,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1267,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "rewardsDistribution",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1271,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1275,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1277,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1281,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1824,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "lastPauseTime",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1826,
								"contract": "contracts/Zero2HeroWeek2StakingRewards.sol:Zero2HeroWeek2StakingRewards",
								"label": "paused",
								"offset": 0,
								"slot": "15",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setPaused(bool)": {
								"notice": "Change the paused state of the contract"
							}
						},
						"version": 1
					}
				}
			},
			"interfaces/IZero2HeroWeek2StakingRewards.sol": {
				"IZero2HeroWeek2StakingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"lastTimeRewardApplicable()": "80faa57d",
							"rewardPerToken()": "cd3daf9d",
							"rewardsDistribution()": "3fc6df6e",
							"rewardsToken()": "d1af0c7d",
							"stake(uint256)": "a694fc3a",
							"totalSupply()": "18160ddd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IZero2HeroWeek2StakingRewards.sol\":\"IZero2HeroWeek2StakingRewards\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IZero2HeroWeek2StakingRewards.sol\":{\"keccak256\":\"0xc7b2cb99ab1e3722a4c4e9e0652634a7760da355a8ba9aa35479ba1436aaa7a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50df401b549d3494dce9d48ffc7357fd1d5c9bf1b3274e39bf2bd6e7c97d928f\",\"dweb:/ipfs/QmQVDpx83qiuec3CGUXtqyxZTp3CeG1UXkzAskaBAVTyx7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							913
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 914,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 913,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								913
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 166,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 166,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 166,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 167,
							"src": "888:1952:1",
							"usedErrors": []
						}
					],
					"src": "112:2729:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							244
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 178,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 187,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 244,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 244,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 244,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 244,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 244,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 244,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 245,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							280
						]
					},
					"id": 281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 280,
							"linearizedBaseContracts": [
								280
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1494:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1519:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1542:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1568:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 257,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1585:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1604:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:3"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:3"
									},
									"scope": 280,
									"src": "1446:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1950:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:3"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1988:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:3"
									},
									"scope": 280,
									"src": "1934:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:3"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "2240:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:3"
									},
									"scope": 280,
									"src": "2189:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 281,
							"src": "620:1631:3",
							"usedErrors": []
						}
					],
					"src": "114:2138:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							891
						],
						"IERC20": [
							244
						],
						"IERC20Permit": [
							280
						],
						"SafeERC20": [
							561
						]
					},
					"id": 562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 245,
							"src": "140:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 281,
							"src": "164:46:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 892,
							"src": "211:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 561,
							"linearizedBaseContracts": [
								561
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 289,
									"libraryName": {
										"id": 287,
										"name": "Address",
										"nameLocations": [
											"737:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 891,
										"src": "737:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:4",
									"typeName": {
										"id": 288,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "865:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "895:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 303,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "925:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 211,
																		"src": "925:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 306,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "950:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 307,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "954:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 301,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 299,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "875:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "875:86:4"
											}
										]
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 291,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 290,
														"name": "IERC20",
														"nameLocations": [
															"794:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "794:6:4"
													},
													"referencedDeclaration": 244,
													"src": "794:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "816:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "836:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:4"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:4"
									},
									"scope": 561,
									"src": "763:205:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1102:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1132:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 328,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "1162:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 243,
																		"src": "1162:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 331,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "1191:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 332,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "1197:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 333,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "1201:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "1112:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:4"
											}
										]
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1009:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "1009:6:4"
													},
													"referencedDeclaration": 244,
													"src": "1009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1031:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1053:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1073:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:4"
									},
									"scope": 561,
									"src": "974:241:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1581:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 350,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "1830:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 353,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 358,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$561",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$561",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 357,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 356,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 360,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 344,
																					"src": "1877:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 354,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "1846:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$244",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 221,
																				"src": "1846:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 364,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2001:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 373,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "2031:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "2031:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 376,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "2055:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "2064:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 371,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 369,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "1981:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:4"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1505:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "1505:6:4"
													},
													"referencedDeclaration": 244,
													"src": "1505:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1527:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1552:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:4"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:4"
									},
									"scope": 561,
									"src": "1475:603:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2200:194:4",
										"statements": [
											{
												"assignments": [
													393
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "2210:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 392,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 398,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$561",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$561",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 400,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "2264:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 394,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "2233:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$244",
																	"typeString": "contract IERC20"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:4",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 221,
															"src": "2233:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 402,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2275:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "2310:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 409,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 385,
																			"src": "2340:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "2340:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 412,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "2364:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 413,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "2373:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 407,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 405,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2290:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:4"
											}
										]
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2124:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 384,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 383,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "2124:6:4"
													},
													"referencedDeclaration": 244,
													"src": "2124:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2146:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:4"
									},
									"scope": 561,
									"src": "2084:310:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "2516:370:4",
										"statements": [
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:4",
												"statements": [
													{
														"assignments": [
															429
														],
														"declarations": [
															{
																"constant": false,
																"id": 429,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 464,
																"src": "2550:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 428,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 438,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 434,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$561",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$561",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 432,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 436,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "2604:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "2573:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 221,
																"src": "2573:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 440,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "2634:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 441,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "2650:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 439,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:4"
													},
													{
														"assignments": [
															447
														],
														"declarations": [
															{
																"constant": false,
																"id": 447,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 464,
																"src": "2715:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 446,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 451,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 448,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "2738:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 449,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2753:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 453,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "2792:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 456,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 421,
																					"src": "2822:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$244",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 231,
																				"src": "2822:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 459,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2846:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 460,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "2855:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 454,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 452,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "2772:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 463,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:4"
													}
												]
											}
										]
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2440:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 420,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 419,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "2440:6:4"
													},
													"referencedDeclaration": 244,
													"src": "2440:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2462:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2487:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:4"
									},
									"scope": 561,
									"src": "2400:486:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3107:257:4",
										"statements": [
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 521,
														"src": "3117:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 486,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [
														{
															"id": 490,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3152:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 488,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3139:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$280",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "3139:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3181:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "3188:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "3197:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 499,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3204:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 500,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3214:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 501,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3217:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 502,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3220:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 493,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$280",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:4",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 265,
														"src": "3168:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:4"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 521,
														"src": "3232:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 507,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3253:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$280",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "3253:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "3290:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 514,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3304:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:4"
											}
										]
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2921:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$280",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 468,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 467,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 280,
														"src": "2921:12:4"
													},
													"referencedDeclaration": 280,
													"src": "2921:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$280",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2949:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2972:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2997:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3020:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3046:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3063:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 480,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3082:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 482,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:4"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:4"
									},
									"scope": 561,
									"src": "2892:472:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "3817:636:4",
										"statements": [
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "4166:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 531,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4220:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 535,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "4200:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 533,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "4192:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 542,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "4275:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "4271:176:4",
												"trueBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "4298:149:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 549,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "4370:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 551,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 550,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 552,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 547,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 546,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 556,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3776:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 525,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 524,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "3776:6:4"
													},
													"referencedDeclaration": 244,
													"src": "3776:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3790:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:4"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:4"
									},
									"scope": 561,
									"src": "3747:706:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 562,
							"src": "707:3748:4",
							"usedErrors": []
						}
					],
					"src": "115:4341:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							891
						]
					},
					"id": 892,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 563,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 564,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 891,
							"linearizedBaseContracts": [
								891
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "1241:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 572,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 571,
												"id": 577,
												"nodeType": "Return",
												"src": "1458:30:5"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:5"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:5"
									},
									"scope": 891,
									"src": "1175:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "2483:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 590,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$891",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$891",
																				"typeString": "library Address"
																			}
																		],
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 588,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 593,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "2526:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:5"
											},
											{
												"assignments": [
													599,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "2578:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 598,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 606,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 600,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "2596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 602,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "2618:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:5"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2431:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:5"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:5"
									},
									"scope": 891,
									"src": "2412:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "3555:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 624,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "3594:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "3602:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 623,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															671,
															715
														],
														"referencedDeclaration": 715,
														"src": "3572:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 622,
												"id": 629,
												"nodeType": "Return",
												"src": "3565:79:5"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "3504:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:5"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "3541:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:5"
									},
									"scope": 891,
									"src": "3466:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4020:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "4059:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4067:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 647,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4076:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 643,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															671,
															715
														],
														"referencedDeclaration": 715,
														"src": "4037:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 642,
												"id": 649,
												"nodeType": "Return",
												"src": "4030:59:5"
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "3904:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "3928:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 635,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "3955:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 637,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4006:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:5"
									},
									"scope": 891,
									"src": "3873:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "4601:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "4640:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "4648:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 666,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "4654:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 663,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															671,
															715
														],
														"referencedDeclaration": 715,
														"src": "4618:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 662,
												"id": 669,
												"nodeType": "Return",
												"src": "4611:94:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "4498:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "4522:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "4549:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "4587:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:5"
									},
									"scope": 891,
									"src": "4458:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "5139:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 688,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$891",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$891",
																				"typeString": "library Address"
																			}
																		],
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 686,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 691,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "5182:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 685,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:5"
											},
											{
												"assignments": [
													697,
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 697,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "5241:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 696,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "5255:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 698,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"arguments": [
														{
															"id": 704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5308:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 700,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "5282:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 702,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "5301:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 708,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5357:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "5365:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 710,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "5374:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 711,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "5386:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 707,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "5330:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 684,
												"id": 713,
												"nodeType": "Return",
												"src": "5323:76:5"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "5000:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "5024:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "5051:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "5074:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "5125:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:5"
									},
									"scope": 891,
									"src": "4960:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "5683:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 726,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5719:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5727:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 725,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															761
														],
														"referencedDeclaration": 761,
														"src": "5700:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 724,
												"id": 730,
												"nodeType": "Return",
												"src": "5693:80:5"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5611:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 719,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:5"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5669:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:5"
									},
									"scope": 891,
									"src": "5583:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "6122:168:5",
										"statements": [
											{
												"assignments": [
													745,
													747
												],
												"declarations": [
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 760,
														"src": "6133:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 744,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 747,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 760,
														"src": "6147:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 746,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 752,
												"initialValue": {
													"arguments": [
														{
															"id": 750,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "6192:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 748,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "6174:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "6241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "6249:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 756,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6258:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 757,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "6270:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 753,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "6214:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 743,
												"id": 759,
												"nodeType": "Return",
												"src": "6207:76:5"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6001:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6025:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6052:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 738,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:5"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6108:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:5"
									},
									"scope": 891,
									"src": "5964:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "6566:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 772,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "6604:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "6612:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 771,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															778,
															807
														],
														"referencedDeclaration": 807,
														"src": "6583:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 770,
												"id": 776,
												"nodeType": "Return",
												"src": "6576:84:5"
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "6499:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "6515:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:5"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "6552:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:5"
									},
									"scope": 891,
									"src": "6469:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "7008:170:5",
										"statements": [
											{
												"assignments": [
													791,
													793
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "7019:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 790,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 793,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "7033:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 792,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"initialValue": {
													"arguments": [
														{
															"id": 796,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "7080:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 794,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "7060:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 800,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "7129:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 801,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "7137:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 802,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "7146:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 803,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "7158:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 799,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "7102:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 789,
												"id": 805,
												"nodeType": "Return",
												"src": "7095:76:5"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "6892:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "6916:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "6943:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 784,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:5"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "6994:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:5"
									},
									"scope": 891,
									"src": "6853:325:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "7660:434:5",
										"statements": [
											{
												"condition": {
													"id": 821,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 812,
													"src": "7674:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 843,
													"nodeType": "Block",
													"src": "8030:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 839,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "8052:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 840,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "8064:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 838,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "8044:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:5"
														}
													]
												},
												"id": 844,
												"nodeType": "IfStatement",
												"src": "7670:418:5",
												"trueBody": {
													"id": 837,
													"nodeType": "Block",
													"src": "7683:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 822,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "7701:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 834,
															"nodeType": "IfStatement",
															"src": "7697:286:5",
															"trueBody": {
																"id": 833,
																"nodeType": "Block",
																"src": "7725:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 828,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 810,
																							"src": "7927:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 827,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 579,
																						"src": "7916:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 829,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 830,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 826,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 832,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 835,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "8003:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 820,
															"id": 836,
															"nodeType": "Return",
															"src": "7996:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "7511:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "7535:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 811,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "7557:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "7590:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 815,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "7646:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:5"
									},
									"scope": 891,
									"src": "7466:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "8475:135:5",
										"statements": [
											{
												"condition": {
													"id": 858,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 849,
													"src": "8489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 867,
													"nodeType": "Block",
													"src": "8546:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 863,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "8568:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 864,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "8580:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 862,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "8560:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 866,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:5"
														}
													]
												},
												"id": 868,
												"nodeType": "IfStatement",
												"src": "8485:119:5",
												"trueBody": {
													"id": 861,
													"nodeType": "Block",
													"src": "8498:42:5",
													"statements": [
														{
															"expression": {
																"id": 859,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "8519:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 857,
															"id": 860,
															"nodeType": "Return",
															"src": "8512:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8350:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 848,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8372:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8405:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 852,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:5"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8461:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:5"
									},
									"scope": 891,
									"src": "8315:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "8699:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 877,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "8775:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 887,
													"nodeType": "Block",
													"src": "9105:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 884,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 874,
																		"src": "9126:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 883,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 886,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:5"
														}
													]
												},
												"id": 888,
												"nodeType": "IfStatement",
												"src": "8771:379:5",
												"trueBody": {
													"id": 882,
													"nodeType": "Block",
													"src": "8798:301:5",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 872,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 872,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:5",
																	"valueSize": 1
																}
															],
															"id": 881,
															"nodeType": "InlineAssembly",
															"src": "8947:142:5"
														}
													]
												}
											}
										]
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "8633:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 871,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "8658:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:5"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:5"
									},
									"scope": 891,
									"src": "8616:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 892,
							"src": "194:8964:5",
							"usedErrors": []
						}
					],
					"src": "101:9058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							913
						]
					},
					"id": 914,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 893,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 894,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 913,
							"linearizedBaseContracts": [
								913
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 899,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 898,
												"id": 901,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 913,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 908,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 907,
												"id": 910,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 905,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 913,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 914,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1225
						]
					},
					"id": 1226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 915,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 916,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1225,
							"linearizedBaseContracts": [
								1225
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 946,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															929
														],
														"declarations": [
															{
																"constant": false,
																"id": 929,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 946,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 928,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 933,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 930,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 931,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 934,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 935,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 941,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 939,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 927,
															"id": 940,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 943,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 944,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 927,
														"id": 945,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 1225,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 974,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 960,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 961,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 967,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 965,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 959,
															"id": 966,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 969,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 970,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 972,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 959,
														"id": 973,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 955,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 1225,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 1016,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 988,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 995,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 993,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 987,
															"id": 994,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															997
														],
														"declarations": [
															{
																"constant": false,
																"id": 997,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1016,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 996,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1001,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 998,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 999,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1002,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1003,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1005,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1011,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1009,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 987,
															"id": 1010,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1013,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1014,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 987,
														"id": 1015,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 983,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 1225,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 1044,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1030,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1037,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1035,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1029,
															"id": 1036,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1039,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1040,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1023,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1042,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1029,
														"id": 1043,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 1225,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 1072,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1058,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1065,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1063,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1057,
															"id": 1064,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1067,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1068,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1070,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1057,
														"id": 1071,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 1225,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1084,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1085,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1087,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 1225,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1099,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1100,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1098,
												"id": 1102,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 1225,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1114,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1115,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1113,
												"id": 1117,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 1225,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1129,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1130,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1128,
												"id": 1132,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 1225,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1144,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1145,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1147,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 1225,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "5084:106:7",
										"statements": [
											{
												"id": 1172,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1162,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "5126:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1163,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "5131:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1165,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "5134:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1161,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1167,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1168,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "5168:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "5172:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1160,
														"id": 1171,
														"nodeType": "Return",
														"src": "5161:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "4981:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "5000:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "5019:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1155,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:7"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "5075:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:7"
									},
									"scope": 1225,
									"src": "4959:231:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "5799:105:7",
										"statements": [
											{
												"id": 1197,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1187,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "5841:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1190,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "5848:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1186,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1192,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1193,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "5882:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "5886:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1185,
														"id": 1196,
														"nodeType": "Return",
														"src": "5875:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "5696:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "5715:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "5734:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:7"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "5790:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:7"
									},
									"scope": 1225,
									"src": "5674:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "6675:105:7",
										"statements": [
											{
												"id": 1222,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1212,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "6717:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1215,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "6724:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1211,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1217,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1218,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "6758:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1219,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "6762:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1210,
														"id": 1221,
														"nodeType": "Return",
														"src": "6751:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "6572:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "6591:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "6610:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:7"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "6666:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:7"
									},
									"scope": 1225,
									"src": "6550:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1226,
							"src": "482:6300:7",
							"usedErrors": []
						}
					],
					"src": "107:6676:7"
				},
				"id": 7
			},
			"contracts/Zero2HeroWeek2StakingRewards.sol": {
				"ast": {
					"absolutePath": "contracts/Zero2HeroWeek2StakingRewards.sol",
					"exportedSymbols": {
						"Address": [
							891
						],
						"Context": [
							913
						],
						"IERC20": [
							244
						],
						"IERC20Permit": [
							280
						],
						"IZero2HeroWeek2StakingRewards": [
							1935
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							166
						],
						"SafeERC20": [
							561
						],
						"SafeMath": [
							1225
						],
						"Zero2HeroWeek2StakingRewards": [
							1872
						]
					},
					"id": 1873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1228,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1873,
							"sourceUnit": 1226,
							"src": "58:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1873,
							"sourceUnit": 892,
							"src": "116:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1230,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1873,
							"sourceUnit": 245,
							"src": "168:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"id": 1231,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1873,
							"sourceUnit": 281,
							"src": "225:79:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1232,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1873,
							"sourceUnit": 562,
							"src": "305:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1873,
							"sourceUnit": 167,
							"src": "371:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IZero2HeroWeek2StakingRewards.sol",
							"file": "../interfaces/IZero2HeroWeek2StakingRewards.sol",
							"id": 1234,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1873,
							"sourceUnit": 1936,
							"src": "449:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1235,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1873,
							"sourceUnit": 113,
							"src": "507:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1236,
										"name": "IZero2HeroWeek2StakingRewards",
										"nameLocations": [
											"776:29:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1935,
										"src": "776:29:8"
									},
									"id": 1237,
									"nodeType": "InheritanceSpecifier",
									"src": "776:29:8"
								},
								{
									"baseName": {
										"id": 1238,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"807:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "807:15:8"
									},
									"id": 1239,
									"nodeType": "InheritanceSpecifier",
									"src": "807:15:8"
								},
								{
									"baseName": {
										"id": 1240,
										"name": "Ownable",
										"nameLocations": [
											"824:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "824:7:8"
									},
									"id": 1241,
									"nodeType": "InheritanceSpecifier",
									"src": "824:7:8"
								}
							],
							"canonicalName": "Zero2HeroWeek2StakingRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1872,
							"linearizedBaseContracts": [
								1872,
								112,
								913,
								166,
								1935
							],
							"name": "Zero2HeroWeek2StakingRewards",
							"nameLocation": "744:28:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1244,
									"libraryName": {
										"id": 1242,
										"name": "SafeMath",
										"nameLocations": [
											"844:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1225,
										"src": "844:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "838:27:8",
									"typeName": {
										"id": 1243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "857:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1248,
									"libraryName": {
										"id": 1245,
										"name": "SafeERC20",
										"nameLocations": [
											"876:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 561,
										"src": "876:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "870:27:8",
									"typeName": {
										"id": 1247,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1246,
											"name": "IERC20",
											"nameLocations": [
												"890:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "890:6:8"
										},
										"referencedDeclaration": 244,
										"src": "890:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"baseFunctions": [
										1913
									],
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 1250,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "966:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "951:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1249,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "951:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 1252,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "999:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "984:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1251,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "984:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ebe2b12b",
									"id": 1255,
									"mutability": "mutable",
									"name": "periodFinish",
									"nameLocation": "1032:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "1017:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1253,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1017:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1254,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1047:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 1258,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "1069:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "1054:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1256,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1054:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1257,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1082:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "386a9525",
									"id": 1261,
									"mutability": "mutable",
									"name": "rewardsDuration",
									"nameLocation": "1104:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "1089:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1259,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1089:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 1260,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1122:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 1263,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "1149:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "1134:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1262,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1134:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 1265,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "1184:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "1169:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1264,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1169:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1908
									],
									"constant": false,
									"functionSelector": "3fc6df6e",
									"id": 1267,
									"mutability": "mutable",
									"name": "rewardsDistribution",
									"nameLocation": "1225:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "1210:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1266,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1210:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 1271,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "1286:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "1251:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1270,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1268,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1259:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1251:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1269,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1270:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 1275,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "1349:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "1314:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1274,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1272,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1322:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1314:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1273,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1333:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1277,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1379:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "1363:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1276,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1363:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1281,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1433:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "1397:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1280,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1278,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1405:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1397:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1279,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1416:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "1648:135:8",
										"statements": [
											{
												"expression": {
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1290,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "1658:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1291,
														"name": "_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "1673:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1658:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "1658:28:8"
											},
											{
												"expression": {
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1294,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "1696:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1295,
														"name": "_stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "1711:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1696:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "1696:28:8"
											},
											{
												"expression": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1298,
														"name": "rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "1734:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1299,
														"name": "_rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "1756:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1734:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "1734:42:8"
											}
										]
									},
									"id": 1303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_rewardsDistribution",
												"nameLocation": "1559:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1551:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "1597:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1589:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "1628:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1620:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:106:8"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1648:0:8"
									},
									"scope": 1872,
									"src": "1530:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1918
									],
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "1883:36:8",
										"statements": [
											{
												"expression": {
													"id": 1308,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1277,
													"src": "1900:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1307,
												"id": 1309,
												"nodeType": "Return",
												"src": "1893:19:8"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1837:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1848:2:8"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1874:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:9:8"
									},
									"scope": 1872,
									"src": "1828:91:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1881
									],
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "1993:42:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1318,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "2010:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1320,
													"indexExpression": {
														"id": 1319,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "2020:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2010:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1317,
												"id": 1321,
												"nodeType": "Return",
												"src": "2003:25:8"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1934:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1952:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1944:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:17:8"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1984:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:9:8"
									},
									"scope": 1872,
									"src": "1925:110:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1898
									],
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "2107:87:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1328,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2124:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2130:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2124:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1330,
															"name": "periodFinish",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "2142:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2124:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1334,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "2175:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2124:63:8",
													"trueExpression": {
														"expression": {
															"id": 1332,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2157:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2163:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2157:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1327,
												"id": 1336,
												"nodeType": "Return",
												"src": "2117:70:8"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "2050:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2074:2:8"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "2098:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2098:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:9:8"
									},
									"scope": 1872,
									"src": "2041:153:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1903
									],
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "2256:266:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1343,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "2270:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2286:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2270:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1349,
												"nodeType": "IfStatement",
												"src": "2266:75:8",
												"trueBody": {
													"id": 1348,
													"nodeType": "Block",
													"src": "2289:52:8",
													"statements": [
														{
															"expression": {
																"id": 1346,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "2310:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1342,
															"id": 1347,
															"nodeType": "Return",
															"src": "2303:27:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1364,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "2488:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 1361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2478:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1358,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1258,
																					"src": "2462:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1355,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1263,
																							"src": "2442:14:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1352,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1338,
																								"src": "2411:24:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 1353,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2411:26:8",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1354,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2438:3:8",
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1104,
																						"src": "2411:30:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1356,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2411:46:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2458:3:8",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1119,
																				"src": "2411:50:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2411:62:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2474:3:8",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1119,
																		"src": "2411:66:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2411:72:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2484:3:8",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1134,
																"src": "2411:76:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2411:90:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1350,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "2369:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2390:3:8",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1089,
														"src": "2369:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2369:146:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1342,
												"id": 1367,
												"nodeType": "Return",
												"src": "2350:165:8"
											}
										]
									},
									"functionSelector": "cd3daf9d",
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "2209:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:8"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "2247:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:9:8"
									},
									"scope": 1872,
									"src": "2200:322:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1888
									],
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "2591:133:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1392,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "2700:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1394,
															"indexExpression": {
																"id": 1393,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "2708:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2700:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2690:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1383,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1271,
																						"src": "2652:22:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1385,
																					"indexExpression": {
																						"id": 1384,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1371,
																						"src": "2675:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2652:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1380,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1369,
																						"src": "2631:14:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1381,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2631:16:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2648:3:8",
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1104,
																				"src": "2631:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2631:53:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1376,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "2608:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1378,
																			"indexExpression": {
																				"id": 1377,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1371,
																				"src": "2618:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2608:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2627:3:8",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1119,
																		"src": "2608:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2608:77:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2686:3:8",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1134,
																"src": "2608:81:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2608:87:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2696:3:8",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1089,
														"src": "2608:91:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2608:109:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1375,
												"id": 1396,
												"nodeType": "Return",
												"src": "2601:116:8"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "2537:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2552:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "2544:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2543:17:8"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "2582:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2581:9:8"
									},
									"scope": 1872,
									"src": "2528:196:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1893
									],
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "2794:55:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1405,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "2826:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1403,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "2811:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2822:3:8",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1119,
														"src": "2811:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1402,
												"id": 1407,
												"nodeType": "Return",
												"src": "2804:38:8"
											}
										]
									},
									"functionSelector": "1c1f78eb",
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nameLocation": "2739:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2759:2:8"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2785:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2784:9:8"
									},
									"scope": 1872,
									"src": "2730:119:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1929
									],
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "2995:293:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1423,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "3013:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3022:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3013:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3025:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 1422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3005:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3005:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "3005:37:8"
											},
											{
												"expression": {
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1429,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "3052:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1432,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "3084:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1430,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "3067:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3080:3:8",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1089,
															"src": "3067:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3067:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3052:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "3052:39:8"
											},
											{
												"expression": {
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1436,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "3101:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1439,
														"indexExpression": {
															"expression": {
																"id": 1437,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3111:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3115:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3111:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3101:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1445,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "3151:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1440,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "3125:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1443,
																"indexExpression": {
																	"expression": {
																		"id": 1441,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3135:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3139:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3135:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3125:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3147:3:8",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1089,
															"src": "3125:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3125:33:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3101:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "3101:57:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1453,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3206:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3210:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3206:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1457,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3226:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Zero2HeroWeek2StakingRewards_$1872",
																		"typeString": "contract Zero2HeroWeek2StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Zero2HeroWeek2StakingRewards_$1872",
																		"typeString": "contract Zero2HeroWeek2StakingRewards"
																	}
																],
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3218:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1455,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3218:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3218:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1459,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "3233:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1450,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "3175:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1449,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "3168:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3168:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3189:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "3168:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$244_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "3168:72:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1463,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3262:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3266:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3262:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1465,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "3274:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1462,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "3255:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3255:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "EmitStatement",
												"src": "3250:31:8"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1414,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1413,
												"name": "nonReentrant",
												"nameLocations": [
													"2947:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "2947:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2947:12:8"
										},
										{
											"id": 1416,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1415,
												"name": "notPaused",
												"nameLocations": [
													"2960:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1871,
												"src": "2960:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2960:9:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1418,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2983:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2987:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2983:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1417,
												"name": "updateReward",
												"nameLocations": [
													"2970:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1766,
												"src": "2970:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2970:24:8"
										}
									],
									"name": "stake",
									"nameLocation": "2916:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2930:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "2922:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2921:16:8"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2995:0:8"
									},
									"scope": 1872,
									"src": "2907:381:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1934
									],
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "3373:280:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1481,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "3391:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3400:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3391:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3403:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 1480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3383:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3383:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "3383:40:8"
											},
											{
												"expression": {
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1487,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "3433:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1490,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "3465:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1488,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "3448:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3461:3:8",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1104,
															"src": "3448:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3448:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3433:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "3433:39:8"
											},
											{
												"expression": {
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1494,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "3482:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1497,
														"indexExpression": {
															"expression": {
																"id": 1495,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3492:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3496:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3492:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3482:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1503,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "3532:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1498,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "3506:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1501,
																"indexExpression": {
																	"expression": {
																		"id": 1499,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3516:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3520:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3516:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3506:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3528:3:8",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1104,
															"src": "3506:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3506:33:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3482:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "3482:57:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1511,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3583:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3587:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3583:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1513,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "3595:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1508,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "3556:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1507,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "3549:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3549:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3570:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "3549:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$244_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3549:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "3549:53:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1517,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3627:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3631:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3627:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "3639:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1516,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "3617:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3617:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "EmitStatement",
												"src": "3612:34:8"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1474,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1473,
												"name": "nonReentrant",
												"nameLocations": [
													"3335:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "3335:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3335:12:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1476,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3361:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3365:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3361:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1478,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1475,
												"name": "updateReward",
												"nameLocations": [
													"3348:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1766,
												"src": "3348:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3348:24:8"
										}
									],
									"name": "withdraw",
									"nameLocation": "3303:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3320:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "3312:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3312:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:16:8"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:8"
									},
									"scope": 1872,
									"src": "3294:359:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1924
									],
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "3725:242:8",
										"statements": [
											{
												"assignments": [
													1533
												],
												"declarations": [
													{
														"constant": false,
														"id": 1533,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3743:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1566,
														"src": "3735:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1532,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3735:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1538,
												"initialValue": {
													"baseExpression": {
														"id": 1534,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "3752:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1537,
													"indexExpression": {
														"expression": {
															"id": 1535,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3760:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3764:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3760:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3752:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3735:36:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1539,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "3785:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3794:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3785:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1565,
												"nodeType": "IfStatement",
												"src": "3781:180:8",
												"trueBody": {
													"id": 1564,
													"nodeType": "Block",
													"src": "3797:164:8",
													"statements": [
														{
															"expression": {
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1542,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1275,
																		"src": "3811:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1545,
																	"indexExpression": {
																		"expression": {
																			"id": 1543,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3819:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3823:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3819:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3811:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3833:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3811:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1548,
															"nodeType": "ExpressionStatement",
															"src": "3811:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1553,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3882:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3886:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3882:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1555,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1533,
																		"src": "3894:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1550,
																				"name": "rewardsToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1250,
																				"src": "3855:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1549,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "3848:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3848:20:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$244",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3869:12:8",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 312,
																	"src": "3848:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$244_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3848:53:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1557,
															"nodeType": "ExpressionStatement",
															"src": "3848:53:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1559,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3931:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3935:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3931:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1561,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1533,
																		"src": "3943:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1558,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1788,
																	"src": "3920:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3920:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1563,
															"nodeType": "EmitStatement",
															"src": "3915:35:8"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1525,
												"name": "nonReentrant",
												"nameLocations": [
													"3687:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "3687:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3687:12:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1528,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3713:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3717:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3713:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1530,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1527,
												"name": "updateReward",
												"nameLocations": [
													"3700:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1766,
												"src": "3700:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3700:24:8"
										}
									],
									"name": "getReward",
									"nameLocation": "3668:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3677:2:8"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3725:0:8"
									},
									"scope": 1872,
									"src": "3659:308:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1921
									],
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "3998:69:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1571,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "4017:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1574,
															"indexExpression": {
																"expression": {
																	"id": 1572,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4027:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4031:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4027:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4017:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1570,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "4008:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4008:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "4008:31:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1577,
														"name": "getReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "4049:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:11:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "4049:11:8"
											}
										]
									},
									"functionSelector": "e9fad8ee",
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nameLocation": "3982:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3986:2:8"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3998:0:8"
									},
									"scope": 1872,
									"src": "3973:94:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1672,
										"nodeType": "Block",
										"src": "4229:970:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1594,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4243:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4249:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4243:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1596,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "4262:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4243:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1631,
													"nodeType": "Block",
													"src": "4347:204:8",
													"statements": [
														{
															"assignments": [
																1607
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1607,
																	"mutability": "mutable",
																	"name": "remaining",
																	"nameLocation": "4369:9:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1631,
																	"src": "4361:17:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1606,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4361:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1613,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1610,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4398:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4404:9:8",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4398:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1608,
																		"name": "periodFinish",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "4381:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4394:3:8",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1104,
																	"src": "4381:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4381:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4361:53:8"
														},
														{
															"assignments": [
																1615
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1615,
																	"mutability": "mutable",
																	"name": "leftover",
																	"nameLocation": "4436:8:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1631,
																	"src": "4428:16:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1614,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4428:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1620,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1618,
																		"name": "rewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "4461:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1616,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "4447:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4457:3:8",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1119,
																	"src": "4447:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4447:25:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4428:44:8"
														},
														{
															"expression": {
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1621,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "4486:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1627,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "4524:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1624,
																					"name": "leftover",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1615,
																					"src": "4510:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1622,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1583,
																					"src": "4499:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4506:3:8",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1089,
																				"src": "4499:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4499:20:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4520:3:8",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1134,
																		"src": "4499:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4499:41:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4486:54:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1630,
															"nodeType": "ExpressionStatement",
															"src": "4486:54:8"
														}
													]
												},
												"id": 1632,
												"nodeType": "IfStatement",
												"src": "4239:312:8",
												"trueBody": {
													"id": 1605,
													"nodeType": "Block",
													"src": "4276:65:8",
													"statements": [
														{
															"expression": {
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1598,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "4290:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1601,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "4314:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1599,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "4303:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4310:3:8",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1134,
																		"src": "4303:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4303:27:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4290:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1604,
															"nodeType": "ExpressionStatement",
															"src": "4290:40:8"
														}
													]
												}
											},
											{
												"assignments": [
													1634
												],
												"declarations": [
													{
														"constant": false,
														"id": 1634,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "4910:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1672,
														"src": "4905:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1633,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4905:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1644,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1641,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4959:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Zero2HeroWeek2StakingRewards_$1872",
																		"typeString": "contract Zero2HeroWeek2StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Zero2HeroWeek2StakingRewards_$1872",
																		"typeString": "contract Zero2HeroWeek2StakingRewards"
																	}
																],
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4951:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1639,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4951:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4951:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1636,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "4927:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1635,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "4920:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4920:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4941:9:8",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4920:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4920:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4905:60:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1646,
																"name": "rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "4983:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1649,
																		"name": "rewardsDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "5009:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1647,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1634,
																		"src": "4997:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5005:3:8",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1134,
																	"src": "4997:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4997:28:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f76696465642072657761726420746f6f2068696768",
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5027:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															},
															"value": "Provided reward too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															}
														],
														"id": 1645,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4975:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4975:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "4975:79:8"
											},
											{
												"expression": {
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1655,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "5065:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1656,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5082:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5088:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5082:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5065:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "5065:32:8"
											},
											{
												"expression": {
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1660,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "5107:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1664,
																"name": "rewardsDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "5142:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1661,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5122:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5128:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5122:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5138:3:8",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1089,
															"src": "5122:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5122:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5107:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "5107:51:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1669,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "5185:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1668,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "5173:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5173:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1671,
												"nodeType": "EmitStatement",
												"src": "5168:24:8"
											}
										]
									},
									"functionSelector": "3c6b16ab",
									"id": 1673,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1586,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1585,
												"name": "onlyRewardsDistribution",
												"nameLocations": [
													"4180:23:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1810,
												"src": "4180:23:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4180:23:8"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4225:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4217:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1588,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4217:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4217:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1592,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1587,
												"name": "updateReward",
												"nameLocations": [
													"4204:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1766,
												"src": "4204:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4204:24:8"
										}
									],
									"name": "notifyRewardAmount",
									"nameLocation": "4136:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "4163:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "4155:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4155:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4154:16:8"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4229:0:8"
									},
									"scope": 1872,
									"src": "4127:1072:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "5395:207:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1683,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "5413:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1684,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "5429:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5413:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656e",
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5443:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9",
																"typeString": "literal_string \"Cannot withdraw the staking token\""
															},
															"value": "Cannot withdraw the staking token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9",
																"typeString": "literal_string \"Cannot withdraw the staking token\""
															}
														],
														"id": 1682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5405:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5405:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "5405:74:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1693,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "5523:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5523:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1695,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "5532:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1690,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "5496:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1689,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "5489:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5489:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5510:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "5489:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$244_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5489:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "5489:55:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1699,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "5569:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1700,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "5583:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1698,
														"name": "Recovered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "5559:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5559:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "EmitStatement",
												"src": "5554:41:8"
											}
										]
									},
									"functionSelector": "8980f11f",
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1679,
												"name": "onlyOwner",
												"nameLocations": [
													"5385:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5385:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5385:9:8"
										}
									],
									"name": "recoverERC20",
									"nameLocation": "5320:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "5341:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "5333:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5333:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "5363:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "5355:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5355:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5332:43:8"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5395:0:8"
									},
									"scope": 1872,
									"src": "5311:291:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "5681:280:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1712,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5712:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5718:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5712:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1714,
																"name": "periodFinish",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "5730:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5712:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64",
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5756:90:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56",
																"typeString": "literal_string \"Previous rewards period must be complete before changing the duration for the new period\""
															},
															"value": "Previous rewards period must be complete before changing the duration for the new period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56",
																"typeString": "literal_string \"Previous rewards period must be complete before changing the duration for the new period\""
															}
														],
														"id": 1711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5691:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5691:165:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "5691:165:8"
											},
											{
												"expression": {
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1719,
														"name": "rewardsDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "5866:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1720,
														"name": "_rewardsDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "5884:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5866:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1722,
												"nodeType": "ExpressionStatement",
												"src": "5866:34:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1724,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "5938:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1723,
														"name": "RewardsDurationUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "5915:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5915:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1726,
												"nodeType": "EmitStatement",
												"src": "5910:44:8"
											}
										]
									},
									"functionSelector": "cc1a378f",
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1709,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1708,
												"name": "onlyOwner",
												"nameLocations": [
													"5671:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5671:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5671:9:8"
										}
									],
									"name": "setRewardsDuration",
									"nameLocation": "5617:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "_rewardsDuration",
												"nameLocation": "5644:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "5636:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5636:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5635:26:8"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5681:0:8"
									},
									"scope": 1872,
									"src": "5608:353:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1765,
										"nodeType": "Block",
										"src": "6049:283:8",
										"statements": [
											{
												"expression": {
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1732,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "6059:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1733,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "6082:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6082:16:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6059:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "6059:39:8"
											},
											{
												"expression": {
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1737,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "6108:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1738,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "6125:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6125:26:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6108:43:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "6108:43:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1742,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "6165:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6184:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6176:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1743,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6176:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6176:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6165:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1763,
												"nodeType": "IfStatement",
												"src": "6161:154:8",
												"trueBody": {
													"id": 1762,
													"nodeType": "Block",
													"src": "6188:127:8",
													"statements": [
														{
															"expression": {
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1748,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1275,
																		"src": "6202:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1750,
																	"indexExpression": {
																		"id": 1749,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "6210:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6202:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1752,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "6228:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1751,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "6221:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6221:15:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6202:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1755,
															"nodeType": "ExpressionStatement",
															"src": "6202:34:8"
														},
														{
															"expression": {
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1756,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1271,
																		"src": "6250:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1758,
																	"indexExpression": {
																		"id": 1757,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "6273:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6250:31:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1759,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "6284:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6250:54:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1761,
															"nodeType": "ExpressionStatement",
															"src": "6250:54:8"
														}
													]
												}
											},
											{
												"id": 1764,
												"nodeType": "PlaceholderStatement",
												"src": "6324:1:8"
											}
										]
									},
									"id": 1766,
									"name": "updateReward",
									"nameLocation": "6019:12:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6040:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "6032:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6031:17:8"
									},
									"src": "6010:322:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "de88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d",
									"id": 1770,
									"name": "RewardAdded",
									"nameLocation": "6384:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6404:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "6396:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6396:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6395:16:8"
									},
									"src": "6378:34:8"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 1776,
									"name": "Staked",
									"nameLocation": "6423:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6446:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "6430:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6430:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6460:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "6452:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6452:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6429:38:8"
									},
									"src": "6417:51:8"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 1782,
									"name": "Withdrawn",
									"nameLocation": "6479:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6505:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "6489:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6519:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "6511:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6511:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6488:38:8"
									},
									"src": "6473:54:8"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 1788,
									"name": "RewardPaid",
									"nameLocation": "6538:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6565:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "6549:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6549:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6579:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "6571:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6571:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:38:8"
									},
									"src": "6532:55:8"
								},
								{
									"anonymous": false,
									"eventSelector": "fb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3",
									"id": 1792,
									"name": "RewardsDurationUpdated",
									"nameLocation": "6598:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"indexed": false,
												"mutability": "mutable",
												"name": "newDuration",
												"nameLocation": "6629:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "6621:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:21:8"
									},
									"src": "6592:50:8"
								},
								{
									"anonymous": false,
									"eventSelector": "8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28",
									"id": 1798,
									"name": "Recovered",
									"nameLocation": "6653:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6671:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "6663:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6663:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6686:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "6678:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6678:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6662:31:8"
									},
									"src": "6647:47:8"
								},
								{
									"body": {
										"id": 1809,
										"nodeType": "Block",
										"src": "6811:116:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1801,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6829:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6833:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6829:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1803,
																"name": "rewardsDistribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "6843:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6829:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6864:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																"typeString": "literal_string \"Caller is not RewardsDistribution contract\""
															},
															"value": "Caller is not RewardsDistribution contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																"typeString": "literal_string \"Caller is not RewardsDistribution contract\""
															}
														],
														"id": 1800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6821:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6821:88:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "6821:88:8"
											},
											{
												"id": 1808,
												"nodeType": "PlaceholderStatement",
												"src": "6919:1:8"
											}
										]
									},
									"id": 1810,
									"name": "onlyRewardsDistribution",
									"nameLocation": "6785:23:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6808:2:8"
									},
									"src": "6776:151:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1821,
										"nodeType": "Block",
										"src": "7014:59:8",
										"statements": [
											{
												"expression": {
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1817,
														"name": "rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "7024:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1818,
														"name": "_rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "7046:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7024:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1820,
												"nodeType": "ExpressionStatement",
												"src": "7024:42:8"
											}
										]
									},
									"functionSelector": "19762143",
									"id": 1822,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1815,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1814,
												"name": "onlyOwner",
												"nameLocations": [
													"7004:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "7004:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7004:9:8"
										}
									],
									"name": "setRewardsDistribution",
									"nameLocation": "6942:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "_rewardsDistribution",
												"nameLocation": "6973:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "6965:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6965:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6964:30:8"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7014:0:8"
									},
									"scope": 1872,
									"src": "6933:140:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": false,
									"functionSelector": "91b4ded9",
									"id": 1824,
									"mutability": "mutable",
									"name": "lastPauseTime",
									"nameLocation": "7146:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "7134:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1823,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7134:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 1826,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "7177:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1872,
									"src": "7165:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1825,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "7165:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1856,
										"nodeType": "Block",
										"src": "7364:432:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1834,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "7452:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1835,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "7463:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7452:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1839,
												"nodeType": "IfStatement",
												"src": "7448:54:8",
												"trueBody": {
													"id": 1838,
													"nodeType": "Block",
													"src": "7471:31:8",
													"statements": [
														{
															"functionReturnParameters": 1833,
															"id": 1837,
															"nodeType": "Return",
															"src": "7485:7:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1840,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "7545:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1841,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "7554:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7545:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "7545:16:8"
											},
											{
												"condition": {
													"id": 1844,
													"name": "paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1826,
													"src": "7627:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1851,
												"nodeType": "IfStatement",
												"src": "7623:68:8",
												"trueBody": {
													"id": 1850,
													"nodeType": "Block",
													"src": "7635:56:8",
													"statements": [
														{
															"expression": {
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1845,
																	"name": "lastPauseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1824,
																	"src": "7649:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1846,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7665:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7671:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7665:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7649:31:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1849,
															"nodeType": "ExpressionStatement",
															"src": "7649:31:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1853,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "7782:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1852,
														"name": "PauseChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "7769:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7769:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1855,
												"nodeType": "EmitStatement",
												"src": "7764:25:8"
											}
										]
									},
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "7190:117:8",
										"text": " @notice Change the paused state of the contract\n @dev Only the contract owner may call this."
									},
									"functionSelector": "16c38b3c",
									"id": 1857,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1832,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1831,
												"name": "onlyOwner",
												"nameLocations": [
													"7354:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "7354:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7354:9:8"
										}
									],
									"name": "setPaused",
									"nameLocation": "7321:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "_paused",
												"nameLocation": "7336:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "7331:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7331:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7330:14:8"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7364:0:8"
									},
									"scope": 1872,
									"src": "7312:484:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5",
									"id": 1861,
									"name": "PauseChanged",
									"nameLocation": "7808:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"indexed": false,
												"mutability": "mutable",
												"name": "isPaused",
												"nameLocation": "7826:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "7821:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7821:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7820:15:8"
									},
									"src": "7802:34:8"
								},
								{
									"body": {
										"id": 1870,
										"nodeType": "Block",
										"src": "7861:108:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7879:7:8",
															"subExpression": {
																"id": 1864,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "7880:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e747261637420697320706175736564",
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7888:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f",
																"typeString": "literal_string \"This action cannot be performed while the contract is paused\""
															},
															"value": "This action cannot be performed while the contract is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f",
																"typeString": "literal_string \"This action cannot be performed while the contract is paused\""
															}
														],
														"id": 1863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7871:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7871:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "7871:80:8"
											},
											{
												"id": 1869,
												"nodeType": "PlaceholderStatement",
												"src": "7961:1:8"
											}
										]
									},
									"id": 1871,
									"name": "notPaused",
									"nameLocation": "7851:9:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7861:0:8"
									},
									"src": "7842:127:8",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1873,
							"src": "735:7236:8",
							"usedErrors": []
						}
					],
					"src": "32:7939:8"
				},
				"id": 8
			},
			"interfaces/IZero2HeroWeek2StakingRewards.sol": {
				"ast": {
					"absolutePath": "interfaces/IZero2HeroWeek2StakingRewards.sol",
					"exportedSymbols": {
						"IZero2HeroWeek2StakingRewards": [
							1935
						]
					},
					"id": 1936,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1874,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IZero2HeroWeek2StakingRewards",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1935,
							"linearizedBaseContracts": [
								1935
							],
							"name": "IZero2HeroWeek2StakingRewards",
							"nameLocation": "142:29:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 1881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "201:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "219:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "211:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:17:9"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "251:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "251:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:9:9"
									},
									"scope": 1935,
									"src": "192:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "008cc262",
									"id": 1888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "275:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "290:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "282:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:17:9"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "322:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:9:9"
									},
									"scope": 1935,
									"src": "266:65:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1c1f78eb",
									"id": 1893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nameLocation": "346:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "366:2:9"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "392:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "392:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:9:9"
									},
									"scope": 1935,
									"src": "337:64:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "80faa57d",
									"id": 1898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "416:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:2:9"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "466:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:9:9"
									},
									"scope": 1935,
									"src": "407:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cd3daf9d",
									"id": 1903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "490:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "504:2:9"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "530:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:9:9"
									},
									"scope": 1935,
									"src": "481:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3fc6df6e",
									"id": 1908,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardsDistribution",
									"nameLocation": "554:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "573:2:9"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "599:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:9:9"
									},
									"scope": 1935,
									"src": "545:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d1af0c7d",
									"id": 1913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardsToken",
									"nameLocation": "623:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:9"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "661:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:9:9"
									},
									"scope": 1935,
									"src": "614:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "685:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "696:2:9"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "722:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:9:9"
									},
									"scope": 1935,
									"src": "676:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e9fad8ee",
									"id": 1921,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nameLocation": "763:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:2:9"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "778:0:9"
									},
									"scope": 1935,
									"src": "754:25:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3d18b912",
									"id": 1924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReward",
									"nameLocation": "794:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:2:9"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "814:0:9"
									},
									"scope": 1935,
									"src": "785:30:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a694fc3a",
									"id": 1929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "830:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "844:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "836:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:16:9"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:0:9"
									},
									"scope": 1935,
									"src": "821:40:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "876:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "893:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "885:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:16:9"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "909:0:9"
									},
									"scope": 1935,
									"src": "867:43:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1936,
							"src": "132:780:9",
							"usedErrors": []
						}
					],
					"src": "32:880:9"
				},
				"id": 9
			}
		}
	}
}